User-Centric Portals for Managed Learning Environments
Bin Ling, Colin Allison
School of Computer Science, University of St. Andrews, Scotland, UK, KY16 9SS
{binling, ca}@dcs.st-and.ac.uk
Abstract
There is a growing concern throughout Higher
Education that the gap between what university central
services traditionally provide and what academics
currently need is widening. Members of both the
administrative staff and the academic community (staff
and students) are finding that the performance of routine
tasks is becoming increasingly difficult due to the nature
of their institution’s information systems. These systems
have evolved in an ad hoc basis and are usually
comprised of multiple unconnected data repositories.
Users are often prevented from carrying out work by
inappropriate access control mechanisms and the lack of
appropriate client software. There are broadly two
approaches to addressing this problem. One is the “big
bang”, where all existing systems are replaced
simultaneously with a new single centralised system.
Before such an approach can be taken it is necessary to
fully understand the dynamics of an institutions
information systems, in order to specify the new, all
encompassing system. This is a major task in itself. An
alternative, more attractive, approach is to integrate
existing systems using user-centric portals. This is the
objective of the INSIDE project, which is piloting value-
added services based on distributed information bases, in
order to further the development and delivery of a “joined
up system” for an institution.
1. Overview
1.1. Introduction
Nowadays, along with the use of the World Wide Web
(WWW) becomes more popular within our society,
businesses and institutions are required to migrate a wide
range of services to the web. Difficulties arise where
there are requirements to integrate existing systems
within the migrated and often-extended web based
services. On the other hand, many current HE business
models of administrative interaction can result in
inaccuracies when data is transferred between different
systems. Current procedures may necessitate students
submitting the same data to different departments. This
results in duplication of effort for staff, as departments
across the university may all be involved in the
collection, inputting and maintenance of the same data.
The incongruous unconnected data also causes the
difficulties on the admission and management of
different levels of learning environment. Thus, a
proposed pilot scheme named Institutionally Secure
Integrated Data Environment (INSIDE) in the
Universities of St. Andrews and Durham to address
student and staff’s needs is beginning to highlight areas
of administrative inefficiency in the HE sector as a whole
and promises to improve the entire business process.
The INSIDE project is part of that response to the need
for user-centric information systems, which are
accessible campus-wide in the Universities of St
Andrews and Durham. It is intended that the project will
not “throw technology” at the problem but instead work
with the existing information base to develop a model of
distributed functionality. The intention is to solve the
problems at a high enough level of abstraction to give a
sufficiently generic solution applicable to other HE
institutions. This model will be used to provide value-
added services derived from the existing information
base. The pragmatic goal for this project is the
development of a pilot implementation of web-based
user-oriented portals for university end-users (staff and
students)[1]. There also is a need to review and map the
institutional business processes prior to or concurrently
with the introduction of a user-oriented interface.
The user-oriented portals are built around the identity
of the user and will be dynamically maintained using
information known about the user’s roles and
responsibilities within an institution. They are also
intended to provide a single point of contact to a range of
appropriate services for a diverse and international end-
user community.
1.2. Institutional Portal
Portal technology provides "a pocket-sized version of
the campus Web," says Carl W., director of management
information services at the University of Delaware [2].
Proceedings of the 13th International Workshop on Database and Expert Systems Applications (DEXA’02) 
1529-4188/02 $17.00 © 2002 IEEE 
The institutional information portal is as important to the
web application integration architecture as the browser is
to the client interface. As new advances in Internet and
web technologies are employed, the focus is going to stay
on campus users “self-service” but with an added
dimension of “full-service”.
In some respects “student portals” can be regarded as
one output from an integrated service, and “staff portals”
as another. Therefore an agreed model of distributed
functionality between Departmental and Central systems
is necessary before a relatively comprehensive student
portal can be implemented. This is simply because the
Centre and the Departments both hold information that
should be aggregated to form such a portal, and therefore
must agree on their respective responsibilities before
broadening the integration to accommodate students.
Integration between Departmental learning
environments and a student official record is also highly
desirable. For example, this could avoid multiple IDs
being used when registering a student in different
contexts. Enabling desktop access from Departments to
central records would also allow cohort analysis and
student-cantered profiling which can be used to drive the
educational process and enhance the learning
environment. The School of Computer Science at St
Andrews and the department of Computer Science at
Durham represent the Departmental roles. When the
pilots have completed the new facilities will be extended
to other academic departments.
2. Approaches
A user-oriented value added approach has been widely
adopted in the institutional information systems. This
project is not to completely replace the existing systems
with new systems, but instead it must work with the
existing information base and build services upon them.
Any web based value-added services developed will be
introduced incrementally. In addition, identify the issues
and solve the problems at a high enough level of
abstraction have been sought to give sufficiently generic
solutions applicable to other Higher Educational (HE)
Institutions. Therefore, the role of INSIDE is to provide
the glue that binds together the externally-sourced user
oriented modules, and the related internal developments,
and present HE institutional staff and students with a
single, inclusive portal to all of their information
requirements.
At University of St. Andrews (UOSA), it was decided to
establish a system that would enable it to run a small
pilot in the School of Computer Science before being
able to handle the entire caucus of the other schools and
departments. Since Internet use was common amongst
students, UOSA’s decision to deploy a web-based front-
end for crucial databases, including student records
administration and school information was obvious. The
INSIDE pilot system is based on the concept that a lot of
information is actually not best conveyed in person; the
system involves the development of a personalised access
point for all information and administrative functions
required to support the staff and student experience. It is
well known that it is not appropriate that human
interaction is expended on administrative functions,
instead of where it’s of real value. Therefore, the user-
oriented value added approach is, at least conceptually,
the way the university is enabling the staff to access a
role-based quick link channel to essential university
services and the students to manage their own learning
more actively based on a series of initial domain analysis
processes.
2.1. Information Process Modelling with UML
The goal of modelling business in this project is the
production of descriptions or abstractions of complex
realities within HE institutions, capturing the core
business functions. Some of the reasons to proceed with
the business modelling are:
– To better understand the key mechanisms and
procedures of one determined business, for example, for
synchronising central and departmental systems;
– To act as base of support to the information systems;
– To improve the institutional business and
administrative procedure.
The methodology used in this project for the business
processes representation is very close to the one used in
software modelling, with some subtle differences.
Instead of having object specialisation, process
specialisation is used. The object-oriented approach is a
mature one: it is supported by mature languages and
technologies, it has a common standardised modelling
language, Unified Modelling Language (UML) which
represents the evolution and maturation of several
analysis and design modelling languages such as Booch,
OMT and OOSE. It has been and for many aspects still
is an approach to software development of tremendous
importance [3,4]. In addition, UML is a modelling
language that can be used for business modelling, in the
same way as it has come to be used for software
modelling and it is a language that can be extended and
customized.
It was intended that the use of UML would supplement
each department's specific knowledge and at the same
time facilitate understanding between the staff at the two
university departments when the domain knowledge was
Proceedings of the 13th International Workshop on Database and Expert Systems Applications (DEXA’02) 
1529-4188/02 $17.00 © 2002 IEEE 
compared. At the time it was believed that the joint use
of UML would aid in the identification of the
commonality and disparity in the two different HE
institutions registration processes particularly. This was
considered a necessary first step in the development of
the generic model from which sets of core requirements
for the registration processes were to be investigated.
3. Analysis and Modelling
3.1. Situation Analysis
At regular intervals, people register to become students
at HE Institutions with the intention of meeting a specific
academic target. For example, some may choose to
register for a three year Bachelor of Science degree.
Students provide the HE institution with their personal
and academic details. These details known as student
data are recorded and stored by some mechanism within
the HE institution.
Throughout the time students are registered with an HE
institution, their data is available to be accessed and
modified when appropriate. For example, to record
grades at the completion of a course or a change to the
student's home address. By convention the student data is
held by a central administrative body within an
institution such as Central Services. Ideally Central
Services provides the student data to the administrative
departments and academic units (e.g. school of computer
science) as and when required. The academic units add to
the student data items pertaining to the student's
academic studies such as module enrolment, attendance
and marks.
However, the current procedures in both institutions
necessitate students submitting the same data to different
departments, and the issues of timeliness, accuracy, and
different access mechanisms have resulted in systems
comprised of multiple unconnected student data
repositories. There are also numerous ad hoc record
systems developed at the academic unit level that
replicate work being done centrally. There is therefore
difficulty in co-ordinating changes to the student data
with central services. In addition, there is a lack of
synchronisation between different systems that attempt to
maintain the same data, which information is not
congruent across systems but maintained by academic
departments and central services in the meantime.
Students also suffer in the delays involved in the
transmission of information in paper rather than
electronic format, such as address changes require
excessive queuing.
3.2. Initial Analysis
Analysts at each institution conducted the initial
analysis of each of the HE Institutions’ undergraduate
registration process separately. The general focus was on
central services registration department and the analysts
own academic department. Analysis at both institutions
based their initial domain analysis process on informal
interviews with members of staff (both academic and
administrative) with direct responsibilities relating to the
undergraduate registration. Any available HE Institution
documents unique to the undergraduate registration process
were also used.
As mentioned before, the additional difficulties occur
as a result of the numerous ad hoc record systems
developed at the departmental level that replicate work
being done centrally or vice verse, but that are not co-
ordinated with each other or central services. The main
objective of the INSIDE is thus to significantly enhance
the efficiency of HE administrative processes by using
web technologies to enable a transformation to a dis-
intermediated business model [5]. That is, one in which
all-internal business transactions would be undertaken by
staff and students directly interacting with automated
systems, rather than these transactions having to be
undertaken on their behalf by intermediaries.
3.3. Process Modelling and Improvement
It was believed that a model of the actual registration
process could highlight the areas of difficulty and shed
some light on ways to improve the current situation. The
intention of providing a generic model was also to make
the model available for guiding a pilot system and useful
to multiple HE institutions.
As mentioned above, the student registration pilot
system’s approach consists of investigating and
characterising existing processes, and then using the
insights obtained to inform the development of value
added services by using UML. The general model of the
registration process is generated after a few
investigations. It is divided into two main sections: Use
Case View and Logical View. The Use Case View of the
general registration model is the area within the model
designated for high level modelling and is considered a
core model element that support domain analysis and
requirements gathering [6] for full-time undergraduate
degrees. The model captures the business requirements
within the UOSA and presents the nucleus of the
registration process of the improved system. This area
contains a Use Case diagram (shown as Figure 3.1) that
identifies the key actors (student and staff) of the system
and the tasks they undertake; and sequence diagrams
Proceedings of the 13th International Workshop on Database and Expert Systems Applications (DEXA’02) 
1529-4188/02 $17.00 © 2002 IEEE 
(shown as Figure 3.2) that detail the flow of the control
throughout the system from one object to another. They
show the objects and actors that take part in collaboration
at the top of dashed lines, which represent time as seen
by the object- the object’s lifeline. These diagrams
highlight relations and differences between related
information bases in the context of how the actors will
manipulate them. These high level model diagrams
provide a representation of the processes necessary in the
registration of computer science students at St. Andrews,
and the people (student, administrative staff and
academic staff) and systems that interact with those
processes.
Figure 3.1 Main Use Case Diagram
The Logical View within the context of the general
model is the area designated for the low level modelling
and may be restricted to a particular academic unit within
UOSA. It provides the model of the existing system's
implementation level and the desired changes to the
system. This area contains primarily class diagrams but
can also contain activity diagrams and deployment
diagrams. As the development of the Logical View of the
process progresses it will necessitate changes to the Use
Case View to keep it consistent with the more detailed
Logical View. The Use Case View will become
increasingly specific to the particular academic units
whose process or processes are being modelled. An
example of changing from the Use Case diagram Figure
3.2 (Use Case View) to activity diagram (Logical View)
is shown as Figure 3.3 that describes the student
behaviour that occurs when student enters the on-line
module enrolment system and the sequences that happen
within each activity.
Figure 3.2 Sequence Diagram
Figure 3.3 Activity Diagram
At St. Andrews the level of domain knowledge gained
was sufficient to enable project team to focus on areas
ripe for change and subsequently gather the requirements
for the introduction of added services and new
technology to improve the process. This resulted in the
implementation of a web based student enrolment
system. The introduction of new technology, the
Main Use Case Diagram
Student Records Track System Analysis
Maintain Registry student
da tabase
Issue student ID card
Registry Staff
Apply changes in course slot
allocation
Complete Matriculation Form
Complete Module Enrolm ent
(Course Allocation) Form
Change personal information or
module choices
Student
Autho rise the changes o f the
students info and module changes
Track students for the missed
in formationAdvisor of Studies
Maintain course scheduleCourse
Co-ordinator
Check with MSR report
Maintain local student database
School Secretary
Request course roster and
schedule Tutor & LabDemonstrator
Welcom e Page Stduent Detail & Module
Enrol lment Form
Local DatabasePortal Logon
Page
ITS LDAP
Server
Web Server
: Student
login
send ITS userID&password
authenticate user
clearance/denial
send
choose a module code
send
enrol/unenrol/amend the course module or modify personal detail
submit request
fetch student info & module info
send matched student info back
send request
send a SQL query
send the updated info back
ask for confirmation
confirm
send a confirmation request
confirm the module enrolm ent and deliver the course practical username & password
request logout
send a request for session finishing
logout & display
retrieve
ins ert/clear record from the table and automatically allocate the course practical username & password
Student Module Enrolment System (Student Portal)
Logi n [User ]
valid user?
Student/staff?
Pre-enrolled?
confirm1? confirm2? confi rm3? alreadyallocated
to a group?
SubmitITS UserId
& password
Disp lay
warning Page
Staf f
Choose a module
code and submit
Student
Enrol module
No
Modify
personal detail
No
Unenrol
module
No
Amend
enrolment
Get modif ication
comf irmation
Yes
Get unenollment
comf irmation
Yes
Get comfirmation and course practical
username & passwor de
Yes
Get comfirmation and the original course
practical username & passworde
logout?
Logout
End
Activity Diagram - Student On-line Module Enrolment System
Make
amendment
confirm4
Yes
No
Yes
No
Yes
No
Yes
No
Yes
No
Proceedings of the 13th International Workshop on Database and Expert Systems Applications (DEXA’02) 
1529-4188/02 $17.00 © 2002 IEEE 
magnetic stripe cards and card readers, to the
department's functions in the registration process resulted
in significant changes to the undergraduate registration
process at the departmental level. A model of the new
system was subsequently added to the St. Andrews'
model to ensure a current model of the process.
4. Technical Issues
4.1. Development Tools
The pilot system at UOSA has been developed using
Java 2 Platform, Enterprise Edition (J2EE) to take
advantage of many features of the J2EE, such as "Write
Once, Run Anywhere” portability, JDBC API for
database access and a security model that protects data
even in Internet applications. Building on this base, J2EE
also adds full support for Enterprise JavaBeans (EJB)
components, Java Servlets API, Java Server Pages (JSP),
JavaMail API, Java Naming and Directory Interface
(JNDI) and XML technology [7], which have been
employed along with the pilot system implementation.
The system has also been ported to use the Apache web
server with Tomcat and a MySQL database under Linux,
which makes it much more robust and maintainable.
4.2. Information Bases Interaction
Previous to the pilot, student records were stored in a
Data Warehouse (DW) and only a few staff could access
them from the website. The departmental staff found this
less easy to maintain and alter the student records
through this way. The presence on the project
management group at the University of St. Andrews of
the Director of IT services (ITS) and the Vice Principal
(Student Services) has been helpful in obtaining co-
operation from administrative staff in the Registry, and in
obtaining an pseudo-ODBC connection from the Student
Records system - SITS to the INSIDE development
server.
At the moment there are some users selected from the
school of computer science. The information is pulled off
the Ingres database to a MySQL database server before
running a query, the connection is still not completely
ideal as it comes by way of an Ingres database in the
middle DW, which relies on a proprietary Ingres driver.
Nevertheless, it has resulted in the formation of a
Departmental database that incorporates both
Departmental and Central versions of module lists, plus
information only maintained at the Departmental level.
The potential benefit of the Departmental database has
forced a major appraisal and rationalisation of
Departmental data management. Perhaps the major
result from this pilot is the concept of a Departmental
node, which is maintained entirely by the Department,
but which can interoperate in a trusted manner with the
Central services. The pilot services returned data to the
Registry in a format suitable for them to amend their
records electronically. Thus, a component-based
application is expected which could be used to access any
databases when it changes from Ingres at a later date.
4.3. Securities and Authentication
Since personal user information will be gathered and
displayed, a robust security and privacy policy must be
defined and implemented. This secure environment must
facilitate user authentication, user authorisation and
private secure communications. Authentication and
authorisation are managed by the LDAP (Lightweight
Directory Access Protocol ) servers where user account
and user groups are defined and managed. It is ensured
that no resource can be used by an anonymous user,
ensuring an authenticated logon has to occur. The use of
LDAP authentication to authenticate people using the
INSIDE system brings two advantages. Firstly users
would only need to remember one set of usernames and
passwords. Secondly administration of (lost, revoked, out
of date) passwords would cease to be the responsibility of
INSIDE administrators, an important consideration given
the well-known workload stresses faced by university
staff.
Currently there are two authentication authorities that
could be used for this pilot system at UOSA – ITS and
DCS (school of computer science). Both hold
information on students and could act as authentication
authorities. ITS runs a SLDAP server, which has been
used to authenticate users and DCS has recently began to
operate an runs a OpenLDAP server. The main goal of
linking these is to allow the INSIDE system to
authenticate a user against multiple authentication
authorities. It is proposed to overcome the problem of
determining which authority to use by allowing the user
to choose from a list. So when a user comes to log onto
the system, they chose an authority and then provide a
username and password. If they are authenticated
successfully INSIDE will then allow access to resources.
5. Success
Thus far, the web-based value-added services available
are: a module comparison generator – this checks local
records against those held by Student Records and
generates reports on differences; a staff-operated portal
for module enrolment – it allows staff to enrol students at
School level for any module and this is often essential for
School purposes of allocating tutorial groups, lab slots
and similar. In addition, students’ matriculation cards
Proceedings of the 13th International Workshop on Database and Expert Systems Applications (DEXA’02) 
1529-4188/02 $17.00 © 2002 IEEE 
could be used with the web interface; a student portal for
module enrolment – students are authenticated by ITS or
DCS user id and password. A page displays part of their
records, and has questions and information specific to the
module such as tutorial and lab times (shown as Figure
5.1). This effectively lets the student enrol from
anywhere, anytime and any browser. In addition, a
student attendance record pilot is running, which
provides the feedback of the lecture and practical for
students and staff. The successes of this pilot system are
[8]:
• it eliminates several paper trails
• it provides card-based authentication of students
enrolling for modules at the School-level
• it automatically checks for module pre-
requisites
• it allows students access to their own record via
the web, with the opportunity to submit
corrections
• electronic reconciliation of module lists
maintained by Student Records and the School
• elimination of redundant data maintenance and
duplicate data entry between Registry and
School
• towards the “School node” as an information
system (IS) that can interact with central IS
• it more clearly couples module records with the
TAGS [9] learning environment
Figure 5.1 Student On-line Module Enrolment
Interface
6. Relevant Work
Some work has been done on the HE administrative
model and campus portal areas. In the UK, a major
consultative exercise in Liverpool John Moores
University (JMU) indicated that students and staff were
spending too much time dealing with administrative
functions. The university turned this situation around by
investigating the adoption of a disintermediated
administrative model [10]. JMU has embarked on an
intranet-based direct access system, utilising Microsoft
software tools and funded under the JISC Technology
Application Programme (JTAP), which aims to put
administrative interaction into the students’ own hands.
Plans for the pilot scheme’s expansion to the whole
university are both linked to and dependent on associated
process reengineering.
In the United States, University of California (UCLA)
was the early leader in higher education portals with the
introduction of MyUCLA. MyUCLA successfully
adopted the Excite model, providing a wide range of
services from a clean, consolidated, customisable
interface. More recently the University of Minnesota’s
MyOneStop has demonstrated how a channel can deliver
not only information but also “process”: that is, an
application that performs a function or transaction.
MyOneStop contains URL lists, text display, JAVA
applets, and application interfaces.
Recently, two-dozen colleges including Boston
College, Columbia University, Cornell University,
Florida State University, Princeton University, the
University of British Columbia, the University of
California, the University of Chicago, the University of
Minnesota, the University of Texas, the University of
Washington and Yale University are working with a
small software firm to develop what they say is the
essential code for building a college or university portal
uPortal [11]. uPortal is a free, sharable portal under
development by institutions of higher-education. This
group sees an institutional portal as an abridged and
customized version of the institutional Web presence... a
"pocket-sized" version of the campus Web. It allows each
user to define a unique and personal view of the campus
Web. Community tools, such as chat, forums, survey, and
so on, build relationships among campus users.
7. Conclusions and Further Work
This paper describes a user-oriented value added
approach to model the HE institutional business
processes by introducing a joined project INSIDE, which
works with the existing information base to develop a
model of distributed functionality that allows for
mediated interoperability between online learning
environments and both Central and Departmental
systems. The project’s methodology consists of
investigating and characterising existing processes. In
particular, through trial and refinement, it uses the
insights obtained to inform the development of value
added services by using software engineering tools –
UML, which has been used to model the business of an
Proceedings of the 13th International Workshop on Database and Expert Systems Applications (DEXA’02) 
1529-4188/02 $17.00 © 2002 IEEE 
industrial company of apparel and has advantages that
make of it an appropriate language for the business
modelling, namely. This paper outlines the analysis and
modelling experiences within the two HE institutions, the
problems encountered and the approach eventually
developed and used successfully in business processing.
INSIDE has produced a sustainable model of the
University’s information flows and processes based on
analyses and formal modelling techniques and the
piloting of value-added services based on the analysis of
existing processes. Most of the value-added services
developed to date have involved innovations in data
sharing and information flow between the School of
Computer Science and Student Records. Successes
include eliminating several paper trails, providing card-
based authentication of students enrolling for modules at
the School-level and elimination of redundant data
maintenance and duplicate data entry, etc.
It can be foreseen that by reducing the involvement of
staff in non-value-adding and intermediate administrative
roles, we should be able to offer consistent access to
quality information and processes for staff and students.
Information that is not restricted in either geography or
time. Students will be able to see their progression on-
line, as the system will hold transcripts of assessment,
module information will be regularly updated and
important messages will appear on the desktop of the
portal site.
However, the INSIDE project’s progress in terms of
impact on end-users was unavoidably affected by the
initial technical focus, when many of the problems and
issues that have arisen have been people-related or
organisational. This technical focus, along with the short
timescales, meant that assumptions had to be made about
what users would wish to see in a user oriented self-
service interface, without engaging with the users in
identifying their requirements. Further phases of the
project will investigate into the development of a Student
Record exchanged system that would allow student
records to be exchange between HE Institutions is the
next large investigation in the INSIDE project. This will
allow the progression of the generic registration process
model to a more useful generic student information
model. As the exploration of the use of XML and IMS
Enterprise open standard [12] will be part of this
investigation due to its growing support and deployment
in Web environments.
8. Acknowledgement
The work described in this paper is part of the project
INSIDE [13], which is funded by the JISC Committee for
Integrated Environments for Learners (JCIEL) under the
Building Managed Learning Environments in HE (7/99)
programme. INSIDE is a collaborative project between
the Universities of St Andrew and Durham. The work
described here has involved contributions form
colleagues at both universities. We are especially grateful
to our colleagues Alex Bain, Gail Ritchie; and our
research partners Janet Lavery and Cornelia Boldyreff at
Durham.
9. References
[1] Allison Colin, Bain Malcolm, et al (2000) "An
Institutionally Secure Integrated Data Environment". In
JCIEL Managed Learning Environments Bid
[2] Jacobson Carl (2000) “New Horizons – Institutional
Information Portals”, EDUCAUSE Review July/August.
[3] Herzum, P., and O. Simms (1999), Business
Component Factory, OMG Press
[4] OMG-Object Management Group 2000a, “OMG
Unified Modeling Language Specification”, Version 1.3,
ad/00-03-01
[5] Townsend John & Hendy Derek (1999)
“Disintermediated Student Record Access – the S3
(Student/Staff/Systems Self-Service)”. Liverpool John
Moores University
[6] Rational Rose Tutorial part of Rational Rose 2000,
Copyright © 1991-1999, Rational Software. Corporation.
Stevens, P., Pooley, R. (2000) Using UML: software
engineering with objects and components, Addison-
Wesley, ISBN 0-201-64860-1
[7] Java Sun Web site: (http://java.sun.com/j2ee/)
[8] Allison Colin (2001) “JCIEL Programme Progress
Report, 01 January 2001 – 20 June 2001”
[9] TAGS Project (http://www.tags.ac.uk)
[10] “University portal gives students direct access”
(2000) Microsoft Case Study.
[11] Gelernter David (1991), Mirror Worlds (New York:
Oxford University Press), 3.
[12] Gleason Bernard (2001) “Portal White Paper”
http://crayfish.mis.udel.edu/maria/uportal/whitepaper200
1.pdf
[13] INSIDE: An Institutionally Secure Integrated Data
Environment, (http://www.dcs.st-and.ac.uk/INSIDE)
Proceedings of the 13th International Workshop on Database and Expert Systems Applications (DEXA’02) 
1529-4188/02 $17.00 © 2002 IEEE 
