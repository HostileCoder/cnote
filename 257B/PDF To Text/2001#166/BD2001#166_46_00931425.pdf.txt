Relative Orbit Design Tool 
Mark V. Tollefson 
Dynacs, Inc. 
1900 Randolph Rd. SE, Suite D 
Albuquerque, NM 87106-4266 
Mark.Tollefson@kirtland.af.mil 
(505) 853-4113 
Abstract- A software tool was developed to facilitate the 
design of sets of satellite orbits such that the satellites 
always remain in close proximity to one another. The 
group of satellites is typically referred to as a cluster, and 
the close proximity motions are often termed formation 
flying. Such relative motion is well understood only for 
near-circular orbits, and no method existed to easily and 
rapidly design a cluster and compute the orbital parameters 
for the individual satellites. This tool provides that 
functionality with a graphical user interface to allow almost 
anyone to easily design and analyze relative orbits. The tool 
has several additional capabilities. It displays close- 
approach information for collision detection. It displays the 
relative orbits using a two-body orbit propagator so the 
effects of elliptical orbits can be studied. It exports the 
orbital data in several formats to facilitate further analysis. 
TABLE OF CONTENTS 
1. OVERVIEW 
2. COORDINATE SYSTEM 
3. HILL’S EQUATIONS OF MOTION 
4. RESTRICTED CASE SOLUTION 
6. TOOL DESCRIPTION 
5. POSSIBLE RELATIVE ORBITS 
7. VERIFICATION 
8. CONCLUSIONS 
10. ACKNOWLEDGEMENTS 
9. REFERENCES 
1. OVERVIEW 
There are several research efforts in both the government 
and commercial sectors that are looking at the possibility of 
using a group of small satellites to cooperate to do missions 
that currently require a single large satellite. The group of 
satellites is typically referred to as a cluster. The satellites 
within a cluster always remain in close proximity to one 
another, often termed formation flying. The advantages of a 
cooperative approach include reduced launch costs, 
increased launch flexibility, more on-orbit reconfiguration 
options, and improved fault tolerance, among many others. 
Note that the formation flying discussed in this paper is 
done without thrusting, and that each individual orbit is 
independent of the others. Also note that the formation is 
generally not a static pattern as one would have with a 
0-7803-6599-2/01/$10.00  2001 IEEE 
formation of aircraft, but more like a choreographed dance 
that is repeated every orbit. In the absence of perturbing 
forces, the formation flying would continue indefinitely, 
without guidance from either man or machine. 
The ability of a cluster to accomplish an assigned mission is 
often dependent upon the relative positions of the satellites. 
For instance, in a radar mission, the small radar antennas on 
each satellite could be electronically tied together to 
produce a synthetic aperture similar in size to the 
dimensions of the cluster (much larger than the sum of the 
sizes of the individual antennas). However, the maximum 
dimensions of the cluster are not the whole story. If the 
positions of the individual satellites within the cluster are 
not appropriate, the synthetic aperture will function very 
poorly. 
For proper operation, a cluster must be designed so that the 
individual orbits of its member satellites have identical 
orbital periods, with other aspects of the orbit only slightly 
different. If these constraints are not met, the satellites will 
not remain close together. In addition, however, the orbits 
must be chosen so that the positions of the satellites within 
the cluster are appropriate to accomplish the mission, and 
that they remain appropriate over many orbits. 
The sofhvare discussed in this paper facilitates the initial 
design of a cluster, allowing the user to easily determine 
how the individual satellite positions within the cluster 
change over the course of an orbit. It also provides the 
resulting orbital information in several forms to simplify 
further analysis with other software tools. 
2. COORDINATE SYSTEM 
The following discussion will use a (non-inertial) coordinate 
system centered on a reference satellite to describe the 
motion of a nearby satellite. This coordinate system will be 
used: 
x-axis away from the center of the earth 
y-axis forms a right-handed system 
z-axis along the orbital angular momentum vector 
(The y-axis is generally in the direction of the velocity 
vector, but the y-axis and velocity vector always coincide 
only for a circular orbit.) Vallado [l] refers to this as the 
RSW coordinate system, and the (x, y, z) directions as 
(radial, along-track, cross-track). The author prefers to 
7-3471 
think of this coordinate system in terms of a (very tall) 
person standing on the earth with his head centered on the 
satellite and looking out horizontally in the direction of the 
velocity vector. With this mental image, the (x, y, z) 
directions become (up, front, left), and this terminology is 
used for describing the relative motions in section five. 
3. HILL’S EQUATIONS OF MOTION 
If a simple 2-body (earth and satellite) equation of motion is 
written for each of two satellites, one can solve for the 
position of the second satellite relative to the first in the 
coordinate system described above. We will make two 
assumptions, first that no thrusts or external forces (other 
than gravity from a spherical earth) affect the satellite 
motions, and second that the orbit is nearly circular. We 
then make a simplification by dropping some higher-order 
terms in a series expansion, The resulting equations of 
motion are known as Hill’s equations: 
j t -2mj -3o2x=0  
jj + 2mi = 0 
5++O22=0 
where: 
2n 
03 = orbital - period 
The solution to these equations is: 
x = % sin(cot) - (3x0 + +) cos(mt) + 4x0 + + 
y = (6x0  + >) sin(ot) + $cos(mt) 
-(6wx0 + 3 P 0 ) t + y 0  -2 
z = zo cos(mt) + io sin(mt) 
A detailed description of the development of the above 
equations may be found in Vallado [2]. 
4. RESTRICTED CASE SOLUTION 
The equation for y contains a term that is linear in time, t. If 
this term is non-zero, then the separation between the 
satellites will continually increase, and they will no longer 
be flying together. If we force this term to zero, we are 
essentially requiring that the initial position and velocity 
result in identical orbital periods for the two satellites. This 
greatly simplifies the form of the solution. Re-writing the 
solution and substituting new constants (A, B, C, a, and 6) 
for collections of the original constants yields: 
x = A sin(mt + a )  
z = Csin(mt + 6 )  
y = 2 A c o s ( m t + a ) + B  
Examination of this restricted case solution reveals that the 
motion in the z direction (left-right) is completely 
independent of the motion in the x and y directions. 
However, the x motion and y motion are coupled. 
The z motion is a simple side-to-side sinusoid. The phase 
constant, 6, allows the satellite to be at any position in the 
sinusoidal motion at whatever start time is chosen. 
The x and y motions jointly trace an ellipse which is twice 
as large in the y (forward-back) direction as it is in the x 
(up-down) direction. The phase constant, a, allows the 
satellite to be at any point on the ellipse at the desired start 
time. 
The final constant in the y equation, B, determines where 
the center of the ellipse is located. This corresponds to one 
satellite leading or trailing the other on average. 
5. POSSIBLE RELATIVE ORBITS 
The five constants in the solution to the restricted case (A, 
a, B, C, and 6) allow us to describe relative orbits in 
consistent terms. Notice, for instance, that exactly the same 
relative path is traveled for a fixed selection of these five 
constants regardless of the orbital period. It takes longer to 
traverse the path when the orbital period is longer, but the 
same relative path is traversed. Also notice that all three 
equations are cyclical with a period equal to the orbital 
period. 
Let’s examine some specific cases and the resulting relative 
motions. 
A=O, B=O, C=O 
This case gives no relative motion and no relative 
displacement. The two satellites occupy the same space. (It 
is not advisable to attempt this with actual satellites.) 
A=O, B>O, C=O 
This results in the two satellites traveling in exactly the 
same orbit, but with one leading the other by a constant 
distance, B. 
A=O, B=O, 0 - 0  
This results in straight-line sinusoidal motion in the left- 
right direction with the two satellites again trying to occupy 
the same space when the centerline is crossed. 
A>O, B=O, C=O 
This results in elliptical motion in the up-down and front- 
back plane, as shown in Figure 1. Although the satellite can 
be made to start at any point on the ellipse by choice of the 
phase constant, a, a general description of the path would 
be: from a position directly in front, the satellite moves 
upward and directly over the top, downward to pass directly 
behind, and then down and directly under, and finally back 
to the front. 
7 - 3 4 7 2  
Figure 1 - A>O, B=O, C=O 
A>O, B>O, C=O 
This results in elliptical motion in the up-down and front- 
back plane exactly as the above, except that the center of the 
ellipse is leading by a constant distance, B. This path is 
shown in Figure 2. 
Figure 2 - A>O, B>O, C=O 
A>O, B=O, 0 0 ,  a = 6 
This is probably the most typical case. There is motion in 
all three directions, and the motion is a “tilted” ellipse as 
shown in Figure 3. As always, the satellite can start 
anywhere on the ellipse, but the general description of the 
path would be: from directly in front, the satellite moves 
upward and to the left, passing by to the lefl and above, 
moving to a position directly behind, and then passing by on 
the lower right, and finally returning to directly in front. If 
the two phase constants differ by 180 degrees, then the “tilt” 
is to the right rather than to the left. 
Figure 3 - A>O, B=O, 0 0 ,  a = 6 
A>O, B=O, 0 0 ,  arbitrary a and 6 
Finally, if there is an arbitrary difference in the two phase 
constants, then the motion is still an ellipse, but the ellipse is 
“skewed” and the satellite is never directly in front, behind, 
above, or below. A description of one such path, shown in 
Figure 4: fiom a position ahead and to the left, the sateflite 
moves up and passes by to the upper left, it then crosses 
behind while still well above, and then moves to the rear- 
right. It then moves downward passing to the lower right, 
then passes in front well below, and finally returns to the 
position ahead and to the left. 
Figure 4 - A>O, B=O, 0 0 ,  arbitrary c1 and 6 
6 .  TOOL DESCRPTION 
Although the five constants discussed above can describe 
any relative orbit that has the identical orbital period, 
determining the effect on the orbital elements is not 
straightforward. For instance, let’s say you want a relative 
orbit of the simple straight-line left-right motion, given by 
A=O, B=O, 0 0 ,  6=x/2. If the reference satellite is in a polar 
orbit, then the second satellite needs a change in the right 
ascension of the ascending node. But if the reference 
satellite is in an equatorial orbit, then the second satellite 
needs a change in inclination, instead. Solving the general 
case is best left to a computer. 
The Relative Orbit Tool (rotool) was designed specifically 
to allow a user to easily design a group of satellites which 
remain close to each other to fulfill a common mission, and 
once this group is defmed, to make the orbital elements and 
other information easily available for further analysis. 
The tool exists for two computer platforms, Linux and 
Windows NT. 
The tool accomplishes this with three separate displays, 
which are described next. A single window holds the user’s 
choice of one of the three displays at a time. 
Display One 
This display allows the user to define the reference orbit. 
The orbit is defined with classical orbital elements, but with 
interactive graphics, sliders, drop lists, and radio buttons to 
facilitate the design. Changes in the orbit are immediately 
reflected in a world map display that shows the ground track 
of the satellite, By trial-and-error, a user inexperienced with 
orbits can still quickly design an orbit without learning all 
7-3473 
the terminology. However, an experienced user has access 
to the raw numbers and can modify them directly. In 
addition, related values can be set directly. For instance, 
instead of setting the semi-major axis, the orbital period 
may be set. Alternatively, setting the apogee and perigee 
altitudes will also set both the semi-major axis and 
eccentricity values. Display One is shown in Figure 5 .  
The main difference between this reference orbit and the 
reference satellite discussed with the equations above, is that 
there need not actually be a satellite flying on this reference 
orbit. The user may add a satellite to the reference orbit if 
desired, but it is not required. The reference orbit may be 
thought of as the orbit of a virtual satellite, or as simply the 
center of a cluster. (There is no requirement that a cluster 
actually be centered on the reference orbit, but it is 
commonly done.) 
Display Two 
This display, the real heart of the soha re ,  is shown in 
Figure 6.  It allows the user to define relative orbits for as 
many satellites as desired. At the top of the display are 
three orthogonal views of the satellite paths, which are 
immediately updated as changes are made. On the lower 
part of the display are the interface tools used to create and 
modify the relative orbits. 
Relative orbit design starts with the definition of the first 
path. A path is a specific ellipse (or degenerate ellipse) 
defined by setting four of the five constants described 
above. This ellipse is determined by setting four graphical 
sliders and watching the displayed shape of the resulting 
path. However, the four sliders do not directly correspond 
to the four constants. Instead, the sliders describe aspects of 
the ellipse in more intuitive terms, such as the “size” and the 
- File T K  Jnfo 
Absolute Positioning ~ Relative Positioning Propagated Path I 
Mar . 
Orbit Shift 
Cluster Position 1 
x x  
Starting Position: 
N. Latitude. 45.31 deg (ascending] 
E. Longitude: 248.72 deg 
Prograde 
Retrograde 
%mi-Major Axis (km) 7000 
””- 
Eccentricity ;0.0001 
lncllnation (deg) 61.65 
x 1  
$--- - Right Ascension (des) 256.68 
- Argument of Perigee (deg) ,O 
- Mean Anomaly (deg] ‘53,64 
period (minutes) 37 1413003 
Apogee Altitude (km) E22.565 
Perigee Altitude (km) 621,165 
~- 
I 
I X  
-- 
Figure 5 - Display One 
7 - 3 4 7 4  
"-- - _- ~~ ^ ^  1 1 1 Eile STK info 1 4 Absolute Positioning Relative Positioning Propagated Path 
Paths 
On Refetence Orbit 
/ Inner ring 
Middle ring 
Outer Ring 
P Lead, side-to-side 
" E  
Path "Middle ring 
&dd Satellite Remove Satellite 
" A *  I I " 
--. /--- *,- --x r', 36 deg 9,324 deg % \ \  
/ /\ 
_- " - " " "  
EO 
I- _ " _  
49 FE 
i 
6, 108 deq 
Figure 6 - Display Two 
"tilt" of the ellipse. The remaining constant (actually a 
combination of both phase constants, c1 and 6) is set by an 
additional slider, which controls where on the path the 
satellite is located. 
One of the unique aspects of this tool is how paths are used. 
Once a path is defined, any number of satellites can be 
added to the path, each with its own phase constant so they 
may be spaced around the ellipse. (Each satellite is also 
given a unique identification number of the user's choice.) 
A button is provided to set equal spacing in the phase of all 
of the satellites on a path. Another slider is provided to 
change the phase of all satellites on a path, either to achieve 
a certain distribution at a desired time or to move these 
satellites relative to those on another path. In addition, a 
circular display shows the phase of each of the satellites on 
the current path. The user may use the mouse to select one 
of these satellites or to drag it to a new position. Satellites 
can, of course, also be removed if desired. 
But the path is not fixed just because there are satellites 
attached to it. The designer can always move a slider to 
change the path, and all the attached satellites are modified 
to follow the new path. Further, the user can return to 
display one and change the reference orbit, and once again, 
all of the satellites are modified. 
The program allows up to eight separate paths to be created, 
and all of the satellites and all of the populated paths (those 
with satellites) are shown on the three orthogonal views. 
The paths are initially just numbered, but the user may 
change the name of a path to something with meaning, such 
as "tilted 45 degrees" or "Inner ring". 
Finally, this display has an animate button which will show 
the dynamic motion of the satellites throughout a single 
orbit, which corresponds to a single traversal of the path for 
each satellite. 
7 - 3 4 7 5  
Figure 6 shows several of the possible relative orbit paths 
rather than a practical cluster for a particular mission. There 
are 17 satellites in the cluster. The first satellite is placed 
exactly on the reference orbit. The next three are on a small 
vertical ellipse. The next five are on a slightly larger ellipse, 
tilted at about 50 degrees. This path is the currently selected 
path, and it is shown in a different color from the other 
paths. The currently selected satellite on this path is 
enclosed in a rectangular box. The next seven satellites are 
on a large ellipse with an arbitrary orientation. The final 
satellite is leading the reference point and is moving in a 
straight-line side-to-side relative motion. 
Display Three 
The only problem with display two is that the ellipses are 
those predicted by the solution to the restricted-case Hill's 
equations. While these are very good most of the time, they 
are still approximations. Display Three, shown in Figure 7, 
is one step closer to reality. It uses a two-body orbit 
propagator to determine the satellite locations rather than 
using Hill's equations. 
There are important computational problems associated with 
the change from a Hill's solution to a formulation where the 
real reference orbit is used. The most noticeable problem 
occurs when the starting relative position and velocity 
values computed using the solution to Hill's equation are 
added to the true absolute position and velocity from the 
reference orbit. The resulting orbit does not, in general, 
have the same orbital period, and thus the satellite moves 
continually away from the reference point. This error in 
period and other effects due to the approximations and 
linearizations used in the Hill formulation receive special 
computational attention, and corrections are automatically 
applied. For the orbital period problem mentioned, the 
relative velocity is slightly modified to correct the period. 
"- " " "  -- " _ ^ 1  - - - x  1' 4isolute Positioning I Relative Positioning -Propagated Path ~~ 
- Animate 
Figure 7 - Display Three 
7-3476  
Display three has the same three orthogonal views as 
display two (except for the source of the displayed data). 
These views, however, do not display the ellipses, since the 
ellipse solutions are only approximations from Hill’s 
equations, and do not apply to this display. The display also 
shows the same world map as shown on the first display, but 
in a reduced size. Finally, this screen displays a graph of 
the close approach distances as a function of time. 
The values displayed on the close approach graph represent 
the nearest that any pair of satellites come to each other, as a 
function of time. For instance, at the start of an orbit, the 
closest satellites may be those numbered three and five with 
a separation of 20 meters. Five minutes later, they may 
have moved closer, down to 15 meters, but the graph might 
show that another pair, those numbered two and six, have 
moved to within 10 meters. The primary utility of the 
graphed data is to identify satellites that are in danger of 
collision. 
The close approach graph is the most important source of 
user interaction on this display. By clicking the mouse 
anywhere on the graph, the corresponding time is selected. 
A marker line is drawn from the horizontal axis of the graph 
up to the graphed value to mark this time. All of the 
displays (the three orthogonal views and the world map) are 
updated to display satellite positions at that time. The 
specifics about which satellites are closest and their 
separations are shown in a text box in the lower left corner 
of the display, and the satellites in the three orthogonal 
views are color-coded to indicate the close approach pair. If 
the user drags the mouse across the graph, the displays 
change to always reflect the corresponding time. 
To view an entire orbit, there is also an animate button. 
This relieves the user of the tedious task of dragging the 
mouse all the way across the graph. 
The final feature of display three is that if the mouse is 
placed over any of the satellites in the orthogonal views, that 
satellite’s identification number and orbital elements are 
displayed in the text window in the lower left corner. 
Figure 7 shows the same cluster of 17 satellites that was 
used in Figure 6, and the same reference orbit that was used 
in Figure 5 .  The satellites involved in the close approaches 
shown in the graph are those in the innermost ellipse when 
they are near the center satellite, and those in the outermost 
ellipse when they are near the leading satellite. The closest 
approach occurs when the leading satellite is near the center 
of its left to right motion at the same time a satellite on the 
large ellipse is passing nearby. 
Menu options 
Several menu options are available from any of the three 
displays. A design can be saved to disk at any point in the 
design process and reloaded later. All information about the 
design is saved, and the user may modify any aspect when it 
is reloaded. 
When a design is saved, the file contains three separate 
sections. The first is standard two-line element sets for all 
of the satellites and for the reference orbit. (The reference 
orbit has identification number zero.) The second set of 
data is the XYZ position and velocity for each of the 
satellites (at the starting time) in ECI (Earth-Centered 
Inertial) coordinates. The third set of data is the format used 
internally by this program to allow reloading without the 
possibility of rounding errors caused by conversion from 
other formats. 
The program also has specific support for interface to 
STK@, the Satellite Tool Kit, a commercial orbital analysis 
tool. The relative orbit tool can write files in the format 
used by STK. These files may be easily E-mailed to 
colleagues and loaded into STK at their location. 
Alternatively, if STK is loaded and running with the 
Connect@ module on a computer to which you have access, 
the relative orbit tool can talk directly to STK via the 
Internet, load the satellites, and start the STK animation 
running. 
7. VERIFICATION 
The output from this program has been read into the 
Satellite Tool Kit software. Good agreement was found in 
both absolute position of the reference orbit and in the 
relative motions of the other satellites. In addition, the 
output has been used to initialize satellite locations for the 
Air Force Research Laboratory (AFRLNSSW) Distributed 
Architecture Simulation Laboratory (DASL) Testbed, with 
expected results. 
8. CONCLUSIONS 
The relative orbit tool is used for designing a group of orbits 
so that the satellites all remain close together, following 
known trajectories. The tool successfwlly abstracts the 
design process, allowing almost anyone to easily design a 
set of relative orbits that would be difficult for an expert to 
design without the tool. 
9. REFERENCES 
[ 11 David A. Vallado, Fundamentals of Astrodynamics and 
Applications, New York: McGraw-Hill, 1997,42-43. 
[2] David A. Vallado, Fundamentals of Astrodynamics and 
Applications, New York: McGraw-Hill 1997, 343-35 1. 
10. ACKNOWLEDGEMENTS 
This program was developed for the Space Vehicles 
Directorate of the Air Force Research Laboratory. Their 
funding of the development of this software is greatly 
appreciated. The software was co-authored by Mr. Jeremy 
Rosenstock, an employee of Jackson and Tull. Efforts are 
underway to make the software available commercially. 
7-3477  
Mark V.  Tollefson is currently 
supporting the Space Vehicles 
Directorate of the Air Force 
Research Laboratory at Kirtland 
AFB, in Albuquerque, NM, as an 
employee of Dynacs Engineering. 
He is a retired Air Force 
Lieutenant Colonel and has 
considerable experience in space 
operations. His prima ry areas of expertise are software 
design and development, physics, and astrodynamics. He 
has designed successful sofivare for numerous and varied 
applications, including: education, scientific analysis, 
scientific visualization, astrodynamics, modeling and 
simulation, distributed computing, and manufacturing 
quality control. Mark holds a B.S. in physics from Bradley 
University and an M S .  in solid state physics from Iowa 
State University. When not at work or participating with his 
church’s youth group, he can often be found singing the 
bass part in barbershop harmony. 
7 - 3 4 7 8  
