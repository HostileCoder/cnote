An Efficient Visualization of Hierarchical Structures 
Su-You1 Mun 
Dept. of Office Information, Jinju Health College, Korea 
E-mail : sulO@hc.ac.kr 
Seok-Wun Ha 
Dept. of Computer Science, Gyeongsang National University, Korea 
E-mail swha@nongae.gsnu.ac.kr 
Abscracr-This study suggests a visualization technique 
to display as many nodes as possible by optimizing 
distance between infomation nodes when hierarchical 
sbuctures on a large scale are presented in a limited 
space such as a display sctven. This suggested 
technique enables you to get the whole idea of the 
stmcture of web pages with multi-level hypedinks or 
with a patient management structure of big hospitals. 
I .  INTRODUCTION 
The recent development in information technology 
has led to an accumulation of massive amounts of 
data and a complicated relationship between data. 
Therefore, studies have been consistently made to 
show this relationship effectively [ 1-41. Though many 
three-dimensional display techniques have been studied 
lately [5-41, some studies suggest that two-dimension 
is more effective to display a large quantity of 
hierarchical information [7], 
Too many nodes on a limited screen hinders the 
clear understanding of a whole hierarchical structure 
when it i s  needed [XI. To solve this problem, a 
visualization technique to handle the node arrangement 
and distance among nodes is necessary. 
This study suggests a visualization technique to 
display many nodes in a limited screen by removing 
the Iine overlap and rapid bending with a two-step 
arrangement, and then by allocating space between 
nodes, applying weight value based on the type of 
and number of node. Since this technique makes i t  
possible to display as many nodes as possible, it is 
easy to present the whole linked structure of data that 
form. a hierarchy, and understand the flow of data 
linked in the hierarchical structure. 
a. RELATED STUDIES 
0-7803-8940-9/05/$20.00 2005 EEE. 
- 419 - 
Tree is a classical method to visualize a 
hierarchical information structure [I]. it can display 
many nodes, but hardly support interaction between 
nodes. Other methods for an effective display of  
interaction are cone-trees [2], tree-maps [3], and 
hyperbolic browser[4], which of them highlight 
peripheral information and related tracks centered on a 
node at a specific level, but are inappropriate for the 
display of many nodes and for the understanding of a 
whole hierarchical structure. 
Tree is generally used to view the distribution of a 
whole hierarchical structure. If tree of a hierarchical 
structure, however, i s  composed of more than three 
levels and 50 nodes in the third level, the structure is 
hard to be displayed in a limited screen [SI. Because 
lines connecting nodes from the higher level to the 
lower are overlapped or those from the root to the 
lowest rank are rapidly bent, which prevents a clear 
vision. Therefore, i t  needs to remove the line overlap 
and alleviate bending, and minimize distance between 
nodes. This allows people to display more nodes on a 
limited screen when visualizing a hierarchical structure 
~91. 
m. SYSTEM IMPLEMENTATION 
The whole process of system implementation is as 
follows: First, as shown in W.Y.Yoo's study [lo], 
create the number of nodes 'n for each group and 
each level, applying a classical node allocation 
method that gives a certain space per node. And sort 
nodes in the center by descending order. Then, 
manage space between nodes by appIying weight 
value depending on the type of and number of nodes. 
FinalIy, display 
The system simulating the algorithm suggested by 
this study i s  as in Fig. 1 .  
nodes in a concentric ring. 
. - 
i I 
r- 
l ~ .  . . . 
! 
A Output Design . 
To display a node randomly created on the screen, 
various systems should be implemented without 
limitation. Yet, the system i s  designed to display up 
to 500 nodes taking the performance of a test system 
into consideration. 
Also, the system will implement level 3 through 5 
in depth and 3 through 5 groups. Fig. 2 shows the 
position of nodes on a screen. 
When designing an output screen, there are many 
ways to select the position of nodes. Here, nodes will 
be displayed by the unit of sub-group on the basis of 
the central point for each sub-group. 
UIOYP level curienl oaren1 child cnUd 
012 006 000 000 367 343 
005 002 OU8., 003 296 247 
4 009 005 015 002 256 287 
1 001 DO0 002 003 212 218 
12 5 017 014 999 000 376 335 I 
Fig. 2. Ourput dcsign 
B. Node Creation 
The number of nodes created to implement the 
system is limited up to five groups, five levels, and 
500 nodes, taking the visualization effect into account. 
To calculate the position of nodes in the concentric 
ring, iisc thc fonnula ( I ) ,  which i s  used when a son 
node ( X I .  yl) in the bottom level moves to the 
neighboring son node (x?, y2), setting a node in the 
top level as a starting point (xr, yr) as shown in Fig. 
3. 
Fir. 3. Nodc position 
- 420 - 
Node has two types: One is non-terminal node with 
links to node in the bottom, and the other is  terminal 
node with no links to node in the bottom. 
Non-terminal nodes are arranged for optimal space 
while terminal node are allocated a certain limited 
space, saving space used for nodes. 
The position of non-terminal nodes is adjusted as 
shown in Fig. 4 and 5. 
Fig. 4. Candidatcs for #he adjustment of node 
position 
FIE. 5. Aftcr thc adlustincnt of nodc position 
To begin with, the number 9 node of the "Group 
0" in the Fig. 5 is located in the center point, while 
the number 12 node is away from the sub-group 
center point. This is because the center position of 
the group depends on the node type and its number. 
Take the number 4 son node of the "Group 0". There 
are two non-terminal nodes and one terminal node, 
in the meantime, terminal nodes belonging to 
groups do not affect the decision for the center 
position of a group that is instead determined by 
non-terminal nodes. If the number of non-terminal 
node is even, a center position is away as much as 
weight value from the centerline as the number 12 
node in Figure 5 .  
Types to select nodes that are to position in the 
center are shown as in Fig. 6.  
Take a sub-group with five group nodes and two 
non-terminal nodes for examplc. This belongs to the 
type D, 5/2=2(omit the residual), and the node in the 
arrangement 12) becomes a center node in the 
su b-group 
I 
WCi I d h A 
I - - I  
FIE. 6 .  Typcs dctcrmininp a ccntcr node 
If you look at Type C, however, there are two 
formulas to select a center node. When non-terminal 
node and terminal node coexist in a group, 
non-terminal node should be chosen as a center node 
since non-terminal one has the link information of 
son node. 
C Nude Sorting 
The hierarchical stnictiire of H.Y.Yoo[ IO] was 
displayed in a little chaotic way since nodes are 
displayed at a regular intervals by groups and by 
levels, and based on the node creation order and its 
number without arrangement when a sub-node for a 
non-terminal node i s  created. 
Fig. 7. Arranncrncot by dcsccnding ordct. bcforc(1cft). afrer(rjghr1 
If sub-nodes created for non-terminal nodes are 
- 421 - 
sorted by descendmg order depending on the number 
of grandchild node that those sub-nodes have, the 
space for nodes can be a bit saved. Yet, the 
conditions of line overlap and rapid bending as a 
whole fail to improve remarkably as shown in Fig. 7. 
To reduce this problcms, display sub-nodes of the 
sub-nodes, or grandchild nodes by turns depending on 
their number and order on the basis of non-terminal 
nodes, and move terminal-nodes to the edge of the 
right and left Then, the above problems decrease 
noticeably as shown in Fig. 8. 
Frp. 8 .  Thc ccntral ar impc‚Äùm.  bcforc( Icfr), aftct(nght) 
D. Weight Vafue and @ace Save 
The conditions of line overlap and bending could 
be improved in the previous chapter through sorting 
by descending order and a central arrangement. 
Vacant spaces, however, still remain in the concentric 
ring, and more nodes can be displayed if this unused 
space is utilized. 
Therefore, weight is applied by whether having 
sub-nodes, and for the number of sub-nodes if 
existed, which can save space. 
Suppwse the initial value of  weight for a terminal 
node is 0.5 and the total weight for all nodes within 
a certain group and fevcl is 1.0. Weight by whether 
having sub-nodes is calculated as follows: 
<Step I >  Weight by whether haViflQ sub-nodes 
0) Weight for terminal nodes 
. De f au I t weight = 0.5 (Adjust a bie) 
@ Accumulated weiQht of terminal nodes 
. (Node angle*Number of terminal) 
-(Node angle*Number ot terminal * 
Weight for terminal) 
@Weight for non-terminal nodes 
. Node angle + 
(Accumulated value for terminal nodes 
/ Number of non-terminal nodes) 
Weight for the nuniber of sub-nodes is calculated 
as follows: 
I 
<Step 2> Weight for the number of sub-nodes j 
ill Total weiQhl for non-terminal I 
- ~- ~~ ~ ~~~~~ 
~ 
I 
. Default weight for non-terminal * 
Number of non-terminal ~ 
I 
I @Weight for sub-nodes Total weight lor non-terminal f 
( 1  /Number of sub-nodes) 
(3) Weight for the current node 
. Number of sub-nodes * 
Weight for the sub-nodes 
w. TEST AND RESULTS 
A. Test Environment 
As for a hardware system for tests, Pentium 4, 3.2 
GHz CPU, I GM RAM, and 1024*768 resolution 
monitor are used. As for programs, Windows XP 
Professional and Java JDK 1.4.2 are used. 
R Tests fbr Sorting Nodes a d  Results 
First, using a formula <2> of H.Y.Yoo [ IO] on 
node creation and space allocation, nodes with three 
groups, five levels, and IO0 nodes are displayed in 
the concentric ring. 
The turning angle assigned to a node 
=360 / The total number of nodes 
The turning angle of a group 
= The total number of nodes within a group 
* The turning angle assigned to a node 
The tuming angle of a node within a group 
= The tuming angle of a group I 
(The numbcr of nodes within a group + I )  
<2> ......... 
Next, nodes are sorted by descending order in the 
center, and the result is shown as in Fig. 9. 
The result shows that the conditions of line overlap 
and bending are improved, but they still remain at a 
certain level. 
- 422 - 
FiE. 9. Rcsult of ccntral arrangcmcnt 
C. Tests for Weighi Application and Results 
Weight is applied . to save space, and the 
comparison result IS shown in Fig. I O  and I I .  
Following samples are for three and five groups, 
respectively with 300 nodes. 
Fig. 10. Rcsults whcn applying wcight (Group 3). 
bcforc(lcft), aftcr(right1 
Fig. I I. Rcsults whcn applying wcight (Group 5 ) .  
before( IC ft). afteqright ) 
Now, the following results shown in Fig. , I2  and 
13 are for 200 and 400 nodes, respectively with five 
groups. 
Fig. 12. Rcsults whcn applying wcighr (Node: ZOO). 
beforc(lcfr), aficr(right) 
Fig 13 Rcsults whcn applying wcight (Nodc400). 
bcforc(lcf0. afrcr(right) 
As shown in the results of Fig. 10 to 13, space 
between nodes is properly allocated by applying 
weight so that space for nodes i s  minimized, the total 
space is utilized at its maximum, and more n o d e  are 
inserted, which in turn allows visualization of a 
bigger hierarchical structure. 
D. Visualization for the Hospital Management 
Injormation System 
Following cases are provided to apply the 
visualization system suggested by this study. 
Fig. 14 visualizes the link among a hospital center,. 
a local hospital, a medical department, a doctor in 
charge. an intem, and a pitient. When applying the 
suggested system, the connected relationship i s  more 
clearly visual in Fig. IS than in Fig 14, which can 
be helpful for an emergency treatment and 
management. 
- 423 - 
In addition, more nodes are in Fig. 14 so that the 
suggested system can be applied to larger hospitals 
and enables you to understand the conditions of 
hospital management as a whole. 
Fig. 14 Hospiial Managcincnt Informaxion Systcm, bcforc 
applying thc sugaested systcm 
Fig. 15. Hospital Managcmcnt lnfoimalion Systcm. applying 
thc suggcstcd system 
V . CONCLUSlON 
This study suggests an algorism for the efficient 
visualization of nodes with hierarchical information 
in a limited space. 
A variety of methods have been studied to use a 
limited space in an efficient way. In this study 
intended for data with a hierarchical information, 
nodes are arranged in the center, applying weight 
based on whether having sub-nodes and the 
importance optimizes the space use, and the visibility 
and 'clearness of linked information is improved by 
straightening the data line. 
In addition, to create a massive amount of nodes, 
we allow random nodes formed by a simulator to be 
applied for the development of an algorism that is 
needed for position diversification and for the 
visualization of a hospital management information 
system. 
The simulation results show that the visualization 
system suggested in this study makes it easy to 
utilize space and understand the whole structure of 
nodes since nodes are arranged in the center for each 
group. 
Though this study successfully managed to visualize. 
up to 500 nodes, the output was impossible because 
of the poor system performance. In case the numbers 
of nodes are 500, the total 1000 nodes including 
comparable ones must be displayed, so a system 
having higher specification is required. That matter 
should be dealt with by something more, than PC in 
the following studies. 
Subjects for the following studies are to implement 
a visualization system that makes the suggested 
system in this study possible to be linked to a certain 
web site in real time, track the linked information, 
and display the three-dimensional output on the 
screen. 
%REFERENCES 
[ I ]  G. Mclancon. M. S. Marshall. "Graph Visualization and 
Navigation in Infonnolion Visualization : A Survcy". IEEE 
Transactions on visualization and computcr graphics, VOL. 6, 
NO. I. p25. 2000. 
[2] Carricrc J.. Kazman R.. "lntcracting with Huge 
Hic1archics:Bcyund Conc Trecs". Procccdings of the IEEE 
Symposium on hfonnaliun Visualization. Atlanta, USA, pp. 
74-81. Oct. 1995. 
[3] Asahi T.. Turo D.. Shncidcman E.,  "Visuat 
dccision-inaking:Using trccinaps for thc Analytic Hierarchy 
Proccss". Procccdmps of CHli-95 Confcrcncc, Dcnvcr. 
- 424 - 
Colorado. USA:ACM, May 7-1 I, 1995. 
[41 Munzncr T.,  Burchard P.. "Visualizing the Sinvturc of thc 
World Widc Wcb i n  3D Hyperboljc Spacc". SpccLal ISSUC o f  
Coinputcl Graphics. A C M  SIGGRAPH, pp. 33-38. NcwYork. 
USA, 1995. 
[SI S .  Bcnford. I .  Taylor. D. Brailsford, B. Kolcva. M Ciavcn. M. 
Frascr. G. Reynard. C. "Grccnhalgh, Thrcc Diincnsional 
Visualization o f  thc World Widc Web". ACM Computing 
Survcys, Vol. 31. Nuinbcr 4cs, December 1999 
161 T. Munzncr and P. Burchard. "Visualizing thc Stiucturc of thc 
World Widc Wcb in 3D Hypcrboloc Spacc". [n ' Procccdinp 
o f  VRML'95 Symposium. San Dicgo, pp. 33-38. 1995. 
[7] Tainmara T A  Combs. Bcnjainin B. Bcdcrson. "Docs Zooming 
Improve l i n a p  Browsing". Proc. of ACM DL'99, 1999. 
[8] R. Spcncc. /qlbrmo!ion Viwolmlion.  Addison-Wcslcy, pp, 
[9] B. Johnson and B. Shnciderman, "Trecmaps: a spacc-filling 
approach to thc visualization of hierarchiecal information 
stmcturcs". In Visualization 1991. IEEE, pp. 284-291. 1993. 
[ i o ]  Hce Youg Ym, "AdvancdGsualization by an Efficicnl 
Infnmation Layout and an fmproved Fishcye Lens Algorithm", 
Dongguk UnivcrSity Mastcr's D c p  P a p ,  1997. 
[ I l l  I. Lamping, R. Rao(IY96), The Hyperbolic Browscr; A 
Focus+Con!cxt Technique Based on Hypcrbnlic Ccomctry for 
Visualising Largc Hicrarchics, Journal of V w a l  Languagcs and 
Computing. 7. I I  pp. 3 3 - 5 5  
1121 T. Soukup. I. Davidson. Visiialization Data Mining(2002). John 
Wilcy&Sons : 165. 
[13] R. Spcncc. Information Visualization. Addison-Wcsley. pp. 
[ 141 Erlingsson and Mukkai KKishnamoorthy, Intu-activc Giaph 
Drawing on thc World Wide Web, WWW Confercncc 2002. 
[ I S ]  B. Johnson and B. Shncidennan. Treemaps: a space-filling 
approach to thc visualization of hicrarchiccal information 
stntctuirs( 1993). In Visualization 1991, IEEE : 284-291. 
[IG] Pricc. B. A.. Bacckcr. R. M. and Small. 1. S(1994). A 
Principlcd Taxonomy of Software Visualization. Journal of 
Visual Languagcs and Computing 4(3) : 21 1-266. 
150-156. 2001. 
150.156, 2001. 
- 425 - 
