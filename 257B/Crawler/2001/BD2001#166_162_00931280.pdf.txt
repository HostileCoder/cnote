Network Configuration Analysis for Formation Flying 
Satellites’ 
Eric J. Knoblock 
Department of Electrical and Computer Engineering 
Cleveland State University 
Cleveland, Ohio 441 15 
Vijay K. Konangi 
Department of Electrical and Computer Engineering 
Cleveland State University 
Cleveland, Ohio 441 15 
kn03 179@csvax.egr.csuohio.edu konangi@csvax.egr.csuohio.edu 
Thomas M. Wallett 
Satellite Networks and Architectures Branch 
NASA Glenn Research Center 
Cleveland, Ohio 44135 
wallett@grc.nasa.gov 
Abstract-The performance of two networks to support 
autonomous multi-spacecraft formation flying systems is 
presented. Both systems are comprised of a ten-satellite 
formation, with one of the satellites designated as the central 
or “mother ship.” All data is routed through the mother ship 
to the terrestrial network. The fust system uses a TCP/IP 
over ATM protocol architecture within the formation, and 
the second system uses the IEEE 802.11 protocol 
architecture within the formation. The simulations consist 
of file transfers using either the File Transfer Protocol (FTP) 
or the Simple Automatic File Exchange (SAFE) Protocol. 
The results compare the JP queuing delay, IP queue size and 
IP processing delay at the mother ship as well as end-to-end 
delay for both systems. In all cases, using EEE 802.11 
within the formation yields less delay. Also, the throughput 
exhibited by SAFE is better than FTP. 
TABLE OF CONTENTS 
1. INTRODUCTION 
2. NETWORK CONFIGURATION I 
3. NETWORK CONFIGURATION II 
5. CONCLUSIONS 
6. ACKNOWLEDGEMENT 
7. REFERENCES 
8. BIOGRAPHIES 
4. RESULTS 
1. INTRODUCTION 
Multi-spacecraft formation flying systems enable an 
improvement in mission performance while reducing 
operating costs [l]. These systems are comprised of multi- 
satellite fleets and their associated ground stations, which 
together achieve the following objectives. First, satellites in 
the same formation can provide redundancy in the event of a 
node failure. Second, multiple satellites in a formation can 
Kul B. Bhasin 
Space Communications Office 
NASA Glenn Research Center 
Cleveland, Ohio 44 135 
kbhasin@grc.nasa.gov 
be used to increase the overall system capacity and 
throughput, and finally, multiple satellites in a formation 
enable larger spatial coverage as well as prolonged temporal 
availability. It is anticipated that the use of autonomous 
multi-satellite formation flying systems will be cost- 
effective to implement and more reliable than single- 
satellite counterparts [2][3]. 
Several papers have been published in the literature 
concerning the precise control of the spacecraft within a 
multi-satellite formation. The literature indicates that the 
distances between the satellites in a formation should be 
controlled to within a centimeter in the near-term, i.e., the 
next five years, and to within a fraction of a centimeter for 
missions in the next ten years. The Autonomous Formation 
Flyer (AFF) Sensor, for example, borrows technology from 
the Global Positioning System (GPS) to maintain the precise 
control of the spacecraft within the Deep Space 3 (DS3) 
mission [4]. Similarly, a Collective Intelligence (COIN) has 
been devised to control the constellations of 
communications satellites [5]. From reviewing the 
literature, it is clear that the precise control of the spacecraft 
within a formation flying system is very important for 
several planned missions, and the degree of precision is a 
function of the intended mission. 
This paper presents the simulated performance analysis of 
two networks to support the communication needs for 
autonomous distributed multi-spacecraft formation flying 
systems. An important objective of this research is to 
investigate the concept of “Internet node in the sky” as it 
applies to formation flying satellite systems. Therefore, 
from a networking perspective, the formation flying system 
has to be interoperable with the terrestrial Intemet. The 
basic simulated protocol architecture is TCP/IP over ATM. 
The first system uses a TCP/IP over ATM protocol 
architecture within the formation, and the second system 
uses the IEEE 802.11 protocol for communication within 
0-7803-6599-2/01/$10.00 Q 2001 IEEE 
2-991 
Simulated Network the formation. 
compared for some representative file transfers. 
The performance of the two systems is 
2. NETWORK CONFIGURATION I 
The topology of the first formation flying simulation 
scenario is shown in figure 1. In this configuration, we 
consider a formation flying system consisting of ten 
satellites. These satellites are in a LEO orbit with the orbital 
characteristics of the International Space Station (ISS). One 
satellite in the formation is designated as the “mother ship,” 
and all communication between the satellites and the 
terrestrial network takes place via the mother ship. The 
terrestrial network is comprised of 12 ground stations 
distributed around the Earth. These ground stations are 
connected in a star topology with the White Sands Ground 
Terminal, New Mexico, at the center. Communication 
between the formation and ground stations, and among the 
ground stations is at OC-3. 
Using the client-server paradigm, the satellites in the 
formation are simulated to function as servers and there is a 
single client at White Sands. The performance of this 
network is analyzed by simulating FTP file transfers. As an 
alternative to FTP, which uses TCP at the transport layer, 
the SAFE protocol, which operates over UDP, was also 
simulated [6].  A comprehensive set of comparative 
performance characteristics for these two protocols, FTP 
over TCP and SAFE over UDP, is included. 
The simulated network scenario for Network Configuration 
I is shown in figure 2. As mentioned, the terrestrial network 
consists of 12 ground stations arranged in a star topology 
with the White Sands Ground Terminal (WSGT) as the 
central node. To maintain precise distances between 
spacecrafts in the formation, all spacecraft nodes were 
placed in a satellite subnet, and the orbital characteristics of 
the subnet were simulated to match those of the ISS. As a 
result, all spacecrafts in the simulation will remain in 
precise formation while following the orbital track of the 
ISS. 
Node Architecture 
All spacecrafts within the formation are simulated to behave 
as servers, and files are transferred fiom each spacecraft in 
the formation through the mother ship to the terrestrial 
network. The spacecraft servers can use either FTP or the 
SAFE protocol in the application layer of the TCP/IP suite. 
All terrestrial sites consist of routers that utilize an IP over 
ATM protocol architecture, and data received by a terrestrial 
site is forwarded to the White Sands Ground Terminal. The 
simulated White Sands Ground Terminal consists of a radio 
transceiver, which connects to a router, and all terrestrial 
sites in the network are connected to the WSGT router. The 
terrestrial client resides in the WSGT subnet and can use 
either FTP or the SAFE protocol in the application layer. 
The protocol architecture for Configuration I is shown in 
figure 3. 
10 Satellite LEO Formation 
TCP/IP over ATM at OC-3 (Config. I) 
IEEE 802.11 at 11 Mbps (Config. 11) 
Terrestrial Network 
TCP/IP over ATM at OC-3 
Figure 1-Network Configurations I and II 
2-992 
Figure 2-Network Configuration I Simulated Scenario 
Server 
LEO Formation 
Servermouter Server 
... 
7 
... 
“Mother ship ” 
Terrestrial Network 
Figure 3-Configuration I Protocol Architecture 
2-993 
3. NETWORK CONFIGURATION I1 
The second simulation scenario differs from the first in that 
the IEEE 802.11 protocol architecture is used for 
communication, at 11 Mbps, between the satellites in the 
formation. The rationale for simulating IEEE 802.11 for a 
formation of satellites is that from a networking perspective, 
the formation can be viewed as a wireless LAN. Also, 
precise distances between satellites can be easily 
maintained. All other features of this configuration such as 
the number of satellites, mother ship, orbital characteristics, 
locations of ground stations and topology of the terrestrial 
network are identical to the first scenario. This enables us 
to evaluate the impact of using IEEE 802.11 for 
communication within the formation by comparing the same 
performance measures. Also, we compare the throughput 
of FTP/TCP with SAFELJDP. Network Configuration I1 is 
also illustrated in figure 1, and the protocol architecture is 
shown in figure 4. 
4. RESULTS 
Comparison of Network Configurations 
In order to compare the performance of Network 
Configuration I to Network Configuration 11, the IP queuing 
delay, IP processing delay, and IP queue size were observed 
at the mother ship router; additionally, a comparison of end- 
to-end delay at the application level is presented. The 
results are for a simulation time of 12 hours, and the ISS 
completes 7.8 orbits during this period. Figures 5 through 7 
illustrate the comparison of IP queuing delay, IP processing 
delay, and IP queue size, respectively, for Network 
Configurations I and I1 for 100 kB file transfers. Figure 8 
compares the end-to-end delay for both configurations. For 
all performance metrics, Configuration I1 performs better 
than Configuration I for the simulated file transfers. 
LEO Formation 
Server Ser verlR out er Server 
.. * 
11 Mbps 
./- 
... 
7 
“Mother ship” 
V” Client 
Router 
oc-3 
___) 
Router 
oc-3 
4----+ 
ork 
Figure &Network Configuration 11 Protocol Architecture 
2-994 
Comparison of IP Queuing Delay for 100 kB Files 
0,00025 .............. ... .. .. ........  ............................................... ........... .................. .......... .... .......... .................. ......... ....... ... . . . . . . , ...............  .. . . ............ . ............................................ ... .... 
1 
0 0002 
000015 
Q) 
L - 2
cu 
n 00001 
0 00005 4 
I 
+Config II 
I .  
0 5000 10000 15000 20000 25000 30000 35000 40000 
Time (sec) 
Figure 5-Comparison of IP Queuing Delay 
Comparison of IP Processing Delay for 100 kB Files 
0 00025 
0.0002 
0.00015 
Q) 
L 
- 2
n OOOOI 
Q) 
-w- Config I I  
0 5000 10000 15000 20000 25000 30000 35000 40000 
TIme (sec) 
Figure 6-Comparison of IP Processing Delay 
2-995 
Comparison of IP Queue Size 
0 1  
0 
0 5000 10000 15000 20000 25000 30000 35000 40000 
l ime (Sec) 
+Config I1 
Figure 7-Comparison of IP Queue Size 
Comparison of End-topEnd Delay for 100 kB Files 
Figure 8-Comparison of End-to-End Delay 
2-996 
SAFE Protocol 
The SAFE protocol operates in the application layer of the 
protocol suite and uses UDP, rather than TCP, as the 
transport protocol. Since UDP is insensitive to propagation 
delays, SAFE avoids the well-documented problems 
associated with using TCP over satellite links. Additionally, 
SAFE does not waste any time establishing a connection, 
since UDP is connection-less. However, UDP does not 
provide flow control, reliable transfer of data and congestion 
control; therefore, SAFE must provide these services in the 
application layer. 
The File Transfer Protocol (FTP) hom the TCP/IP suite 
provides a service comparable to SAFE, but FTP must be 
used in conjunction with TCP. SAFE, on the other hand, is 
not bound to any particular transport protocol since all the 
reliability, flow control and congestion control mechanisms 
are provided in the application layer by SAFE. Thus, 
SAFE, for example, can take advantage of the changes (such 
as the CCSDS-SCPS suite) that are being devised to 
improve network performance over satellite and space 
communication links. 
SAFE uses the client-server network configuration where 
the server node hosts the source data, called the primary file, 
and the client attempts to create a secondary file which is an 
exact replica of the primary file. The client sends requests 
to the server, and the server passively waits for a request to 
arrive from the client; the request initiates the transfer from 
the server to the client. If a request from the client extends 
beyond the end of the primary file, the server will set an 
end-of-file (EOF) flag within the reply packet. When the 
client detects the EOF flag, it will wait a prescribed period 
of time before requesting additional data beyond the last 
advertised EOF offset. Since the client periodically sends 
requests for more data, the secondary file at the client is an 
exact replica of the primary file. 
As mentioned earlier, since SAFE operates in the 
application layer and uses UDP as the transport protocol, the 
SAFE protocol must provide the functions of TCP. The 
flow control, reliable data transfer and congestion control 
mechanisms used by SAFE are very similar to that of TCP 
Reno, and it implements the slow start, congestion 
avoidance, fast retransmit and fast recovery algorithms of 
TCP. In order to maximize the utilization of network 
bandwidth, SAFE sends requests asynchronously in that 
multiple requests can be outstanding at any time. To 
correlate the pending requests with the received segments, 
the SAFE client associates a message ID to each request that 
is sent to the SAFE server, and the server will return this 
message ID within the reply packet. Thus, the client can 
match requests to replies and reorder the segments, if 
necessary, before writing the data to the secondary file. 
Comparison of SAFE and FTP 
The performance of the SAFE protocol was compared to the 
FTP for both formation flying network configurations, and 
in both cases throughput was used as the performance 
metric. All simulations of FTP used TCP with a 64 kB 
receive window with the SACK option, window scaling 
option and the fast retransmit/fast recovery algorithms 
enabled. A comparison of throughput at the WSGT for 
lOkB and 1 MB file transfers using Network Configuration 
I is shown in figures 9 and 10. 
Throughput at WSGT for 10kB File Transfers 
800 ................................................................................................ ...... ..,............... ... . . ...... ..................................... ............................................ .................................................. 
1 
+SAFE 
0 5000 1Mm 150W 20000 25000 3woo 35000 40000 
Time (sec) 
Figure 9-Throughput Comparison for 10 kB File Transfers (Configuration I) 
2-997 
I I/ ! 
.. 
mi- 
0 no0 4033 60m Bo00 IDOOD 12000 14000 
Time (sec) 
1 
I 
a f SAFE 
Figure 10-Throughput Comparison for 1 MB File Transfers (Configuration I) 
As shown in the graphs, SAFE exhibits slightly better 
throughput than FTP during most periods of contact with 
WSGT. For 10 kB file transfers, SAFE averages 34.05 bps 
over the entire simulation, whereas FTP averages 32.20 bps. 
For 1 MB files, SAFE averages 3087.27 bps and FTP 
averages 2399.66 bps. For both configurations, the average 
throughput is relatively low, since the formation is out of 
radio contact with WSGT for most of the simulation time. 
A comparison of throughput at the WSGT for 10 kB and 1 
MB file transfers using Network configuration 11 is shown 
in figures 11 and 12, respectively. As with Configuration I, 
SAFE exhibits slightly improved throughput than FTP. In 
fact for simulations of 1 MB file transfers, SAFE averages 
3211.12 bps over the entire simulation while FTP averages 
2580.07 bps. 
Throughput at WSGT for 10kB Files 
I-tFIp +SAFE 
0 15ooo 2 0 m  25000 
Time (sec) 
Figure 11-Throughput Comparison for 10 kB File Transfers (Configuration 11) 
2-998 
Throughput at WSGT for 1 MB Files 
1 120000 
80000 
n e 
3 6uOOO 
m 
2 c 
I- 40000 
20000 
0 
2000 4000 6000 8000 10000 12000 14000 
Time (sec) 
Figure 12-Throughput Comparison for 1 MB File Transfers (Configuration 11) 
5. CONCLUSIONS 
The results illustrate that using the IEEE 802.11 medium 
access protocol architecture within a formation of satellites 
yields throughput comparable to a TCP/IP over ATM 
configuration. However, the processing delay and queuing 
delay at the network layer is lower. Since IEEE 802.11 
provides a way for stations within a Basic Service Set (BSS) 
to contend for access to a shared medium, the number of 
collisions will be reduced. 
Figures 9 through 12 show a difference in the performance 
of SAFERJDP and FTP/TCP. For the simulated file sizes, 
SAFERJDP provides improved throughput in comparison to 
FTPACP. The reasons for this difference are as follows. 
TCP uses a handshaking algorithm to establish and close a 
connection between two hosts. Depending on whether the 
connection is established passively or actively, this can take 
between 1 and 1.5 round-trip times (RTT). Therefore, TCP 
requires time to establish and close the connection. In 
contrast, the SAFE protocol does not require connection 
establishment and consequently exhibits a higher throughput 
[71. 
TCP uses a delayed-ACK mechanism, which requires a 
second segment to arrive before an acknowledgement is 
transmitted to the sender. Since TCP begins the data 
transfer with the slow start algorithm, an ACK to the first 
segment will not be sent until a second segment is received. 
However, slow start will not allow another segment to be 
sent until an ACK is received for the first segment. 
Therefore, the receiving TCP is forced to wait until the 
delayed-ACK timer expires before sending an 
acknowledgement for the first segment. The SAFE 
protocol, in comparison, does not utilize a delayed-ACK 
mechanism. Rather, the client sends requests, and the server 
transfers the requested data to the client. In this manner, the 
client can keep track of the segments which have been 
received and the segments lost in the network. Therefore, 
no time is wasted by SAFE waiting for a delayed-ACK 
timer to expire. 
6. ACKNOWLEDGEMENT 
This research was supported by the High Rate Data Delivery 
Thrust Area for the Space Base Technology Program in the 
NASA Aero-Space Technology Enterprise, for which the 
authors are grateful. Thanks to h4r. JeBey L. Hayden for 
the valuable discussions. 
7. REFERENCES 
[l]  C. Kitts, et. al., “Experiments in Distributed 
Microsatellite Space Systems’’ Proceedings AIAA Space 
Technology Conference and Exposition, September 1999, 
AIAA 99-4654. 
[2] Z. Kiraly, et. al., “The Orion Project: A Space Formation 
Flying Experiment” Proceedings AIAA Space Technology 
Conference and Exposition, September 1999, AIAA 99- 
4680. 
[3] A. L. Benjamin, J. P. Macher, and M. S. Corson, 
“Autonomous, Fault-Tolerant, Self-organizing 
Communications Network for Spaceborne Systems.” 
2-999 
Proceedings A H A  Defense & Civil Space Programs 
Conference, October 28-30, 1998. 
[4] G. Purcell, D. Kuang, S.Lichten, S.-C. Wu, and L. 
Young, “Autonomous Formation Flyer (AFF) Sensor 
Technology Development” TMO Progress Report 42- 134, 
August 1998. 
[ 5 ]  D. Wolpert, K. Turner, J. Sill, A. Bell, “Collective 
Intelligence for Control of Constellations of Satellites”, 
http://ic.arc.nasa.gov/ic/people/kagan/coingubs.html, 
September 1999. 
[6] http://bio.gst.com/safe.html 
[7] E. Knoblock, V. Konangi, T. Wallett, “Comparison of 
SAFE and FTP for the South Pole TDRSS Relay System.” 
Proceedings AIAA International Communications Satellite 
Systems Conference and Exhibition, April 2000. 
8. BIOGRAPHIES 
Eric J.  Knoblock is currently finishing his master’s degree 
in Electrical Engineering at Cleveland State University, and 
performed his graduate research work in the Satellite 
Networks and Architectures Branch of the NASA Glenn 
Research Center in Cleveland, Ohio. He graduated Summa 
cum Laude from Cleveland State University in May 1999 
with a bachelor’s degree in Electrical Engineering. He is a 
member ofthe IEEE, Tau Beta Pi, Eta Kappa Nu, and the 
Golden Key National Honor Society. 
Vijay K. Konangi is an Associate Professor of Electrical 
and Computer Engineering at Cleveland State University. 
He was awarded the Ph.D. degree by Iowa State University. 
His principal research area is computer networks. 
Thomas M. Wallett earned his doctorate in Electrical 
Engineeringfrom Cleveland State University in 1993. He is 
involved in satellite network simulation at the NASA Glenn 
Research Center in Cleveland, Ohio. 
Kul B. Bhasin serves as the Space Technology Manager for 
High Rate Data Delivery for the Space Base Technology 
Program in the NASA Aero-Space Technology Enterprise. 
In this position he is responsible for the development and 
integration of advanced space communication and network 
technologies to meet future needs ofNASA enterprises. 
Prior to that he established and was Chief of the Satellite 
Networks and Architectures Branch at NASA Glenn 
Research Center, Cleveland, OH. He initiated several joint- 
working groups with industry and academia to develop 
space Internet working standards. He served on the 
NSF/NASA blue ribbon panel to assess the Global Satellite 
Communications Technology and Systems. He represented 
NASA in the Ad Hoc Satellite Industry Task Force to define 
the role of satellites in the Global Information 
Infrastructure. 
Dr. Bhasin is a senior member ofIEEE and is an elected 
Fellow of the Society of International Optical Engineers 
(SPIE). He is a member of AIAA and also serves on the 
Satellite Communication Technology Committee for AIAA. 
He was a NASA Fellow at Cornell University in Electrical 
Engineering in 1985. He obtained his Ph.D. and MS. 
degrees from the University of Missouri and Purdue 
University, respectively. 
2-1000 
