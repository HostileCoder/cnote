Test Like You Ply 
Allen W. Bucher 
Advanced Solutions, Inc 
6901 South Pierce St, Suite 301 
Littleton, CO 8 1208 
abucherago-asi.com 
3 03 -979-24 17 
Abstract- Many hours have been dedicated to verifying 
that spacecraft built and tested in non-flight environtrents 
can actually perform the intended mission objectives. 
During spacecraft integration and test, engineers attempt to 
achieve the highest fidelity testing possible and to the 
greatest extent possible, Test Like You Fly. Spacecraft 
assembly and test must satisfy both spacecraft system 
assembly requirements and mission operations requirements 
within the allocated cost and schedule constraints. This 
paper will show how a hybrid of two systems can be used to 
satisfy both system test and mission operations 
requirements incrementally throughout spacecraft assembly, 
achieving a high degree of Test Like You Fly. 
TABLE OF CONTENTS 
phases beginning with component build and test. These 
phases are often collectively referred to as the Assembly, 
Test, and Launch Operations (ATLO) phase of a spacecraft 
project. These later phases are those most impacted by the 
GDS. 
The GDS is often described as the hardware, software, 
people, and processes required to carry out the tasks of 
operating a spacecraft mission. The GDS includes items that 
allow people to plan spacecraft operation, command the 
spacecraft, and receive telemetry to monitor spacecraft 
performance. There are many different varieties of ground 
data systems and the opinions regarding those systems are 
as varied as the systems themselves. Most often, the 
selection of the GDS is driven by the personality of the 
program. Each lifecycle phase imposes different 
requirements on the GDS and different components can be 
used to satisfy the requirements of each phase. Common 
sense tells us that it is more advantageous to test the 
spacecraft with the GDS that is going to be used to fly the 
mission, Test Like You Fly (TLYF). However, due to cost, 
schedule, and risk, the program may not be able to utilize the 
same GDS throughout each phase. 
1. INTRODUCTION 
2. SPACECRAFT LIFECYCLE 
3. GROUND DATA SYSTEM OVERVIEW 
4. TEST LIKE YOU FLY OVERVIEW 
5. THE GDS ISSUE 
6. HYBRID SOLUTION 
7. SPACECRAFT TEST LAB CONSIDERATIONS 
8. SUMMARY 
1O.BIOGRAPHY 
9. REFERENCES 
1. INTRODUCTION 
There are many different ground data systems that are used 
by spacecraft designers, builders, and operators. The 
Ground Data System (GDS) is usually the preference of the 
individual building the spacecraft and is usually driven by 
company policy or individual preferences. This paper does 
not recommend one GDS over the other, but advocates that 
the GDS that is used to build the spacecraft should be the 
one that is used for flight operations. 
The development of a spacecraft typically follows a general 
lifecycle that includes requirements definition, design, 
component buildltest, spacecraft integration and test, 
qualification/environmental testing, system testing, launch, 
and mission operations. We will concentrate on the lifecycle 
The scenario of using two competing yet complementary 
GDS solutions is the topic of this study. In the scenario we 
will study, the spacecraft ATLO team has the responsibility 
to build, test, and launch the spacecraft and a separate 
Mission Operations System (MOS) team will fly the 
spacecraft. However, it is anticipated that key spacecraft 
ALTO engineers will become part of the Mission Operations 
team. The ATLO team has a desire to use one GDS variety 
to test the spacecraft and the Mission Operations team has 
the requirement to use a different GDS variety to fly the 
spacecraft. 
The project is faced with a tough set of decisions regarding 
the selection and use of the GDS. The project will promote a 
TLYF environment but due to cost, schedule, risk, and 
personal preferences it is unlikely that the same GDS will be 
used for all phases of the project. This paper will present a 
brief overview of the Spacecraft Lifecycle, the GDS, and the 
TLYF philosophy. Following these overviews, this paper 
will serve to highlight how this set of 
0-7803-6599-2/01/$10.00 0 2001 IEEE 
7 - 3 3 1 3  
decisions were studied and the resulting hybrid of two 
ground data systems that will allow the ATLO team to use 
the system that they have confidence in and allow the MOS 
team to test and fly with the system that they are required to 
use. Finally, a summary will be presented to highlight the 
usage of two Ground Data Systems that will promote the 
TLYF philosophy. 
2. SPACECRAFT LIFECYCLE 
As illustrated in Figure 1, the development of a spacecraft 
typically follows a general lifecycle that includes 
requirements definition, design, component buildhest, 
spacecraft integration and test, qualification/environmental 
testing, system testing, launch operations, and mission 
operations. We will concentrate on the lifecycle phases 
beginning with component build and test. These phases are 
often collectively referred to as the Assembly, Test, and 
Launch Operations (ATLO) phase of a spacecraft project. 
Each lifecycle phase imposes different requirements on the 
GDS and different GDS components can be used to satisfy 
the requirements of each phase. 
vacuum), and system testing to verify the component 
behaves as expected. The GDS for this phase must either 
deal with the interface to the Unit Under Test (UUT) directly 
or a spacecraft simulator is used to simulate the spacecraft to 
UUT interfaces. The GDS should strive to use an interface 
that is as flight like as possible. This allows the users to 
exercise flight commands and flight telemetry for component 
test. If we are truly in a TLYF environment, this will give the 
user their first exposure to flight command and telemetry 
definitions allowing those entries to be defined and 
validated early in the test program. 
Spacecraft Integration and Test encompasses the integration 
of the individual components to form the complete 
spacecraft. The main goal of this phase is to incrementally 
integrate individual components taking care to verify all the 
electrical and mechanical interfaces. Typically the power 
subsystem and the main onboard computer, which forms the 
central nervous system of the spacecraft, is installed and 
verified first. All command and telemetry functionality of the 
onboard computer is verified as- well as all electrical 
properties of the interfaces to other external components. 
I Assembly, Test, and Launch Operations (ATLO) 
I I 
Time 
Figure 1 Spacecraft Lifecycle Phases 
Component build and test encompasses the building and 
testing of the individual components. This phase is 
sometimes generically referred to as board and box level 
integration and testing. This phase involves standalone 
testing of components to verify that they are ready for 
integration onto the spacecraft. This phase typically 
includes a miniature version of a complete lifecycle 
encompassing component testing (individual piece parts), 
environmental testing (usually acoustic and thermal 
This will serve to mitigate the risk of individual component 
integration. One-by-one the other external components are 
integrated and tested verifying all command, telemetry, and 
functionality associated with the individual components. 
During this phase the GDS will be used to send individual 
commands or execute automated test scripts and then 
automatically verify the telemetry produced is correct. In an 
ideal situation, the commands and telemetry used to verify 
each component will be stored in an automated test script 
and as new components are 
7-3314 
added to the spacecraft, the commands and telemetry used 
to verify the component will also be added to the script. 
After all components are integrated, the resulting script 
serves as a baseline test that can be used in an automated 
fashion to verify spacecraft functionality. This serves as a 
valuable regression test to verify spacecraft baseline 
functionality after changes have been made. 
The qualificatiodenvironmental testing phase includes 
subjecting the spacecraft to different environmental 
conditions to verify that the spacecraft can survive 
environments such as launch vibration, space thermal 
conditions, and Zero-G operation. This phase will typically 
include a mixture of test scripts to test specific requirements 
and mission scenario sequences to simulate a mission like 
operation. This is typically the first phase where the mission 
operations team begins to play an official role in the ATLO 
program. The GDS must be capable of supporting individual 
commanding, test scripting, and mission operations 
sequence generation as well as the telemetry flows required 
to support local and mission like telemetry verification. 
The system testing phase includes testing the spacecraft in 
scenarios that, as close as possible, simulate the actual flight 
environment. The mission operations team is beginning to 
mature. Their people, plans, and procedures are coming 
together and the goal of the project begins to shift from a 
test program to an operations program. System testing 
should include the verification of predetermined mission 
operations requirements and scenarios to verify that the 
spacecraft is capable of satisfying the mission objectives. 
The GDS that will be used to fly the mission should 
dominate the usage during this phase. The mission 
operations engineers should utilize the flight GDS to build 
sequences, command the spacecraft, and verify the resulting 
telemetry. The mission operations team should work in 
concert with the ATLO team to document flight rules and 
constraints and learn as much about the behavior of the 
spacecraft as possible. 
The Launch phase includes a mixture of final configurations 
and final testing to verify that the spacecraft is ready to fly. 
Hopefully when you arrive at the launch site only final 
configurations will remain and the activity will be minimum. 
The choice of GDS is dependent on the activity to be 
performed. However, the final configurations for launch and 
the commands that might be used during early acquisition 
should be prepared with the flight system. Mission 
Operations will obviously be performed using the flight GDS. 
3. GROUND ATA SYSYTEM OVERVlEW 
The GDS is often described as the hardware and software 
required to carry out the tasks of operating a spacecraft 
mission. The GDS includes items that allow people to plan 
spacecraft operation, command the spacecraft, and receive 
telemetry to monitor spacecraft performance. There are 
many different varieties of ground data systems and the 
opinions regarding those systems are as varied as the 
systems themselves. Most often, the selection of the GDS is 
driven by the personality of the program. 
A typical high level GDS system architecture for Command 
Flow is shown in Figure 2. A typical high level GDS system 
architecture for Telemetry Flow is shown in Figure 3.  These 
figures illustrate the commonality between test and flight for 
the majority of the GDS. In both cases (command and 
telemetry) the main difference surfaces at the connectivity to 
the spacecraft. When the spacecraft is on the ground in a 
test configuration, connectivity is achieved through the 
Support Equipment (SE). When the spacecraft is in flight, 
connectivity is achieved through the ground station 
(antenna) infrastructure. 
In conjunction with the lifecycle phases discussed above, 
the test program usually has other requirements that it looks 
upon the GDS to satisfy. These requirements include items 
such as Support Equipment (SE) Control, Spacecraft 
SimulatiodStimulation Control, and Spacecraft Test Lab 
(STL) control. 
The GDS takes on different levels of maturity during the life 
of a project. Figure 4 illustrates the simple GDS that is 
typically used during component build and test. This GDS 
consists of the Unit Under Test (UUT), a spacecraft 
simulator, a simple set of support equipment, and the ability 
to send command and receive telemetry. This GDS usually 
consists of 1-2 workstations and several "copies" of this 
configuration can co-exist to test several W T s  
simultaneously. 
Figure 5 illustrates the GDS configuration that is used for 
subsystem integration and test. The main differences for 
this setup is the removal of the spacecraft simulator and the 
splitting of the Command Generation and Data Display 
functions into several workstations to allow multiple test 
engineers to generate commands and view telemetry 
simultaneously. Figure 6 shows the GDS used during 
environmental testing. This GDS is similar to the Subsystem 
Integration and Test but begins to show the emergence of 
the Mission Operations System. During environmental 
testing, MOS sequences will be used to validate mission 
scenarios. Flight telemetry will also be used by the MOS to 
verify proper spacecraft response. 
Figure 7 illustrates the emergence of the total end to end 
GDS. During System Test and Launch operations many new 
GDS components are introduced and the flight MOS begins 
to take shape. Many external entities and organizations 
begin to take their place in the flight operations organization. 
These entities form the distributed 
7-3315 
organization commonly referred to as the Flight Team. 
Figure 8 illustrates the Mission Operations GDS. This GDS 
is identical to the System Test and Launch Operations GDS 
with the ATLO entities (represented by the shaded boxes in 
Figure 7) removed. 
environmental testing and will be the focus of the test 
program after spacecraft qualification. 
Key verification elements of TLYF are to verify proper 
“flight” commands generated by ground system and to 
Command Interface 
Science Operatlons IMission Planning I 
Sequence 
Requests 
Ground 
Communications 
t Command and 
SE 
Figure 2 Command Architecture 
The GDS matures as the spacecraft matures. Components 
and entities are added to the GDS incrementally until the 
complete MOS GDS is ready to support Mission Operations. 
In a TLYF environment, the focus should be on the 
components that will be used to support Mission 
Operations. Many of the components are test-only and will 
not be utilized after launch. 
4. TEST LIKEYOUFLY OVERVIEW 
Test Like You Fly (TLYF) is the testing of the spacecraft 
utilizing the same hardware, software, people, and processes 
that will be utilized during mission operations. TLYF will 
exercise flight command and telemetry databases, flight 
blockslsequences, and mission operations plans, 
procedures, flight rules, and constraints. As the spacecraft 
is integrated, the TLYF approached will be phased in as the 
spacecraft matures. The TLYF process will be used during 
verify commands are delivered to spacecraft with proper 
“flight” responses. Subsystem integration tests can be 
accomplished using commands generated by any desired 
GDS. Qualification system tests should be accomplished 
using commands generated by the same system that will be 
used for mission operations. 
A true TLYF program expends the resources to verify that 
the MOS infrastructure is in place at the start of the ATLO 
portion of the program. Many programs do not focus on 
MOS early in the program and advocate that the MOS 
formality is not required in the ATLO phases. However a 
higher degree of confidence is gained in the MOS if it is 
used to control ATLO. This radical approach would have 
the MOS organization, including the Mission Director, 
participating in planning meetings, sequence generation and 
testing, and command approvals. The MOS procedures 
would be utilized to control the day-to-day activities like in 
flight. Contingency plans and procedures would also be 
used to recover from anomalous events that happened 
during testing. In essence, the spacecraft during 
7-3316 
test would be treated as if it was flying. The entire mission 
in an abbreviated version would be flown to determine all 
mission scenarios, the configurations required for each 
All Telemetry values and modes 
End-to-End Command and Telemetry Flows 
All recovery plans and procedures 
f 
External 
Users 
I Science Operations / 
I Ground 
Command and 
Te emetry Input 
I 
4 
I 
TEST T .AN 
SE 
Figure 3 Telemetry Architecture 
mission phase, and the sequencelcommand products 
required to perform the entire mission. All products and 
personnel used, including the GDS, would flow seamlessly 
from ATLO to Mission Operations. 
The perfect TLYF scenario as described above should be the 
goal of every flight project. However, do to constraints 
outside of the program’s control, projects do not always fit 
the perfect mold. The ATLO organization must face many 
challenges to build the spacecraft that are unrelated to 
Mission Operations and Mission Operations must work 
issues that are unrelated to ATLO, all within the allocated 
schedule and budget. These issues force us back to reality. 
However TLYF guidelines (MOS Test Requirements) can be 
established that will allow the project to focus on the highest 
degree of TLYF possible. At a minimum every project 
should verify the following with the flight spacecraft: 
All Command and Sequence Products 
All Mission Scenarios 
Personnel duties and assignments 
5 .  THEGDSIssm 
The ATLO and MOS teams are formed of diverse groups of 
people charged with satisfying different requirements of the 
program. Each group has years of experience building, 
testing, and operating spacecraft missions. Both of these 
groups desire to utilize the GDS that they have experience 
with and have confidence in. The project is faced with the 
tough decision of trying to determine which GDS, OASIS or 
AMMOS, will best serve the requirements, cost, and 
schedule of the project. The ATLO team charged with 
building the individual spacecraft components and the 
spacecraft itself has years of experience with the OASIS 
GDS. The MOS team charged with flying the spacecraft will 
integrate their operations into a larger GDS at the Jet 
Propulsion Laboratory (EL) which is based on JPL’s 
7-3317 
Advanced Multi Mission Operations System (AMMOS). with several programs currently being operated by the Jet 
How can we achieve all the efficiencies within the program Propulsion Laboratory (JPL) in conjunction with the 
by allowing the project entities to utilize the GDS they feel California Institute of Technology. For the selected 
Figure 4 Component Level Testing GDS 
most comfortable with and still achieve the TLYF paradigm? 
The OASIS GDS is proven in the spacecraft operations with 
several programs currently being operated by the Laboratory 
with the University of Colorado. For the selected 
implementation, OASIS has strengths and weaknesses as 
highlighted in Table 1. 
The AMMOS GDS is proven in the spacecraft operations 
implementation, AMMOS has strengths and weaknesses as 
highlighted in Table 2 .  
for Atmospheric and Space Physics (LASP) in conjunction 6 .  HYBRIDSOLUTION 
The best solution for this situation is to use a hybrid of the 
two systems. As illustrated above, the GDS goes through 
phases in parallel with the spacecraft development 
Table 1 - OASIS Strengths and Weaknesses 
Strengths 
*:* Same System Used Throughout Development 
9 Board and Box Testing 
9 
9 Integration and Test 
9 System Verification 
9 Flight Operations 
9 Testbed Operations 
CSTOL Powerful Test Automation Tool 
Command and Telemetry DB Changes on-the- 
Full Control of EGSE and External Equipment 
9 Spacecraft and EGSE Command and 
Telemetry Integraed 
9 Test Director Control From Single Console 
*: Full Control of Simulation Software and 
Hardware 
p AACS Simulation Control 
p Testbed Simulation Control 
Flight Software Development and Test 
*:* 
*:* 
*:* 
fly 
Weaknesses 
*3 Not Integrated with Other AMMOS Entities 
9 DSOT, MCT, NAV 
*: Limited Flight Operations Training Benefits 
*: No Connectivity to Flight Operations 
*:* No Sequence Software Capability 
9 Cannot Utilize Mission Blocks and 
9 
9 
Capability 
9 Mostly Flat Files 
9 
Sequences 
Cannot Utilize File Rules and Constraints 
CSTOL Can Simulate Sequence Execution 
*: Limited Data Storage, Archive, and Recall 
Can Build Interface to External Database 
7-3318 
lifecycles. The ATLO team will use a bottoms up approach, 
starting with component testing and following the lifecycle 
in a waterfall approach. The MOS team, on the other hand, 
should use a top down approach. The MOS team should 
start with the End-to-End (ETE) MOS GDS architecture and 
while mission validation tests will have a higher AMMOS 
usage. 
The hybrid solution is shown in Figure 9. Although this 
figure highlights the physical architecture, the problem and 
Table 2 AMMOS Strengths and Weaknesses 
Strengths 
*: Identical to Flight System 
9 Same Command and Telemetry Functions 
as Flight Operations . Command and Telemetry Databases . Command Software and Interfaces 
Telemetry Channels, Displays, and 
Processing Software 
9 Utilizes Flight Sequence Engine . Blocks and Flight Sequences . Flight Rules and Constraints 
*: Flight System Can Be Involved in Test At Any 
Time 
9 Distributed Architecture Allows Creative 
Connectivity . JPL/Science Can Remotely Participate 
*: Seamless Transition from Test to Flight 
Operations 
9 Proven Success at Customer Site and 
Higher Degree of “Test Like You Fly” 
in Testing 
Launch Site 
03  
determine how to integrate ATLO into the ETE GDS. There 
will be some give and take from both organizations to make 
the system work. 
Both the OASIS and AMMOS GDSs have strengths and 
weaknesses as described above. Both systems are built on 
an open architecture that makes almost any modification 
and/or enhancement possible. The basic choice comes 
down to drivers such as cost, schedule, risk, and, most 
important, what system does the team have experience with 
and is most comfortable with. The test team has many years 
of experience using the OASIS system to test spacecraft. 
The MOS team has many years of experience flying 
spacecraft using the AMMOS system. With the AMMOS 
infrastructure, the DSN connectivity is established and other 
multi-mission teams such as the Data Systems Operations 
Team (DSOT), the Mission Control Team (MCT), the 
Sequence Team (SEQ), and the Navigation Team (NAV) are 
already in place using the AMMOS GDS. Usage of each 
system will be determined based on test objectives. 
Integration and Test tests will have a higher OASIS usage 
Weaknesses 
*: Limitations of Command System 
*: Project Specific Tool Exist, No Core Capability 
9 Limited Test Script Automation 
*:* DMD Function Primitive 
9 
9 
Limited Display Types and Capabilities 
No Display Building Tools (Users must 
code TDL) 
*:* No Control of EGSE 
Separate Entities 
Testbed and ATLO both Need Degrees of 
Simulation Control 
9 EGSE and Spacecraft Telemetry are 
*:* No Control of Simulation Software 
9 
*: Limited User Documentation 
solution can be broken down into three main areas; 
personnel, telemetry flow, and command flow. These areas 
can be integrated at different points during the spacecraft 
lifecycle. Personnel for example, as shown in Figure 10, are 
gradually phased in as the spacecraft matures. The ATLO 
(Test) personnel dominate the performance on the program 
at the beginning and gradually give way to the MOS 
personnel as the spacecraft gets closer to launch and 
mission operations. 
Telemetry flow, as shown in Figure 1 1, can be accomplished 
with both systems from the start of the program. A solution 
exists that will allow a single spacecraft telemetry stream to 
be sent to two destinations. This will allow both the OASIS 
and AMMOS GDSs to process the telemetry and distribute it 
for display and analysis. Flowing telemetry to both systems 
from the start of the program allows multiple groups to view 
the data, allows ATLO and MOS engineers to cross validate 
data, and provides for training on the MOS GDS. Command 
flow, as shown in Figure 12, varies throughout the duration 
7-3319 
of the program depending on the activities being performed. 
Using the different bars in the figure to represent different 
tests, the amount each system is used for a specific test 
depends on the objective of that test. The OASIS system 
will see periods of high activity during automated testing 
systems are built on a open architecture that makes almost 
any change or enhancement possible. The GDS choice is at 
the discretion of the project. As illustrated above, different 
spacecraft phases can be tested using different Ground Data 
Systems. However, the GDS used for flight must be the GDS 
Subsystem Integration and Test 
Command  
Telemetry m 
Figure 5 Subsystem Integration and Test GDS 
and spacecraft integration. The AMMOS system will see 
periods of high activity during system and flight scenario 
testing. 
7. SPACECRAFT TEST LAB CONSIDERATIONS 
The Spacecraft Test Lab (STL) is typically a replica of the 
spacecraft with all external appendages modeled in software. 
The STL is used as a simulator to validate flight software, 
check hardware software interfaces, and validate command 
and telemetry products prior to use on the actual spacecraft. 
The STL should be capable of supporting either GDS that is 
used and as such should also be configured in a hybrid 
manner to allow testing of the ATLO and MOS command 
and telemetry products. Figure D illustrates the hybrid 
solution for STL usage. For flight operations, the ATLO 
specific portions of the STL will no longer be necessary and 
the MOS GDS components will assume the role of the STL 
GDS. It is important to configure the STL to be capable of 
testing either OASIS or AMMOS command products prior to 
their use on the spacecraft. 
8. SUMMARY 
There are many different varieties of Ground Data Systems, 
each with their respective strengths and weaknesses. Most 
used to test the flight aspects of the program. There are 
many GDS aspects of the test program that have no 
relationship to the operation of the spacecraft during flight 
operations. The operation of the Support Equipment (SE) for 
example, is a function that is for test only. Utilizing the flight 
GDS to operate the SE is fine. However it is not a driving 
requirement. Any GDS can be used to operate the SE 
without violating the TLYF paradigm. 
The MOS team must be involved early in the program to 
define Mission Operations requirements, test 
plans/procedures, and the MOS GDS. The project must 
recognize the MOS function and respect their role early in 
the program. A Mission Operations Plan should also be 
developed to drive out MOS team requirements and assist 
the program to understand the intended useloperation if the 
spacecraft. 
As illustrated by the hybrid solution, two systems can be 
utilized during the entire test program. OASIS and AMMOS 
can be configured to allow telemetry to flow to both systems 
simultaneously. A simple A/B switch can be added to the 
command path to allow the test team to select which GDS 
will send the commands. The test team can select the OASIS 
command path during functional testing (component; 
integration and test; environmental) and the MOS team can 
select the mission-like AMMOS path 
7 - 3 3 2 0  
during system testing. Good requirements and a good MOS 
team can verify all necessary MOS requirements even if two 
systems are utilized. With two systems, the MOS and ATLO 
teams can also cross verify telemetry values and command 
products to obtain independent checks. 
The MOS and ATLO teams, while having their own 
objectives during spacecraft integration and test, have many 
dependencies on each other. One mistake that has often 
been made is to have the MOS and ATLO organizations not 
working in concert with each other. Too often, the ATLO 
organization faced with schedule pressures are forced to 
develop their own products that would typically be 
developed by the MOS organization. If care is not taken, 
this disconnect can be escalated if two different GDS 
solutions are used. The division usually forms around the 
Many variations of the AMMOS/OASIS hybrid were 
considered including writing a new software controller to 
use AMMOS and OASIS at selected times “invisible” to the 
user, replacing AMMOS components with OASIS 
components, replacing OASIS components with AMMOS 
components. The consensus was to make provisions to 
utilize each system without modifications to the systems 
during different points of the test program. 
For this scenario it is more advantageous to utilize tach 
system’s strengths: 
OASIS for test scripting, automation, and EGSE 
control. 
OASIS for spacecraft system verification. 
AMMOS for flight system verification 
o 
o 
o 
o AMMOS for MOS training 
Environmental Testing 
I - con- Fnnll 
Figure 6 Environmental Testing GDS 
GDS used for test that is championed by the ATLO 
organization and the GDS used for flight that is usually 
championed by the MOS organization. It is clear to see how 
the systems can diverge if care is not taken. 
For this scenario, an AMMOS/OASIS hybrid is the correct 
choice to keep within cost and schedule constraints and 
reduce risk. The AMMOS/OASIS hybrid strategy is the 
correct usage of assets and experience for these missions. 
AMMOS command and sequence products should be 
utilized during predetermined tests. MOS verification 
objectives and requirements should be established and 
allocated to specific tests. The Spacecraft Test Lab (STL) 
should utilize the MOS GDS, however the ATLO GDS must 
be able to access the STL for test product validation. The 
MOS GDS should be used to the extent possible for all tests. 
All aspects of the GDS including voice nets, 
7-3321 
telemetry flows, data archive and recall, command flows, 
anomaly reporting mechanisms, and configuration 
management systems should be exercised. 
The hybrid will work to the extent people are willing to utilize 
the MOS GDS for testing. The program needs to allocate 
knowledgeable resources to setup, tune, and operate the 
MOS GDS. Do not allow ATLO schedule pressures to force 
all flight system verification to the end of the program. Build 
in tests early to discover design oversights andlor bugs in 
the MOS GDS. Force the use of the AMMOS system for 
flight system verification in flight configurations early in the 
program to expose MOS personnel to the flight GDS. 
Although the hybrid design is appropriate in this scenario, 
using a single GDS is the best choice to strive for. Projects 
should strive to select a GDS that will satisfy all test and 
flight requirements. A single GDS solution with appropriate 
project backing will keep all teams working in concert with 
each other and the development of the products non- 
competing. Almost any GDS can be made to work. The 
projects need a single GDS and ATLOMOS teams that 
respect each others requirements and a project team that 
promotes TLYF. 
The current hybrid solution, as illustrated above, has been 
implemented on a limited basis to prove that telemetry can be 
provided to two GDS solutions simultaneously and the 
command path can be switch from one command source to 
another. The use of two different GDS solutions in the 
hybrid mode is technically possible. Future plans need to 
include utilization of the hybrid approach in the STL 
environment to demonstrate the use of two systems in an 
operational environment prior to the start of ATLO. The 
STL uses the same command and telemetry products as 
ATLO. This will facilitate testing using two systems early in 
the program. If this approach does not work from a work 
flow perspective, enough time will exist to allow the project 
to switch to a single GDS approach. 
[l] D. Miller, L. Palkovic, C. Edwards, "Space Flight 
Operations Center User's Overview", July 1991, pages 1-6 
10. BIOGRAPHY 
Allen Bucher is a Senior Executive and 
Co-owner of Advanced Solutions, Inc. 
Allen's experience is focused in the area 
of SoftMtare Development Management 
with experience spanning spacecraft 
development, test, and mission 
operations for missions including 
Magellan, Galileo, Mars Observer, Mars 
Global Surveyor, Mars Serveyor'98, 
Stardust, Mars Odessey 2001, and 
Genesis. This includes software development and 
management, workforce automation, distributed computing 
application development, and spacecraft ground command 
and telemetry systems. Allen has extensive computer and 
software skills covering a range of languages and 
operating systems as well as broad experience with 
commercial applications software. 
[2] A.W. Bucher, R.E. Leonard, Jr., and O.G. Short, "Using 
SFOC to Fly the Magellan Venus Mapping Mission", 
Proceedings of the Second International Symposium on 
Ground Data Systems for Space Mission Operations, 
Pasadena, CA, November 1992, pp. 721-726 
7 - 3 3 2 2  
System Test and Launch Operations 
SCIENCE SITES JPL TMOD MSA 
Test Lab 
/ JPL MSOPMSA 
JPL Mission Support Area 
M u m  - r.*m - &, 
P r r  h.n 
WC.. C m  CU)L R 
El 
JPL COMM OSN STATiONS 
Figure 7 System Test and Launch GDS 
7-3323 
Mission Operations 
SCIENCE SITES JPL TMOD WSA dPL COMM DSU STATIONS 
Figure S hiOS GDS 
Hardline Only 
RF or Hardiine 
UconX - 
AMMOS E 
AMMOS i 
Figure 9 Hybrid Solution 
OASIS -I 
OASIS -L 
OASIS i 
AMMOS -17 
AMMOS -0 
7 - 3 3 2 5  
Component Spacecraft Environmental System Mission 
83 
s 
9 
0 
I&T Start Launch 
Timeline 
Figure 10 Test and MOS Personnel 
Component Spacecraft Environmental System Mission 
Build/Test I&T Testing Testing Operation 
I&T Start Launch 
Timeline 
Figure 11 AMMOS vs OASIS Telemetry Usage 
7-3326 
!j 
k 
Simulation 
Control 
J 
s 
OASIS 
n 
Component Spacecraft Environmental System Mission 
BuildTest I&T Testing Testing Operations 
- 
I OASISTLM ' OASIS 
1 . Data Flow Validation .I System Test 
OASIS 
I. 
i. 
i. 
i. 
in 
j l  /. 
I. 
. 
. . 
- 
AMMOS TLM 
j. . 
OASIS 
f 
AMMOS 
AMMOS 
" I&TStart 
AMMOS 
AMMOS 
!. System Test 
(m 
i. 
j. 
i. 
i. 
. 
. . . . . . . . 
;. 
i. 
I. . . . I. 
I- 
Timeline 
.I Mission Sequence Tests .. ,! . 
: i: . 
I. . . . 
I . . . 
i. 
i. 
i. 
. 
~1 . 
jl 
j. 
-?- 
. 
Figure 12 AMMOS vs OASIS Command Usage 
Ah4MOS CMD U 
Launch 
Figure 13 STL GDS 
7 - 3 3 2 7  
