Case Study Methodology for Information Fusion Interface 
Definition 
Barry L Ferrell 
Lockheed Martin Aeronautics Company 
PO Box 748, Fort Worth, TX 76101 
United States of America 
bany.l.femell@lmco.com 
+8 17-763-1959 
Barbara J Gilmartin 
Northrop Grurnman Corporation 
Integrated Systems Sector 
MIS A01-026, South Oyster Bay Road 
Bethpage, NY 11714 
United States of America 
gilmaba@mail.northgnun.com 
+5 16-575-2326 
Celia Fisher 
Smiths Industries Aerospace 
Data Management Systems -Europe 
School Lane, Chandlers Ford 
Hampshire, SO53 4YG 
United Kingdom 
+44 (0)23 8024 2000 
fisher-celia@si.com 
Abstract--An overall Prognostics & Health Management 
System (PHM) implementation has the fundamental 
function of integrating information from multiple system 
elements and fusing this information into useful knowledge 
about system and vehicle health. Effectively developing 
this function requires a structured approach to ensure that 
data level fusion, feature level fusion, and information level 
fusion are performed in a coherent architecture. 
This paper describes a methodology for examining the 
interfaces between aircraft systemhubsystem elements of a 
PHM function. Case study scenario development is used as 
the basis for this methodology. Likely failure/damage/wear 
modes of the equipment are tracked fkom the observable 
symptom level though multiple levels of fusion to the top 
layer of the fusion architecture. There are multiple 
advantages of this structured approach: identification of 
interface requirements; clarification of information flows; 
identification of the individual functional elements of the 
architecture; and confiiation of the effectiveness of a 
given architecture. This methodology is applicable to all of 
the levels of the PHM information hierarchy. 
0-7803-6599-2/01/$10.00 6 2001 IEEE 
Jane L Cruickshank 
BAE Systems 
Warton Aerodrome (W328J) 
Warton, Lancashire, PR4 1AX 
United Kingdom 
01772856379 
jane.cruickshank@baesystems.com 
Stephen J Massam 
BAE Systems 
Warton Aerodrome (W328J) 
Warton, Lancashire, PR4 1AX 
United Kingdom 
01772 856379 
stephen.massam@baesystems.com 
F Doug Gass 
Pratt & Whitney 
400 Main Street 
East Hartford, CT 06457 
United States of America 
gassfd@pwfl. com 
+860-565-7788 
Case studies range from propulsion and vehicle system 
conditions that require immediate pilot notification as well 
as maintenance notification, to those that are analyzed over 
longer periods of time for estimating remaining life. Using 
a wide range of conditions allows examination of interfaces 
and modeling and cross-correlation techniques that support 
all levels of the information fusion hierarchy. 
A summary of the outcome and issues identified during the 
review of case studies of the vehicle, propulsion and air 
vehicle PHM systems is presented in this paper. 
TASLE OF CONTENTS 
1. INTRODUCTION 
2. DESCRIPTION OF THE USE CASE AND 
SCENARIOS IN PHM DEVELOPMENT 
3. CASE STUDY EXAMPLES 
4. SUMMARY AND CONCLUSIONS 
5. REFERENCES 
1. INTRODUCTION 
The fundamental concept of Prognostics and Health 
Management (PHM) is to provide information and 
knowledge about system health. This can be carried out at 
subsystem level as well as overall air vehicle level. There 
6-3003 
are many dependencies between the subsystems and air 
vehicle operation, performance and health. In addition, 
because of the pervasive nature of PHM, in that it crosses 
system boundaries in terms of the physical and 
computational aspects and its information needs and 
requirements, the integration of data and information from 
the numerous subsystems to the air vehicle has to be 
carefully considered. The overall PHM system uses data and 
information from all the subsystems, performs cross 
correlation and fusion, and determines the status of the air 
vehicle in terms of availability for the next mission(s). This 
has to be accurate and provide the necessary information to 
many ‘users’: the pilot, maintainer, logistician, mission 
planner and so on. Inadequate, incorrect or incomplete 
information costs time, money and possibly mission 
success. 
The techniques and technologies supporting PHM are far 
ranging. They run from simple sensor data averaging and 
trending to various formulations of model-based reasoning 
to probabilistic and signal processing for prognostics 
(References [l] and [2 ] ) .  Analysis takes place at the 
subsystem, area manager, air vehicle, and air system level. 
These reasoning systems may be developed by the 
subsystem supplier, by specialist organizations, or by the 
prime contracting team. 
A structured approach to defining the integration of 
information from multiple system elements is required, 
where all aspects and flows can be considered and tested to 
ensure coherence. The role of the Unified Modeling 
Language (TJML) as part of that design process will also be 
examined. The case study methodology follows the overall 
approach used by UML, facilitating the transfer from the 
design process to the software implementation. The actual 
translation of the case studies into the UML structure is 
outside the scope of the paper. 
The case study methodology can be used in many ways. The 
paper provides examples of using it for trade studies for 
aspects of the PHM system, for example evaluating the 
effects of using different implementation approaches. 
Another application is using case studies for examining the 
interfaces, from the sensor processing level through to the 
highest level of the total PHM system. The interfaces are a 
key part of the PHM system, the methodology is used in the 
information flow analysis, to establish and confirm that the 
correct information, with supporting data where appropriate, 
can be detennined ftom the subsystem elements as well as 
overall air vehicle system. Likely failure/damage/wear 
modes of the equipment are tracked from the observable 
symptom level through multiple levels of fusion to the top 
layer of the fusion architecture. There are multiple 
advantages of this structured approach identification of 
interface requirements; clarification of information flows; 
identification of the individual functional elements of the 
architecture; and confiiation of the effectiveness of a 
given architecture. 
This paper includes a description of the methodology and a 
number of case studies that cover a range of scenarios and 
information flow requirements. The paper concludes with an 
assessment of the benefits of using this approach. 
2. DESCRIPTION OFTHE USE CASES AND 
SCENARIOS IN P m  DEVELOPMENT 
Overview 
At the early stages of systems design and development, the 
level of detailed information about the design of a system is 
frequently sparse. At this time it is normal to have overall 
architectural schematics showing general system layout and 
major data flow and functional paths. Traditional systems 
with past history are able to use the evolutionary nature of 
their development to fill in the knowledge gaps. 
Alternatively this can be developed based on an evolution of 
past similar systems. 
For the design and development of a new or substantially 
different system the prior systems experience or knowledge 
is not available, therefore the lack or scarcity of detailed 
information creates a challenge. The disciplines of systems 
engineering require more information than is readily 
available as there is no historical basis for the new systems. 
The use of case studies and scenarios has added 
considerable value and benefit in this situation. 
PHM covers all aspects of the air vehicle and its 
subsystems, although detailed information for all aspects is 
not available, there is frequently sufficient data in specific 
areas. By selecting those areas where adequate detail is 
available, and by understanding how these areas are similar 
to or differ from the rest of the system domains, it is 
possible to extrapolate the information generated in these 
areas to address the overall system engineering issues. 
The use of case studies is not novel. It has been used 
successfully in many previous applications. However the 
use of scenario based cases studies, and its close correlation 
to the UML design process has developed a novel and 
valuable tool in the design and development of systems in 
the early design stages. This is explored in more detail in 
Section 2.4 of this paper. 
The objectives of the case study f scenario process is to 
enable a detailed study into part of a system under specific 
instances to be extrapolated across a wide area of the 
systems. 
As shown in Figure 1 the process used is divided into two 
sections: 
(a) Case study selection 
(b) Scenario Selection 
6-3004 
Case Selection i Objectives 
i ,  \ 
Scenario Development 
Detail Scenarios 
Run Scenarios !i Analysis 
Figure 1 Flow Diagram of Methodology Steps 
Case Study Selection 
The first step in the case study selection process is to 
establish the aims and evaluation criteria of the activity. In 
this paper three different case studies have been described. 
The first looks at the partitioning of the PHM functionality 
and its impact on the databus loading, in this instance the 
comparative percentage increase was used as the criteria to 
evaluate the best solution. In the other case studies an 
assumed architecture was used to evaluate the system 
functionality. The criteria in this instance was to show that 
the architecture could support the required functionality 
without changes. 
As can be seen these criteria can be quite different but 
should be selected with care. These decisions define what 
information is required, in what detail and how it will be 
used. 
Once these have been established it is possible to study the 
systems under consideration. 
Figure 2 shows how case studies are then selected to make 
use of these similarities. By effective case selection it is 
possible to establish intonnation about systems and system 
design issues despite limited information. 
One of the strengths that has become apparent through the 
development of this methodology has been the similarity 
with elements of UML. It is possible to capture the whole 
case study / scenario within the UML notation. The initial 
case selection is defined as use cases while the analysis of 
the system can be effectively undertaken through the use of 
class diagrams. As will be described later, the scenario 
development also uses other elements of the UML. 
Scenario Development 
Within any single case study there might be one or more 
scenario. The intent of the scenario is to populate the case 
with the available detailed design information and through 
this ensure that a valid answer is obtained. 
Experience has shown that there is a significant difference 
in the validity of the output between investigating: “failure 
in System X and “failure of component Y in System X 
during flight conditions of ....” The former is more a 
specification of a case study and does not force the detailed 
investigation of the system, its behavior and interactions. 
The latter necessitates a detailed assessment to be 
undertaken. 
A note of caution does, however, need to be included: the 
level of detail needs to be appropriate to the case study 
objectives, hence ‘the importance of defining at the outset 
the criteria against which the results will be evaluated. 
Figure 2 Systems Analysed to Identify Generic Elements and Unique Elements 
6-3005 
The methodology used within the scenarios is to step 
through the scenario, establishing the functionality, the data 
and information flows, and architectural behavioral 
requirements at each step. 
As was described earlier, the UML is one effective 
mechanism for the capture of the information fiom this 
methodology, use cases and class diagrams having been 
used in the case definition. In the scenario development, the 
class diagrams are expanded into object diagrams, ensuring 
capture of the detailed information, while sequence 
diagrams are used to capture the behavior. 
At this stage, having defined the cases and then probed the 
detailed behavior and characteristics of the system under 
study, much additional information will have been 
generated. In many cases this information will be sufficient 
to answer the issues against which the case studies were 
defined. However, further analysis of this data may be 
required. If specific tools or models are being used for this 
further work, the data needs and information requirements 
should be the driving factors for the case study selection and 
the level of detail to which the scenarios are taken. 
UML as Part of the PHMDesign Process 
Object-oriented design methods have become increasingly 
popular since the late 1980's to better develop s o h a r e  
designs. Various schools of object-oriented design, e.g., 
Booch, Rumbaugh, etc. have been recently integrated into 
what is termed the Unified Modeling Language, UIvfL. 
UML is a "third generation modeling language that 
rigorously defines the semantics of the object metamodel 
and provides a notation for capturing and communicating 
object structure and behavior" (Reference [3]). 
The definition of UML has applicability to both the system 
and software design portions of the PHM development 
process. The system design process is characterized by the 
defintion and allocation of PHM requirements, as well as 
the high level design of the PJ3M system. This system 
design is at a level independent of the specific processing 
architecture used for implementation. Messages between 
system objects are defined as part of the Interface Control 
Document (ICD); however, the specific format and protocol 
used for the messages is defined as part of the software 
design. Object-oriented design constructs can be used in the 
PHM development process to support both systems design 
and s o h a r e  development. One major advantage of this 
process is the direct linkage between the systems and 
software designs. 
UML provides many formalisms for supporting the 
definition of PHM requirements and their allocation, as well 
as developing the object structure as part of the system 
design. 
In any systems engineering I systems design process, 
customer and derived requirements are used to define the 
major functions of a system: what a system must do under 
certain circumstances. For PHM, its major functions 
include: fault detection, failure confirmation and isolation, 
prediction of future failures, and informing the pilot and 
maintenance crew of those results. Based on the 
requirements, the high level interfaces of the PHM system 
are also defined: to the aircraft systems for sensor data; to 
onboard and off-board databases for historical data analysis; 
the pilot, maintenance personnel, and other users of PHM 
data, information, and knowledge. UML provides a 
compact way of representing these high level system 
functions and interfaces: the use case diagram. 
A basic use case diagram contains four major elements: 
A rectangle representing the system being designed 
Ovals within the rectangle with the name of the major 
system functions or "uses" 
Stick figures, external to the rectangle, representing the 
major system interfaces, be they people, hardware or 
software 
The interconnections (protocols) between the interfaces 
and major system functions. 
The use case represents general instances of interaction 
between the PHM system and its external interfaces. It is a 
good mechanism for reviewing high level design with other 
subsystem designers to ensure basic functionality is being 
met. 
Use case diagrams can be decomposed hierarchically and 
can be developed for each major entity in the system. An 
onboard PHM subsystem can be divided into three main 
segments: 
(1) Subsystem PHM 
(2) Area Manager (AM) PHM 
(3) Air Vehicle (AN) PHM 
At the subsystem level, sensor readings are obtained and 
initial fault detection, isolation and confirmation are 
performed by the individual aircraft subsystems. At the AM 
level, results are gathered across a series of subsystems, e.g., 
vehicle systems, mission systems etc. and intelligent 
processing performed to enhance and extend PHM 
functionality. At the A N  level, results are integrated across 
the whole aircraft to give a total picture of current and future 
aircraft health. Using this approach it is also possible to put 
the subsystem I area manager information into the context 
with the operation of the air vehicle. This can be important 
from the fault isolation, false alarm reduction and cascading 
faults perspective. 
In Figure 3, several of the uses (functions) of a PHM Area 
Manager are shown in the ovals, as well as some of its 
major interfaces, represented by stick figures. 
6-3006 
Subsystem 
PHM 
Managers 
+-- 
A 
Offbard 
PHM 
Subsystem 
PHM 
System 
Figure 3 Area Manager Use Cases 
Results 
/ 
f f  AVPHM 
4 A W H M  
Figure 4 Area Manager Use Cases During Normal Operation 
Figure 4 shows the use case for basic area manager In Figure 4, the fundamental function (use) of the AM is to 
processing: no faults detected. UML provides a method for collect data. Every other function relies on that data 
re-using use cases so that one does not need to redevelop availability. However, before meaningful processing can be 
them for every circumstance. Those stereotypes are shown carried out, the important features have to be extracted from 
in the figure as “<<uses>>”. the data, e.g., take a derivative, compare two sensor 
6-3007 
readings. The Extract Features use case relies on the Collect 
Data function. Similarly, Fault Detection relies on the 
features, and Report Results sends both features and the 
results of Fault Detection to AN PHM. 
Figure 5 shows another Area Manager use case, when faults 
are detected and isolated into failures. 
Another stereotype is used in this figure: ‘.<<extends>>.’’ 
Finding the root cause of a set of faults within or across 
subsystems is not entirely different from doing failure 
isolation, instead it broadens the scope of the use case. 
Figure 6 adds the prognostics use case, which relies on the 
functionality ofthe previous use cases. 
F-‘ 
A 
Subsystem 
PHM 
Subsystem 
PHM 
Features 
Failures 
I 
Figure 5 Area Manager Use Cases for Failure Isolation 
Predict 
Failures Failures 
Figure 6 Area Manager Use Cases for Prognostics 
4 AVPHM 
6-3008 
In developing the PHM system, these simple use cases are 
extended to cover all modes of operation and levels of 
onboard and off-board processing. However, they are not at 
the level needed to define the detailed interfaces and the 
levels of intelligent processing at the subsystem, and Area 
and Air Vehicle Managers. Specific instances of use cases, 
i.e., case studies, are needed to define these requirements. 
Mission 
Vehicle Management Computer systems 
(VMC) data bus 
3. CASE STUDY EXAMPLES 
Outline 
Two different types of case studies are included in the 
following examples: 
For evaluation of the optimum implementation location 
for the processing for part of the PHM system, within a 
distributed architecture. This is a detailed functional 
assessment considering implementation. 
A number of case studies have been carried out which 
cover a range of air vehicle and subsystem faults and 
conditions. These include faults or events which may 
require immediate notification to the ground crew or 
mission management system as well as incipient 
problems which do not require remedial action in the 
short term but should be tracked to provide information 
for the prognostics assessment of the engine and air 
vehicle. These highlight the data fusion / cross 
Mission System Processor 
( M W  
correlation and data and information management 
aspects of the case study methodology which are key to 
achieving the prognostics and diagnostics goals of the 
PHM system. 
The approach to each of these is slightly different to suit the 
different objectives and requirements. 
Vehicle 
systems 
data bus 
ti t I1 
Case Studies to Optimize System Architecture 
Trade Study: Processing Partitioning Options- 
(a) Objective of Case Study 
Within the processing architecture there are a number of 
potential processing locations into which the utility systems 
PHM functions are to be partitioned. The objective of this 
case study is to investigate the impact on the bus bandwidth 
of the different partitioning options. The use of case studies 
to address this issue enables estimates of the differences 
between the scenarios and hence the potential cost, to be 
made early in the design phase, when quantified design 
information is often sparse. 
(b) Background 
The Figure 7 shows a schematic of the physical connectivity 
of the processing architecture. Although some components 
of the architecture are multiplexed, a simplex version is 
shown here for clarity. 
Local 
Controllers 
Signal 
Concentrators 
6-3009 
VMC 
I I I I 
Concentrator Controller 
Figure 8 Data-Flow Topology 
The partitioning options for the utility system PHM 
functions are local controller, VMC or MSP. The impacts on 
the data bus bandwidth for each partitioning scenario are 
shown below. 
Local Controller 
A PHM function hosted by a local controller has relatively 
easy access to any data that is already used by control and 
performance functions hosted in the controller. However, 
commands and processed data required from utility system 
applications in the VMC have an impact on the loading of 
the Vehicle System (VS) data bus and the Peripheral 
Component Interconnect (PCI) bus that transmits data 
between processors. 
VMC 
Data used or generated by applications hosted on the same 
processor as the PHM function is readily available. 
However data required fiom an application hosted on a 
different processor to the PHM function impacts the PCI 
bus, as it has to be transferred from one processor to 
another. The PHM function may also require data that is 
ordinarily internal to the local controller. The requirement of 
such data in the VMC impacts the bandwidth of the VMS 
bus. 
MSP 
If the PHM function is located in the MSP then data from 
both the local controller and the VMC is required to be 
transferred over the PCI bus and the VS bus to the mission 
bus. 
Wherever the PHM function is hosted, the output from the 
function has to be passed to the MSP since that is where the 
higher level Air Vehicle PHM processing resides. The 
impact of the output data fi-om the PHM function also has to 
be taken into account to find the optimal solution. 
(c) Outline of Scenario 
A number of scenarios were used to investigate the optimal 
functional partitioning and data bandwidth issues. The one 
described below is associated with an element of a cooling 
system. The scenario focuses on the fault detection and 
isolation functions for a control valve in part of the coolug 
system. The cooling system is a simplex mechanical system 
with a local controller. Figure 9 shows the main 
components of the system and the data flows. 
The VMC receives temperature and speed data from the 
cooling machinery and uses this data to generate a speed 
demand. The speed demand is sent to the local controller, 
where status information from the cooling machinery is 
used to generate a command to adjust the position of the 
control valve. 
Environmental 
parameters 
1 
T 
Air flow 
cooling machinery 
Local controller 
Built In Test 
(BIT) signals 
Subsystem control - 
Parameters from 
other subsystems 
Figure 9 Main Components of Cooling System and Data Flows Used in Case Study 
6-3010 
(d) Fault Detection and Isolation Functions 
The failure of the control valve can potentially cause a 
number of symptoms that depend on the mode of operation 
and the conditions in the cooling system at the time the fault 
occurs. Some fault symptoms could be suppressed by the 
control system and not become apparent until the conditions 
or mode of operation changed. Hence the role of the fault 
detection function is to distinguish fault symptoms from 
normal operating behavior. Since each of the fault 
symptoms could be caused by a number of different failures, 
the role of the fault isolation function is to determine the 
root cause of the failure symptoms identified by the fault 
detection function. 
The fault detection and isolation functions could be located 
in the same processing area or partitioned separately. This 
expands the three partitioning scenarios to six. The 
additional scenarios are: 
fault detection hosted in the local controller and 
isolation hosted in the VMC 
fault detection hosted in the local controller and 
isolation hosted in the MSP 
fault detection hosted in the VMC and isolation hosted 
in the MSP 
Through the quantification of the impact on the data buses 
for the various partitioning scenarios an assessment of the 
various costs can be developed. 
(e) Data Requirements for Fault Detection and Isolation 
Functions 
An analysis of the cooling system was made to determine 
the data that would be required by the fault detection and 
isolation algorithms. Some data was found to be common to 
both algorithms, The normal (i.e., for performance and 
control purposes) source and sink for all of the data required 
by the detection and isolation algorithms was located and 
the bit size of each piece of data was also determined. Once 
the normal routing for the data had been established, the 
effecting of additional transmissions to satisfy the fault 
detection and isolation algorithms in the six partitioning 
scenarios could be quantified. 
A model of the data flows was developed to enable the 
effect of the partitioning scenarios to be easily quantified. 
The model enabled the location of the detection and / or 
isolation algorithm to be changed and the effect on the 
bandwidth of the VS and PCI bus to be determined. The 
model included the effect of data common to both 
algorithms routed to several different processing areas and 
the loading produced by the transmission of the output from 
the algorithms. 
(f) Analysis 
The analysis showed that the loading of the incoming data 
on the VS bus was increased by a similar small percentage 
for all of the partitioning scenarios. However, the outgoing 
VS bus loading increased by several orders of magnitude for 
the majority of scenarios. The exception to this was the 
partitioning scenario where the detection and isolation 
algorithms were both located in the VMC. This scenario had 
no impact on the outgoing data on the VS bus. 
For scenarios where the detection and I or isolation 
algorithm was located in the VMC, the loading on the PCI 
bus depended on the partitioning of the utilities systems 
applications between the processors in the VMC. The PCI 
bus loading was minimized if the utilities systems 
applications that generated or used data that was also 
required by the PHM algorithms were all hosted on the 
same processor as the PHM algorithm. The worst case for 
loading occurred if the associated utilities systems 
applications were hosted on different processors to the PJXM 
algorithms. The data flow model was used to determine a 
minimum and maximum PCI loading for partitioning 
scenarios involving the VMC. 
For the majority of partitioning scenarios, the loading on the 
PCI bus showed an increase of one to two orders of 
magnitude. The exception to this was the scenario where 
both the detection and isolation algorithms were located in 
the VMC. For this case, the minimum PCI loading 
increased by a few percent. 
Other case studies used to investigate the partitioning/ bus 
loading issue yielded similar results. The analyses showed 
that the partitioning scenario where the fault detection and 
isolation algorithms were hosted in the VMC minimized the 
bandwidth loading for both the VS bus and the PCl bus. 
(g) Benefits & Issues Identified 
The partitioning / bus loading scenarios showed that the 
VMC was the optimal location for the fault detection and 
isolation functions in order to minimize the bus loading. 
However, bandwidth is not the only cost issue to consider 
when searching for the optimal design, and other cost issues 
such as software integrity requirements, software 
development costs, software re-programming and storage 
requirements must also be considered. For a small amount 
of effort the partitioning / bus loading scenarios enabled 
complex issues to be explored and substantiated the need for 
a more detail trade study. Additional case studies can be 
used to investigate other cost issues as part of a more 
detailed trade study. Once a set of case studies that address 
all of the potential cost issues has been obtained, a trade can 
be made to achieve the optimal solution. The output of this 
trades study must be revisited during the development phase 
as requirements analysis and risk assessment provide more 
detailed information. 
It has been shown that system architectures can be 
optimized from a customer support viewpoint by applying 
PHM case studies. 
6-3011 
Interaction and Dependency of Two Subsystems- 
(a) Objectives of Case Study 
The objectives of this case study are to explore the effects of 
interaction and dependency of two subsystems, particularly 
when one has a fault that impacts the second subsystem. 
Key requirements are: 
for the ‘healthy’ subsystem to either clearly identlfy 
that it is ‘healthy’ and fault symptoms are attributable 
to another subsystem failure 
for the healthy subsystem to be notified I updated with 
the information that another subsystem is causing the 
problem. Learning and/or model updates can then be 
performed. 
Outline of Scenario 
The scenario covers a situation where the engine subsystem 
is affected by another air vehicle subsystem; the Propulsion 
System PHM (PSPHM) has the objective of providing 
Fuel controller 
c o d  boost 
Boost pump fails 
to come on 
detects and reports 
low pressure *Boost pump 
*Pressure switch 
contirms, isolates & 
assesses failure 
health information to indicate that the propulsion system is 
healthy or what the possible subsystem faults are. 
In outline terms, the scenario covers a fuel system fault 
whereby insufficient fuel is available to enable afterburner 
light. This scenario will require the pilot to be notified. It 
also explores the interaction between the propulsion system 
P H M  and control systems. 
(c) Analysis 
The following steps highlight key areas of the analysis, with 
emphasis on the role of cross-correlation, data fusion and 
information fusion to provide the highest fidelity outcome. 
The pilot uses the throttle to command afterburner (AB) 
light. Two subsystems, the engine and the fuel system and 
their appropriate components have to be healthy in order for 
successful light off. In terms of PHM, these subsystems 
detect and isolate faults independently. 
Figure 10 identifies the key steps highlighting the resolution 
of the ambiguities as the process progresses. 
Propulsion Propulsion system 
system PHM 
AB fails to ignite 
I 
& reports 
absence of .Igniters, 
loss of AB Bent to 
pilot alerting system 
.engine fuel pumps I system 
vs AM Failure amw@ 
group 
.Boost pump 
determines that 
fuel system failure 
caused AB failure to ignite 
4 
4 
vs AM reports 
status to AWHh4 AM 
AWHM AM repotis 
root cause of AB problem to 
Propulsion AM 
Figure 10 Ambiguity resolution 
6-3012 
The data and information relating to the fault and its 
functional impact is reported to the appropriate systems, for 
example mission planning etc. It can be used to enable 
mission re-planning if required and to alert the maintenance 
crew that repair or replacement is necessary before 
turnaround is required. The PHM data and information are 
also downloaded to the ground based system to maintain the 
database of faults and to assist with possible learning and 
knowledge discovery. 
(d) Benefits and Issues Identified 
This case study identifies a number of areas and issues that 
needed to be addressed or resolved, including the following: 
PSPHM 
0) 
(ii) 
(iii) 
Capability to identify that it is another subsystem at 
fault and that there is no ambiguity in the determination 
that the engine is healthy. 
Requirement for the PSPHM to include igniter checks 
so that igniter failure can be ruled out? This could be 
probabilistic based on the last scheduled checks 
indicating that the igniters can be confirmed as healthy. 
Feedback of information fiom VS (AN) PHM is 
required to confirm to the PSPHM that it is another 
subsystem fault. The PSPHM requires this information 
so that it does not continue to try to isolate the fault. 
This mechanism may be used during the development 
and maturation of the PHM systems as well as being 
included in the final system to achieve the target 
objectives and goals of the PHM system. 
vs (Am) PHM 
(i) Feedback to PSPHM that it is another subsystem fault 
(ii) Determination/isolation of fault if the PSPHM 
identifies that it has an igniter fault as well. 
Autonomic PHM Updates as a Result of In-service 
Experience- 
(a) Objectives of Case Study 
The objectives of the case study are to explore the capability 
of the overall PHM system and the propulsion PHM system 
to deal with the following requirements: 
The need for the overall PHM system to update the 
model in the Propulsion PHM to reflect the actual 
failure probabilities as the information is updated 
through in-service experience. This is required to 
provide the on-board fault isolation capability. 
Accommodation in the Propulsion PHM system for the 
loss of a sensor which is fundamental to the analysis 
performed by other propulsion PHM sensors and 
techniques. There is a potential impact on the 
functionality of the Propulsion PHM capability if one of 
these sensors fails. 
(b) Outline of Scenario 
This case study is based on a real situation in legacy 
engines. The engine performance model includes single 
fault isolation capability based on FMECAs. The model to 
isolate a fault between the N1 (LP spool speed) cable and 
sensor is based on the FMECA which indicates that the 
cable has a 5% probability of failure and the sensor a 95% 
probability. N1 speed measurement failures are detected 
during flight, and are reported as sensor faults based on the 
model. 
When maintenance is carried out it is established (after a 
number of failures) that it is the cables that are failing, not 
the sensors. 
(c) Analysis 
The analysis is focused on the PHM aspects, not the 
FADEC, which would have an independent role in the 
detection and accommodation of the loss of the sensor for 
the engine control. 
One of the goals of the analysis is to identify and c o h  
that a mechanism is available within the overall air vehicle 
PHM architecture to allow updates to on-board fault 
isolation models. 
The propulsion PHM system includes a number of sensors, 
monitoring techniques and models. Many of these use the 
N1 speed signal for reference in their analysis and 
processing. An additional goal is to assess the cascading 
effect of this fault on the propulsion PHM system capability 
and to identify any key functionality requirements that are 
necessary to minimize the impact of this situation. 
On-board Model Update Capability 
The engine performance model detects that the N1 signal is 
not correct. It will perform the following functions: 
Isolation of the fault - based on the probabilistic 
information embedded in the model, the fault isolation 
will indicate a sensor problem. 
Accommodation of the failure in the performance 
model to ensure continued functionality of the engine 
performance assessment. 
Report the fault to the propulsion PHM reasoner 
This information and data will be reported up through the 
overall PHM system architecture. The information will be 
used to indicate that repair I maintenance action is required 
before the next fight. It will also be downloaded to the 
ground based system. The ground based part of the PHh4 
system maintains the information and will include 
intelligent learning, knowledge updating and reasoning 
capability. As the actual maintenance information is added 
to the database, and the number of occurrences of this fault 
6-3013 
becomes statistically significant, the evidence will highlight 
that the on-board fault isolation model has to be updated. 
Cascading Effect of Fault on Propulsion PHM Capability 
As the processing and analysis for other PHM sensors relies 
on the N1 spool speed, it is probable that for these sensors 
either: 
analysis will be aborted 
or 
0 
or 
0 
the results will indicate that there is an engine fault 
the probability of detecting a fault which starts to 
develop while the N1 signal is unavailable will 
decrease. 
The associated possible results reported are: 
(1) Sensor / technology analysis failure 
(2) Engine fault 
(3) No report 
Depending on the capability of each sensor, these reports 
and associated data will be passed to the PHM reasoner. 
The PHM reasoner will correlate the information and data 
from the performance model and other sensors and 
techniques to identify the root cause of the problem, for 
reporting to the overall air vehicle system PHM. 
The primary fault, the NI speed signal will be identified and 
reported, based on the existing model this will be isolated as 
the NI speed sensor, as outlined above. 
If the other PHM sensors and techniques are reporting ‘self 
failures the reasoner will assign a probability of occurrence 
to these. It will not be possible to c o n f i i  100% confidence 
that these are functioning correctly, although the results can 
be weighted based on the identified speed sensor fault. 
If the other PHM sensors and techniques are reporting that 
an engine fault has been detected, the reasoner will have to 
assign a probability of occurrence. Weighting factors can be 
assigned, depending on the combination of faults identified. 
However, if the same fault is reported by more than one 
technique, the reasoner cannot ignore this information, 
despite its knowledge that the N1 speed sensor has failed. 
If there are no associated reports I information from these 
sensors, the most obvious conclusion is that the only fault is 
the N1 speed sensor fault. This may be a flawed analysis, 
depending on the capability of the additional sensors and 
techniques. 
It is therefore important that the following be addressed or 
considered in the overall requirements of the propulsion 
PHM requirements: 
0 Each sensor or technology has the capability to detect 
and isolate failures in any of the input signals to its 
analysis. The analysis can then be suspended until the 
failure has been corrected unless synthetic signals can 
be generated. 
The engine model has the capability to provide 
synthetic N1 speed signal information which is 
sufficient to enable the additional techniques (or a 
specific sub-set of these) to remain functional, possibly 
with reduced functionality. 
(d) Benefits and Issues Identified 
This case study identified a number of areas and issues that 
have to be addressed or resolved, including the following: 
PSPHM 
Mechanism to facilitate detection and isolation model 
updates 
Requirements for sensor /technology analysis to detect 
all input signal failures. 
Capability for provision of synthetic data for key 
engine signals, where these are required by several 
sensors I techniques. 
Possible consideration of reduced PHM functionality 
when key sensors fail. Accommodation and weighting 
approach for results from reduced functionality PHM. 
vs (AN) PHM 
(i) 
(ii) 
(iii) 
Mechanism to facilitate detection and isolation model 
updates to subsystem PHM to improve fault isolation. 
Maintenance updating and the importance of 
incorporating intelligent analysis and reasoning 
capabilities in the ground based system. 
The use of ambiguity groups in airborne and ground 
based parts of PHM system - where to make the 
distinction - in theory in this case the FMECA 
information could be just in the ground based element 
and not the airborne element. 
4. SUMMARY AND CONCLUSIONS 
Prognostics and Health Management (PHM) has a unique 
role in aircraft subsystems. This system touches every other 
system and subsystem in the aircraft and is concerned with 
sohare ,  hardware, and structural issues. It supports pilot I 
crew internal situation awareness, dynamic mission re- 
planning, and many intra- and inter-subsystem management 
functions. 
6-3014 
In order to develop such an integrated system, with all its 
complexities, a sound systems engineering (SE) approach is 
required to developed detailed system design requirements: 
data requirements, interface requirements, timing 
requirements, and level of fusion processing at each level of 
architecture, etc. This process needs to take into account 
both the specific requirements on PHM, such as false alarm 
rate, as well as satisfying the requirements placed on PHM 
by its interfaces to other air vehicle subsystems and the 
Autonomic Logistics system. This process must be part of 
the overall Air System systems engineering process, while 
at the same time take into account the unique aspects of 
PHM, such as trades between onboaxd cost and weight for 
an additional sensor vs. improvements in mission reliability 
and availability. 
Use of the case study methodology has proved to be very 
valuable, particularly in c o d i n g  the functionality of the 
architecture design, exploring the interfaces, data and 
information flow requirements, and processes. The case 
studies and scenarios are efficient methods of performing 
initial system design and fit well with the emerging design 
and software development process. 
5. REFERENCES 
[I] Engel, S. et al., “Prognostics, The Real Issues Involved 
With Predicting Life Remaining”. IEEE Aerospace 
Conference, March 2000, Paper 11.0706 
[2] Fisher, C., “Gas Path Debris Monitoring - A 21‘ 
Century PHM Tool”. IEEE Aerospace Conference, 
March 2000 
[3] Douglas, B. P., “Real-Time UML”. Addison Wesley, 
1998, pxxi 
6-3015 
