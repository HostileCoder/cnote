Mining Social Influence in Microblogging via Tensor 
Factorization Approach 
Wei Jingjing 
College of Physics and Information Engineering 
Fuzhou University 
Fuzhou, China 
weijj_0517@163.com 
 
Liao Xiangwen*"
 College of Mathematics and Computer Science 
Fuzhou University 
Fuzhou, China  
liaoxw@fzu.edu.cn"
 Tang Changhong"
 College of Mathematics and Computer Science 
Fuzhou University 
Fuzhou, China 
735401517@qq.com 
 
Chen Guolong"
 Fujian Key Lab of Network Computing and 
Intelligent Information Processing 
Fuzhou University, Fuzhou, China 
cgl@fzu.edu.cn 
 
Abstract—Microblogging has become an important social 
media for creating, sharing, or exchanging information and 
ideas. Social influence analysis in Microblogging is often 
exploited for different tasks such as information retrieval, 
recommendations, businesses intelligence. Most existing 
methods mostly rely on social links between users, failing to 
take advantage of characteristics of Microblogging. 
Furthermore, the size of Microblogging’s user (i.e. 
Microblogger) is very large, which makes computing resource 
for social influence mining approach can’t be satisfied by 
single computer. In this paper, a tensor factorization 
framework based on cloud computing platform is proposed for 
mining social influence in Microblogging. The framework has 
three components: a feature extraction component, a tensor 
factorization component and a user influence ranking 
component. In feature extraction component, features are 
extracted for capturing user social influence quantitatively 
through statistical analysis on the Microbloggers’ relations. In 
tensor factorization component, tensor factorization based 
MapReduce model is presented to infer user’s implicit user’s 
relations. Finally, a user influence ranking function is 
constructed for computing user social influence in user 
influence ranking component. Experiments on Sina weibo 
dataset (Chinese Microblogging platform) show that our 
proposal significantly not only improves the prediction 
accuracy compared with two baseline methods, but also has
 competitive advantage for processing massive data from 
Microblogging . 
Keywords—Social Media, Social Influence, Cloud 
Computing, Tensor Factorization 
I. INTRODUCTION
 In the recent years, Microblogging service has become 
an important social media for creating, sharing, or 
exchanging information and ideas. As for the 
Microblogging service platforms, the most popular are 
Twitter, Chinese Weibo, etc. These platforms allow user (i.e. 
Microblogger) to publish short messages (also called 
microposts) up to 140 characters to share with others what 
is happening, what is interesting, as well as their feelings 
and opinions. For instance, when someone posts one 
micropost about the opinion of Iphone 5C in Sina Weibo 
platform, the readers of this micropost can interact with the 
Microblogger by writing comment, recommending to other 
Microbloggers by “@”, or marking as positive. Through the 
interactions sharing opinion about Iphone 5C between the 
Microblogger and its readers, Microblogger could influence 
the shopping activities of readers who may be latent 
customers of Iphone 5C. Therefore, the way in which 
people influence each other through their interactions is a 
2013 International Conference on Cloud Computing and Big Data
 978-1-4799-2829-3/13 $26.00 © 2013 IEEE
 DOI 10.1109/CLOUDCOM-ASIA.2013.73
 583978-1-4799-2830-9/14 $31.00 © 2014 IEE
powerful but subtle process that is pervasive in 
Microblogging service. Social influence analysis in social 
media often refers to verifying the existence of social 
influence [1] or measuring the strength of direct and 
indirect influence between different users [2]. It is often 
exploited for different tasks such as businesses intelligence 
[1,5], information retrieval [2,3,10,12], recommendations 
[4,7,8,11,14,16], and opinion mining [6,9,13,15]. 
Consequently, there is a clear need for methods and 
techniques to mine social influence between Microbloggers 
with the emergence and rapid proliferation of Microblogs. 
There has been some theoretical and empirical work on 
quantifying the strength of social influence in social media. 
Typically, social influence study for estimating model on 
social media can be categorized into roughly two types. The 
first is graph-based model, where the strength of social 
influence is learned from graph model which incorporates 
node information and interaction information. Tang et al. [7] 
focused on measuring the strength of topic-level social 
influence quantitatively. They presented Topical Affinity 
Propagation (TAP) to model the topic-level social influence 
on large networks, and then developed an efficient 
distributed learning algorithm for TAP based on the 
Map-Reduce framework in order to scale to real large 
networks. Agarwal et al. [8] performed personalized 
recommendation based a factor model that incorporates 
rater-comment and rater-author interactions simultaneously 
in a principled way. Cai et al. [9] focused on influence 
persona discovery and put forward an opinion-oriented link 
analysis model social influence analysis, wherein three 
kinds of influence persona are discovered. Yang et al. [10] 
examined the problem of predicting signed social ties and 
presented a Behavior Relation Interplay model that inferred 
signed ties by capturing the interplay between social 
relations and users’ behavior of decision making. Tan et al. 
[11] demonstrated that user-level sentiment analysis can be 
significantly improved by incorporating link information 
from a social network. They showed that using graphical 
models incorporating social network information could lead 
to statistically significant improvements in user-level 
sentiment polarity classification with respect to an approach 
using only textual information. The second is matrix / 
tensor factorization approach, which means that matrix / 
tensor is constructed to hold interaction information 
between Microblogger and its readers, and then matrix / 
tensor factorization is employed to quantify social 
influences. Hu et al. [12] studied the problem of 
comments-oriented document summarization by 
considering not only its content, but also the comments left 
by its readers. This work identified three relations (namely, 
topic, quotation, and mention) by which comments can be 
linked to one another, modeled the relations in a 3rd-order 
tensor, and scored the importance of each comment by 
HOSVD and PARAFAC factorization. Chen et al. [13] 
focused on user reputation in a comment rating environment 
and estimated user reputation by a novel bias-smoothed 
tensor model which combined two types of reputation 
scores in a web system, external scores and internal scores. 
Sun et al. [14] examined the problem of personalized web 
search and improved web search by  a novel CubeSVD 
approach where the clickthrough data was represented by a 
3-order tensor (users, queries and Web pages),and the 
higher-order singular value decomposition technique was 
carried out to automatically capture the latent factors that 
govern the relations among these multi-type objects. Shi et 
al. [15] framed top-N context-aware recommendation as a 
ranking problem in collaborative Filtering and proposed 
TFMAP model using tensor factorization to model implicit 
feedback data (e.g. purchases, clicks) with contextual 
information. Ma et al. [16] tackled the problem of social 
recommendation and presented a novel social 
recommendation framework fusing a user-item rating 
matrix with the user’s social network using probabilistic 
matrix factorization. However, most these existing methods 
mostly rely on social links between users, failing to take 
advantage of significant characteristics of Microblogging. 
Furthermore, Microblogging’s user size is very large, which 
make computing resource for social influence mining 
approach can’t be satisfied by single computer. On the other 
hand, with the exponential growth of data in the amount of 
user-generated data, the Map-Reduce paradigm is employed 
to deal with data mining applications based on large-scale 
dataset, which provide good experience for tackling the 
huge volume of Microblogging dataset [17, 18]. 
In this paper, a tensor factorization framework based on 
cloud computing platform is put forward to estimate the 
strength of social influence in Microblogging. The 
framework has three components: a feature extraction 
component, a tensor factorization component and a user 
influence ranking component. In feature extraction 
584
component, features are extracted for capturing user social 
influence quantitatively through statistical analysis on the 
Microbloggers’ relations. In tensor factorization component, 
tensor factorization based MapReduce model is presented to 
infer user’s implicit user’s relations. Finally, a user 
influence ranking function is constructed for computing 
user social influence in user influence ranking component. 
Moreover, the prediction accuracy and scalability of the 
proposed approach is experimentally evaluated by 
comparing with two baseline methods using Sina Weibo 
dataset (Chinese Microblogging platform). In summary, the 
contributions of this paper are follows: 
1? The feature extraction on Microbloggers’ 
relations in Microblogging platform is experimentally 
carried out for capturing user social influence quantitatively 
through statistical analysis.  
2? The proposed approach bases on Tensor 
factorization method which automatically estimates the 
latent factors that govern the Microbloggers’ relations for 
the strength of social influence. 
3? The tensor factorization framework is developed 
on the Map-Reduce programming model in order to scale 
up the approach for tackling the huge volume of 
Microblogging dataset. 
The rest of the paper is organized as follows. In Section 
II, the features of Microblogging service are analyzed 
quantitatively for capturing user social influence, and then a 
tensor factorization framework is put forward for mining 
social influence. Section III presents evaluation 
methodology and describes the experimental results in 
detail. Finally, our conclusion is summarized in Section IV. 
II. MODEL FRAMEWORK 
A. Formulation 
We are given a Microblogging service platform M , 
which consists of a set of Microbloggers U . Each 
Microblogger Uui   in M  publishes a set of posts 
uP  and is interacted with other Microblogger Uu j   
which leads to a set of relations R  (such as, “forward”, 
“follow”, “Thumb-up”, et al.).  Our goal is to estimate the 
strength of each Microblogger u ’s social influence in 
platform M  based on its posts uP  and its relations uR  
caused by its interactions with other Microbloggers, and 
then rank Mircoblogger u  according to its social 
influence score.  
B. Tensor-based Approach 
Social influence could be inferred by automatically 
capturing the latent factors that govern the relations 
between users in social media. In this section, a 
tensor-based approach is proposed to predict the strength of 
social influence using tensor factorization. For blogger 
media , according to [19], influential bloggers are not 
necessarily active bloggers, and a blogger can be considered 
influential if s/he has at least one influential blog post which 
is be approximated by four properties: recognition, activity 
generation, novelty and eloquence.  
However, a microblog differs from a traditional blog in 
that its content is typically short snippets of text that 
provide any other content that can fit into 140 characters 
and the linkages between Microblogs are very sparse. Thus 
the strength of influential microblog could not be predicted 
by the four proposed blog properties. Hence, we have new 
general assumption for Microblogging platform. The 
influential microblog is suggested by the number of 
Microbloggers who forward the Microblog. The more 
Microbloggers forward a Microblog, the more influential 
the Microblog gets.  
In this section, we firstly check the presented 
assumption using hypothesis testing method in feature 
extraction subsection. And then tensor factorization is 
employed to predict the latent factors that govern the 
strength of Microblogger social influence. Finally, social 
influence measurement function is introduced to rank the 
Microblogger according to the latent factors. 
?1?Feature Extraction  
A Microblog is often forwarded, commented, or 
thumbed up on Microblogging service platform by its 
readers. And the influential strength of Microblog could be 
inferred through analyzing the activities of its readers. Since 
the Microblog’s text is very short and the factor exerting the 
dissemination of the Microblog’s influence is the 
forwarding activity, we assume that the number of 
Microbloggers who forward the Microblog is more essential 
then other factors to suggest the influence of the Microblog. 
In order to verify the assumption, Hypothesis Testing 
experiment is performed using Chinese Weibo Dataset. 
585
Though the volume of Microblogger’s fans could not 
directly infer the influence of a microblog, it could also 
reflect the popularity of Microblogger. Therefore, we can 
rank the Microbloggers according to the volume of 
Microblogger’s fans, and split the whole dataset into two 
subsets by the Medians of the fans’ volume. Therefore, we 
can rank the Microbloggers according to the volume of 
Microblogger’s fans, and split the whole dataset into two 
subsets by the Medians of the fans’ volume. Obviously, 
there exists significant difference on the influence between 
the two subsets. Hence, the statistic difference of the 
interacting activities between the two subsets can be used to 
prove the proposed assumption. Our assumption is 
reasonable if the forwarding activity has more significant 
difference than other interacting activities. Moreover, a rank 
correlation coefficient in statistics can measure the 
significance of the relation between two rankings. So, we 
can verify significant difference of the forwarding activity 
by comparing the rank correlation coefficients between 
three types of interacting activities and fans, respectively. 
The Hypothesis Testing steps are the following: 
1? Sort Microbloggers by the volume of their fans, 
and split Microbloggers dataset into two subsets according 
to the Medians of the fans’ volume. Let formerS  be the 
subset which has less fans, and latterS  be the subset which 
has more fans. 
2? For each interacting activity, calculate the mean 
of the activity on formerS and latterS . former  is the mean 
of the activity on formerS , and latter  is  the mean of the 
activity on latterS . 
3? Compare the difference between former  and 
latter . Thus, null hypothesis is latterformer   , and 
alternative hypothesis is latterformer   . 
4? Assume the activity on formerS and latterS  
follow Gaussian distribution (i.e. 21 1~ ( , )formerX N   , 
2
 2 2~ ( , )latterX N    ),  and compute the test statistic 
T : 
1 2( )
 ~ ( 2)
 1 1
 former latter
 former latter
 w
 former latter
 T t n n
 S
 n n
      
  	 
 	
 Where formern  is the size of formerS  and lattern  is the 
size of latterS . 
5? Under the level of significance 
 , construct 
rejection region   2	 latterformer nntTW 
 . That 
is, if the value of the test statistic T  falls in this region, 
then the decision is to reject the null hypothesis; otherwise, 
we retain the null hypothesis. 
6? Finally, calculate p value (i.e.  TxPp  ) 
for evaluating the level of test. The less p  value is, the 
more trustable the test will be. 
According to the above steps, we perform the 
Hypothesis Testing experiment on Weibo dataset. The 
testing results are shown in Table 1. 
Table 1: Hypothesis Testing Results 
Interacting 
activity 
Statistic T
 
t  
p-value 
 Testing result 
Thumb-up -2.364732 -1.655285 0.009674788 0.05
 former latter 
 Forwarding -2.788807 -1.655285 0.01047729 0.05
 former latter 
 Comment -2.32408 -1.655285 0.01074555 0.05
 former latter 
 The results show that there is strong evidence (with the 
significance level 
 = 0.05) to reject the null hypothesis in 
all tests on three types of interacting activities. That is to say, 
all of three types of interacting activities can reflect the 
influence of Microblogger. 
In order to further verify the forwarding activity can 
586
most reflect the influence of Microblogger. The rank 
correlation coefficients between three types of interacting 
activities and fans are computed, respectively. The 
computing results are given in Table 2. 
Obviously, the rank correlation coefficient between the 
forwarding activity and fans is more significant than other 
interacting activities. Hence, our assumption is reasonable. 
Table 2: Rank Correlation Coefficients 
Rank Correlation 
Coefficient 
Thumb-up Forwarding Comment 
Fan 0.4070363 0.4838018 0.3289258 
?2?Tensor Factorization 
The vector is often used for representation of text based 
on Bag-of-words model. Obviously, it has not enough space 
to hold interaction information between Microbloggers. 
Therefore, a tensor-based approach is proposed to model 
three types of objects: Microblogger, Microblogger and 
activity. The forwarding activity data is represented by a 
3-order tensor, on which 3-mode factorization is employed 
to mine the latent factors that govern the interactions. 
According to the latent factors, social influence function is 
developed to rank Microblogger.  
From the forwarding activity data, we can construct a 
3-order tensor: 
( )ijk N M NX x       (1) 
Where 1ijkx  represents that the Microblog jp  
published by Microblogger iu  is forwarded by 
Microblogger ku .   
Thus, according to [6], the value of ijkx  could be 
predicted by tensor factorization:  
predictH S U P V        (2) 
Where S  is the central tensor where K is the 
dimension of the model latent factors. V,P,U  be latent 
publisher, Microblog, and forwarder feature matrices, with 
column vector iu  representing K-dimensional publisher 
-specific latent feature vector of publisher iu , column 
vector jp  representing K-dimensional Microblog-specific 
latent feature vector of Microblog jp  , and column vector 
kv representing K-dimensional forwarder-specific latent 
feature vector of forwarder kv . The goal of tensor 
factorization is to learn these latent variables and exploit 
them for social influence prediction. 
Assuming that the forwarding counts of microblog ip  
follow normal distribution (i.e. ),(N~p iii 2 ), the 
tensor factorization is converted into a simpler optimization 
problem by maximum likelihood estimation. Given the 
feature matrices and the central tensor, the prediction can be 
made as follows:  
1 1 1
 K K K
 ijk ijk xyz ix jy kz
 x y z
 x h s u p v
   
  
   (3) 
Where ijkh  is the predicted value for ijkx ?and K  is 
the dimension of latent features. Therefore, the objective 
function for the minimization problem is as follows: 
2 2
 2 2 2
 1
 min [ ] || ||
 2 2
 || || || || || ||
 2 2 2
 NpNu Nv Nu
 u
 TF ijk ijk ijk i F
 i j k i
 NpNv
 pv s
 j F k F ijk F
 j k ijk
 E I x h u
 v p s
 
  
   	
 	 	 	
  
   
 (4) 
Where NMNijk )I(I   is the indication tensor 
which could be defined as follows:  

 
 
 .plogmicrobpublisht'doesnugerlogMicrob;
 ;plogmicrobpublishesugerlogMicrob;
 I
 ji
 ji
 ijk 0
 1
 (5) 
F||X||  is the Frobenius norm of a matrix X , and 
)XX(Tr||X|| TF  . This optimization problem can 
587
be minimized by using stochastic gradient descent.  
?3?Social Influence Measurement 
According to [19], an influential user is the one who 
has more than one influential post. Under this assumption, 
the strength of Microblogger’s influence can be directly 
defined as the influence of the microblog which has the 
most influence: 
 jPpi pofluenceinfthemaxf iuj    (6) 
Where if  is the influence of the Microblogger iu  
and
 iu
 P is the set of microblogs published by iu . 
Incorporating the indication tensor I , the formula can be 
written as: 
1,2,..., 1
 max
 Nv
 i ijk ijkj Np k
 f I x
 
 
  
    
     (7) 
Then, the corresponding influence score of 
Microbloggers }u,...,u,u{U N21 is 
}f,...,f,f{f N21 . We can rank the users by if . 
C. Distributed Model 
As Microblogging service platform may contain 
millions of Microblogger and produce very huge volume of 
data, it is impractical to carry out our proposed tensor-based 
algorithm using a single computer. In particular, the 
calculation of H matrix has become a performance 
bottleneck in our tensor-based algorithm. To address the 
challenge, we employ MapReduce model to develop 
distributed algorithm for dealing with the task of calculating 
H matrix on a distributed system during the learning 
process. 
MapReduce [18] is a programming model and an 
associated implementation for processing and generating 
large datasets that is amenable to a broad variety of 
real-world tasks. It takes a set of input key/value pairs, and 
produces a set of output key/value pairs. The user of 
MapReduce often expresses the computation as two 
functions: map and reduce. In our proposed tensor-based 
algorithm, we partition the large Microblogging dataset into 
subsets and distribute each subset to a process node. For 
each subset, ijkh  is calculated for predicting the value of 
ijkx  according to Eq.(3). Thus, the calculation of ijkh  in 
a subset could be implemented as a map stage for deploying 
on a distributed node. The MapReduce process of 
H matrix is shown in Figure 1. 
   
0
   
 
:   
: , ;
 : U,P,V,S
 1: initialize , , and .
 2:set t t
 3 :
 14 : 1
 5 : i, j, k such that is observed
 6 : Matrix _ MapReduce U,  P
 pu vN KN K N K K K K
 ijk
 X K
 U R P R V R S R
 and t t
 t
 x
 
       
 
   	
 Algorithm Tensor Factorization
 Input
 Output
 repeat
 for all do
  
   
  
 
 
 
U / N*(i 1) U / N* i 1 1 U /N*i
   
,  V,  S {
 Split U into u U , U , , U
 Input , to each map
 For each , do
 End
 }
 7 : ( )( )
 8 : ( )( )
 9 : ( )(
 i
 i
 ijk u i p j v k
 i i ijk ijk p j v k
 j j ijk ijk u i v k
 k k ijk ijk u i p
 i u
 i u
 h S U P V
 U U h x S P V
 P P h x S U V
 V V h x S U P
 
 
 
   	
  
    
     
     
      )
 10 : ( )( )
 11:  
12 :  
13 :
 14 :  
15 :
 16 :  
17 :
 18 :
 19 : convergence
 j
 ijk ijk i j k
 i
 i i u i
 j
 j j p j
 k
 k k v k
 s
 S S h x U P V
 U and U
 U U U
 P and P
 P P P
 V and V
 V V V
 S S S
 
 
 
 
 
     
  
  
  
  
 end for
 for each do
 for each do
 for each do
 until
  
Fig 1: Distribute Algorithm Based on MapReduce Model  
III. EXPERIMENTAL ANALYSIS 
In this section, we firstly present several experiments to 
compare prediction accuracy of our tensor-based approach 
with other state-of-the-art matrix-based methods. And then, 
the scalability performance of our distributed approach 
based on MapReduce Model is evaluated for the efficiency 
as the fast growth of Microblogging data. 
588
A. Description of the Chinese Weibo Dataset  
To the best of our knowledge, there is no Chinese 
Microblogging service dataset for social influence analysis. 
Therefore, we created a new Chinese Weibo dataset from 
Sina weibo service platform. The dataset consists of 2564 
microblogs from 100 Microbloggers during 2013-09-09 to 
2013-09-15. And each Microblogger published about 25 
microblogs on average. 
B. Prediction Accuracy 
(1) Metrics 
Firstly, we use the Root Mean Squared Error (RMSE) 
metrics to measure the prediction quality of our proposed 
approach in comparison with other matrix-based methods. 
RMSE is defined as: 
2( )
 | |
 predict
 Data
 x x
 RMSE
 Data
 
 
 
     (8) 
where predictx  is the predicted value for the original 
data x . Obviously, the smaller the metric the more precise 
the prediction result is. 
Secondly, Precision at rank k (P@k) is employed to 
evaluate the precision of our proposed approach. It is 
defined as the coincidence rate of the predicted ranking list 
and the ground truth ranking list for the top- k users: 
    
| |@ k kA Bp k
 k
 
            (9) 
where kA  is the set of top-k users in the gold ranking 
list. kB  is the set of top-k users in the experimental 
ranking list. 
(2) Comparison 
In this section, in order to evaluate the performance of 
our tensor factorization approach, we compare Tensor 
Factorization (TF) approach with Matrix Factorization (MF) 
approach based on Chinese Weibo Dataset. Different 
numbers of latent feature is employed to test both of the 
approaches. The performance of RMSE with varying K 
values is shown in Figure 2. Compared with MF approach, 
TF approach achieves consistently better performance with 
different number of latent feature.  
From Figure 2, as K increases, the RMSE also increases. 
And the best RMSE of tensor factorization approach is 
achieved when K is set 2. Therefore, in the following 
experiments, we set 2K . 
 
Fig 2: Performance Comparison on Different Values of K 
To further measure the performance of TF approach, we 
compare the user ranking lists by TF and MF approaches 
with the manually labeled user ranking list, respectively. 
The comparison results on P@K are shown in Table 3. In 
these results, we can clearly see that TF approach generally 
outperforms MF approach.  
Table 3: Ranking Accuracy with MF and TF on P@K 
Approach p@5 p@10 p@15
 MF 0.40 0.40 0.40 
TF 0.40 0.50 0.47 
 In summary, the superior performance of the TF 
approach validates its excellent use of Microblogger social 
influence analysis. 
C. Scalability Performance 
(1) Metrics 
The scalability of our distributed approach based on 
MapReduce model was evaluated by the Speed-up ratio, 
which is defined as the ratio between time needed in single 
processor system and parallel processor system. The 
formula is as follows: 
1
 p
 p
 TS
 T
       (10)
 where 1T  is the time that running under the single 
processor, and pT   is the time running under P child node 
589
in the parallel system. 
(2) Comparison 
 To test the scalability of our MapReduce–based 
distributed approach, we randomly generated four different 
sizes of test data sets in which VP   dimension is 1000 * 
1000 and U  dimensions are 100/1000/10000/100000 
respectively.  
Firstly, we measure running time of our distributed 
approach on MapReduce Model varying different scale 
datasets with 100/1000/10000/100000 respectively. The 
experimental results are shown in Figure 3. In the figure, 
when the Microblogger number is 100, time on twelve 
nodes is more than two nodes. However, with the 
increasing of test data scale, time on more than one node 
is significantly less than the operational time on single 
node. Thus, the experimental result illustrates the H 
matrix calculation based on the MapReduce Model can 
effectively alleviate the performance bottleneck with the 
growth of data size. 
"
 Fig 3: Running Time on different scale data in cloud platform (log scale) 
Secondly, speed-up ratio on different number of 
nodes is used to evaluate our proposed method’s 
performance and effect of parallel computation. Using 
our large citation data set, we also perform speedup 
experiments on a Hadoop platform using 1, 2, 4, 8, 12 
computer nodes. The experimental results are shown in 
Figure 4, where it is observed that speed-up ratio is 
rising with the increasing of nodes. In particular, time on 
twelve nodes cost more than that on two nodes when 
Microbloggers’ size is 100. The reason is that when the 
cloud platform dealing with small amount of data, the 
cost of task scheduling and network communication 
overhead outperforms the time saving from node’s 
increments. However, with the increment of the data 
scale, the speedup shows reasonable parallel efficiency 
with 10 pS  speedup using 12 computer nodes.  
"
 Fig 4: Speedup ratios on different scale data in cloud platform 
IV. CONCLUSION
 In this paper, a tensor factorization framework 
based on cloud computing platform is proposed for 
mining social influence in Microblogging. In the 
framework, features are extracted for capturing user 
social influence quantitatively through statistical analysis 
on the Microbloggers’ relations. And then Tensor 
factorization is employed to infer user’s implicit user’s 
relations. Furthermore, a distributed learning algorithm 
has been implemented under the Map-reduce 
programming model. Finally, a user influence ranking 
function is constructed for computing user social 
influence in user influence ranking component. 
Experiments on Sina Weibo dataset (Chinese 
Microblogging platform) show that our proposal 
significantly not only improves the prediction accuracy 
compared with two baseline methods, but also has 
competitive advantage for processing massive data from 
Microblogging . 
 
ACKNOWLEDGMENT 
The authors would like to thank the support of 
National Natural Science Foundation of China under Grant 
No.61300105,Research Fund for Doctoral Program of High
 er Education of China under Grant No. 2012351410010, the 
Key Project of Science and Technology of Fujian under 
Grant No. 2013H6012 and the Project of Science and 
Technology of Fuzhou under Grant No. 2012-G-113. 
 
590
REFERENCES 
[1] A. Anagnostopoulos, R. Kumar, and M. Mahdian, 
“Influence and correlation in social networks,” in 
Proceedings of the 14th ACM SIGKDD 
international conference on Knowledge discovery 
and data mining, 2008, pp. 7–15. 
[2] L. Liu, J. Tang, J. Han, et al, “Mining Topic-level 
Influence in Heterogeneous Networks,” in 
Proceedings of the 19th ACM international 
conference on Information and knowledge 
management, 2010, pp. 199-208. 
[3] P. Cui, F. Wang, S. Liu, et al, “Who Should Share 
What?: Item-level Social Influence Prediction for 
Users and Posts Ranking,” in Proceedings of the 
34th international ACM SIGIR conference, 2011, pp. 
185-194. 
[4] Y. Chi, and S. Zhu, “FacetCube: A Framework of 
Incorporating Prior Knowledge into Non-negative 
Tensor Factorization,” in Proceedings of the 19th 
ACM international conference on Information and 
knowledge management, 2010, pp. 569-578. 
[5] Z. Yan and J. Zhou, “A New Approach to Answerer 
Recommendation in Community Question 
Answering Services,” in Advances in Information 
Retrieval, 2012, pp. 121-132. 
[6] S. Moghaddam, M. Jamali, M. Ester, “ETF: Extended 
Tensor Factorization Model for Personalizing 
Prediction of Review Helpfulness,” in Proceedings 
of the fifth ACM international conference on Web 
search and data mining, 2012, pp. 163-172. 
[7] J. Tang, J. Sun, C. Wang, and Z. Yang, “Social 
influence analysis in large-scale networks,” in 
Proceedings of the 15th ACM SIGKDD 
international conference, 2009, pp. 807–816. 
[8] D. Agarwal, “Personalized Recommendation of User 
Comments via Factor Models,” in Proceedings of 
the Conference on Empirical Methods in Natural 
Language Processing, 2011, pp. 571-582. 
[9] K. Cai, S. Bao, Z. Yang, et al, “OOLAM: An Opinion 
Oriented Link Analysis Model for Influence 
Persona Discovery,” in Proceedings of the fourth 
ACM international conference on Web search and 
data mining, 2011, pp. 645-654. 
[10] S. Yang, A. Smola, B. Long, et al, “Friend or 
Frenemy? Predicting Signed Ties in Social 
Networks,” in Proceedings of the 35th international 
ACM SIGIR conference on Research and 
development in information retrieval, 2012, pp. 
555-564. 
[11] C. Tan, L. Lee, J. Tang, et al, “User-Level Sentiment 
Analysis Incorporating Social Networks,” in 
Proceedings of the 17th ACM SIGKDD 
international conference on Knowledge discovery 
and data mining, 2011, pp. 1397-1405. 
[12] M. Hu, A. Sun, and E. Lim, “Comments-Oriented 
Document Summarization: Understanding 
Documents with Readers’ Feedback,” in 
Proceedings of the 31st annual international ACM 
SIGIR conference on Research and development in 
information retrieval, 2008, pp. 291-298. 
[13] B. Chen, J. Guo, B. Tseng and J. Yang, “User 
Reputation in a Comment Rating Environment,” in 
Proceedings of the 17th ACM SIGKDD 
international conference on Knowledge discovery 
and data mining, 2011, pp. 159-167. 
[14] J. Sun, H. Zeng, H. Liu, et al, “CubeSVD: A Novel 
Approach to Personalized Web Search,”  in 
Proceedings of the 14th international conference on 
World Wide Web, 2005, pp. 382-390. 
[15] Y. Shi, A. Karatzoglou, L. Baltrunas, et al, “TFMAP: 
Optimizing MAP for Top-N Context-aware 
Recommendation,” in Proceedings of the 35th 
international ACM SIGIR conference, 2012, pp. 
155-164. 
[16] H. Ma, H. Yang, M. R. Lyu, I. King, et al, “SoRec: 
Social Recommendation Using Probabilistic Matrix 
Factorization,” in Proceedings of the 17th ACM 
conference on Information and knowledge 
management, 2008, pp. 931-940. 
[17] C. Chu, S. K. Kim, Y. A. Lin, Y. Yu, G. R. Bradski, 
A. Y. Ng, and K. Olukotun,  “Map-Reduce for 
machine learning on multicore,” in Proceedings of 
the 18th Neural Information Processing Systems 
(NIPS’06), 2006. 
[18] J. Dean and S. Ghemawat, “MapReduce: Simplified 
Data Processing,” in Communications of the ACM, 
2008, 51(1): 107-113. 
[19] N. Agarwal, H. Liu, L. Tang, et al, “Identifying the 
Influential Bloggers in a Community,” in 
Proceedings of the fourth ACM international 
conference on Web search and data mining, 2008, 
pp. 207-218. 
591
