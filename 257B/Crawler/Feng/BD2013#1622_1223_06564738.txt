Analysis and development of a reliable fixed wing UAV 
control system for mission profiles with restricted GPS 
availability  
 
M. Garcia*, T. Muskardin**, A. Viguria*, M. Laiacker**, A. Ollero*,+, K. Kondak** 
*Center for Advanced Aerospace Techonologies (CATEC) 
Parque Tecnológico y Aeronáutico de Andalucía 
c/ Wilbur y Orville Wright 19  41309 - La Rinconada Seville (Spain) 
{mgarcia, aviguria and aollero} @catec.aero 
** German Aerospace Center (DLR) (Munich, Germany) 
 Tin.Muskardin@dlr.de 
Maximilian.Laiacker@dlr.de  
Konstantin.Kondak@dlr.de 
 +Universidad de Sevilla (Spain) 
aollero@cartuja.us.es 
 
Abstract – This paper is motivated by the 
actual need for safer and more reliable flight 
control systems for fixed wing UAVs. In 
certain mission scenarios, it is necessary to fly 
close to big structures at low altitudes where 
the availability of GPS sensor data cannot be 
guaranteed. Two different control strategies 
have been analyzed, with the main difference 
consisting in the utilization of GPS data for 
flight control. An extended system allowing 
those two control strategies to complement 
one to another has been developed. Its 
performance has been analyzed through 
simulation and in flight experiments. The 
result is a more reliable flight control system 
for flying in areas with restricted GPS signal. 
I. INTRODUCTION 
The interest in small unmanned aerial vehicles 
(UAVs) has been rising in the past years, due to 
the variety of possibilities they offer. UAVs are 
already being used for diverse purposes such as 
remote sensing, traffic monitoring, search and 
rescue missions, mapping, and surveillance while 
new application scenarios are being discovered 
continuously. For the successful execution of 
most missions, autonomous flight capabilities are 
required in order to perform a given task without 
or with only little, manual guidance. These 
capabilities are implemented by means of 
suitable sensors and on-board processing 
capabilities. An accurate estimation of all system 
states is needed. Commonly used state estimation 
methods are based on Kalman filters [1]. Many 
researchers have studied the problems involved 
in the guidance and control of small UAVs in 
environments with restricted conditions, such as 
lack of GPS signal or poor visibility. To cope 
with the difficulties arising from the mentioned 
constraints, they have used a variety of sensors 
such as lasers or vision sensors, in addition to the 
most common combination of GPS and INS 
sensors [2], [3], [4].  
During the analysis and development of an 
integrated UAV system, many aspects have to be 
considered. Among others, these could include 
the airframe configuration, the sensor system, the 
flight control system and the communication 
system. In this paper we focus on the 
development of the control strategy. 
2013 International Conference on Unmanned Aircraft Systems (ICUAS)
 May 28-31, 2013, Grand Hyatt Atlanta, Atlanta, GA
 978-1-4799-0817-2/13/$31.00 ©2013 IEEE 599
The DLR Robotics and Mechatronics Center and 
the Avionics Department of FADA-CATEC 
have been working on different control strategies 
for different types of fixed wing UAVs. The goal 
of the joint work presented here was to 
investigate the experiences and results made with 
the different systems and to come up with a new 
solution that allows those systems to 
complement each other and answer the need for 
higher reliability and safety. 
This paper is organized as follows: in section 2 a 
detailed description of both controllers with 
diagrams will be given and the differences 
between both strategies will be explained. The 
simulation environment and results of the 
performance analysis for each control structure 
will be shown in section 3. In section 4 the flight 
experiment setup and the results obtained from 
telemetry will be described. In section 5 a 
backup system will be proposed based on a 
combination of the previously evaluated 
strategies along with simulation results. Finally, 
concluding remarks will be presented in section 
6.  
II. DESCRIPTION OF CONTROLLER SCHEMES 
Two different control strategies will be 
compared in this section.  
The first controller to be considered will be 
identified with the letter A and is based on GPS 
sensor data for the calculation of certain 
variables in the basic flight control loops. On the 
other hand, the controller identified with B does 
not use GPS data to perform the task of flight 
control. The design of these controllers has been 
implemented in Matlab/Simulink. Only level 
flight and trajectory following phases of the 
flight plan have been analyzed. This paper does 
not deal with the take-off and landing phases.  
Firstly, it is necessary to adapt the inputs of both 
controllers to the outputs of the flight guidance 
module (navigator). It is important to standardize 
the coordinate systems and the data units for 
both controllers. There are three main inputs: 
airspeed, height and course. These inputs 
represent the desired values computed in the 
navigator and, if maintained correctly by the 
flight controller, will lead the UAV to perform 
the commanded flight plan. A standard fixed 
wing UAV requires four control parameters 
where one is related to the engine and the other 
three are related to three available control 
surfaces: the elevator, the ailerons and the 
rudder. In our case the rudder will not be used 
for flight control. The rudder is usually used for 
turn coordination and for the compensation of 
lateral winds. Furthermore, the rudder could also 
be used in the take-off and landing phases in 
order to align the UAV with the runway. In this 
paper we will assume that the rudder remains in 
the trim position during the whole experiment.  
The high level structure of both controllers is 
composed of three main blocks. The output of 
each block corresponds to the respective input 
parameter which is to be controlled and 
represents the available corrective action (as 
input to the aircraft’s flight dynamics). Each 
block represents an independent control loop and 
will be named after its input parameter. This 
means that throttle is the output of the airspeed 
control loop, the elevator output corresponds to 
the height control loop and the ailerons to the 
course control loop. Accordingly the input / 
output table looks as follows:  
Airspeed ? Throttle 
Height  ?  Elevator 
Course  ?  Aileron 
Both, controller A and controller B use a set of 
cascaded PI controllers. The differences between 
them appear on the inside of the three main 
blocks. Controller A is based on GPS sensor data 
and involves different control loops than 
controller B, where the used sensor data is based 
on inertial and barometric measurements. Hence, 
controller A is suitable for platforms which offer 
very accurate GPS data (e.g. using enhancement 
methods like differential GPS) and where 
failures or signal loss are rather unlikely. This 
controller would be suitable when precise 
trajectory following is required. On the other 
hand, controller B is appropriate for platforms on 
which GPS data is not as reliable. Sometimes 
flight plans include areas with poor GPS 
coverage and it would be dangerous to solely 
depend on that data.  
600
The approach for the analysis of the schemes 
presented below is as follows: each control loop 
is described for both, controller A and controller 
B and the differences between them are pointed 
out.  
Airspeed control loop 
The throttle command (?t) is computed directly 
from the airspeed loop. It consists of a PI 
controller accounting for the airspeed error, and 
a Feed-Forward term adding in a predefined 
throttle position depending on the commanded 
airspeed.  
The average throttle position can be calculated as 
a function of airspeed based on telemetry from 
manual flights. This function has to be 
determined for the operational range of airspeeds 
for a given UAV. This means that when a certain 
airspeed is commanded, the expected throttle 
position is applied and the PI controller will 
work with the errors around the commanded 
value. The variables appearing in Fig. 1 refer to 
the airspeed command Vcmd and the airspeed V. 
 
 
 
 
Fig. 1: Airspeed control loop for both controllers. 
Due to this Feed-Forward (FF) term, the airspeed 
controller is more reactive which helps the 
aircraft in reaching the commanded airspeed 
faster.  
Height control loop 
The height control loop acts on the longitudinal 
dynamics of the UAV which will be considered 
as decoupled from the lateral aircraft dynamics. 
It is advisable though to couple them in order not 
to lose height in turns, as will be discussed later. 
Also, airspeed and height will be controlled 
separately, without any direct coupling, which is 
a common approach. 
The biggest difference between the two 
controllers lies within this loop. The global 
inputs and outputs are the same for both 
controllers, but the inner control loop structure is 
different. Fig. 2 and Fig. 3 illustrate the two 
proposed control schemes where the GPS 
dependent signals are labeled in bold. The 
variables in the following figures and 
expressions refer to: height command hcmd, GPS 
height hgps, barometric height hbar, climb angle 
command ?cmd, climb angle ?, pitch angle 
command ?cmd, pitch angle ? angle of attack ?, 
angle of attack command ?cmd, GPS velocity 
Vgps, pitch rate q, pitch rate command qcmd, pitch 
rate compensation for turns qcomp, and elevator 
command ?e. 
Controller A 
 
 
 
 
 
 
 
 
 
 
Fig. 2: Height control loop for controller A (based on 
GPS). 
Controller B 
 
 
 
 
 
 
 
 
 
 
 
 
Fig. 3: Height control loop for controller B (independent of 
GPS) with Stability Augmentation System (SAS) 
q 
?e 
q 
qcmd 
???? 
Vgps 
? 
? 
+ 
- 
Eq. 2 
+ 
+ 
P 
+ 
- 
P 
error_q 
?e 
+ 
 
+ 
 
+ 
 
SAS 
(damping) 
q 
hcmd 
hbar PI 
error_h 
????+ 
- 
? 
+ 
- 
error_ P
 I 
Eq. 2 
? 
V P 
PI 
Vcmd 
V 
+ 
+ 
error_V 
?t + 
+ 
FF 
???? + 
- 
P
 I 
error_? 
? 
hcm
  
hgps 
error_h 
?????
 Vgps 
Eq. 
1 
???? 
+ 
- 
P
 I 
qcomp 
601
 
With climb angle:  
???? = ?????
 ?????
 ????
    (1) 
and pitch rate turn compensation 
????? =
 ? ???? ????
 ????
   (2) 
Here ? is the roll angle. The second equation 
represents the aforementioned coupling between 
the longitudinal and lateral dynamics of the 
aircraft and is called turn compensation [5], [6]. 
A pitch rate command is calculated from the 
current flight velocity and roll angle preventing 
the aircraft to pitch down and loose height when 
the vertical component of the tilted lift force is 
reduced in turns.  
As can be seen in the above control schemes, 
both controllers are based on a set of cascaded P 
and PI controllers. The main difference can be 
found in the output of the outer loop. In 
controller A the desired climb angle is generated 
from a difference in height. In controller B the 
desired pitch angle is calculated from a given 
height difference.  
It should be noted that the climb angle 
determines the UAV’s flight path and therefore 
directly relates to a change in height (1). Instead, 
the pitch angle is related to the UAV’s attitude, 
and is computed as the angle between the 
longitudinal axis of the aircraft and the 
horizontal plane. It is thus only indirectly related 
to a change in height as steady flight conditions 
can be obtained with different trim pitch angles. 
The climb angle depends on both the pitch angle 
and the angle of attack: 
???????????? ??????:   ? = ? + ?  (3) 
 
Course control loop 
The course control loop acts on the lateral 
dynamics of the aircraft. As mentioned before, it 
can be treated as completely decoupled from the 
longitudinal dynamics. This loop is very similar 
for both controllers. Differences can be found in 
the utilization of GPS data for the computation 
of the roll angle in controller A as well as the 
different configuration of the roll rate loop. The 
roll rate loop is the innermost loop of cascaded 
controller A with a dynamically generated 
command variable. On the other hand, it 
represents a Stability Augmentation System 
(SAS) in controller B with a constant desired roll 
rate of zero. Mathematically these two variations 
can be transformed into one another and are 
equivalent. Hence, similar performance is 
expected in lateral dynamics for both controllers. 
Again, the GPS dependent data is in bold 
characters. The variables that appear in the next 
figures and expressions refer to: course 
command ?cmd, GPS course ?gps, magnetometer 
course ?mag, course rate command ?????, GPS 
velocity Vgps, roll angle command ????, roll 
angle ?, roll rate p, roll rate command pcmd, 
aileron command ?a. 
Controller A 
 
 
 
 
 
 
 
Fig. 4: Course control loop for controller A (based on 
GPS) 
Controller B 
 
 
 
 
 
Fig. 5: Course control loop for controller B (independent 
of GPS) 
As mentioned before, controller A uses GPS 
sensor data to determine the desired roll angle. 
This calculation is based on the output of the 
error_? 
p 
pcmd 
error_p ?a 
PI + 
 
- 
 
P 
+ 
 
 
 
+ 
 
?a 
SAS 
(damping) 
p 
error_ ? 
? 
???? error_? 
?cmd 
?mag 
+ 
- 
P + 
- 
PI 
error_? 
? 
???? 
Vgps 
????? error_? 
?cmd 
?gps 
+ 
- 
P 
Eq. 4 
+ 
- 
602
course loop (outermost loop) where the desired 
course rate is calculated. The following equation 
is then used to compute the roll angle from 
measured GPS velocity Vgps and desired course 
change rate ??: 
? = ?????
 ????
 ???
    (4) 
III. SIMULATION RESULTS 
For simulations, a flight dynamics model based 
on [7] and [8] has been used. That model had 
been validated for a different aircraft with 
smaller mass but similar flight characteristics. 
Certain parameters were changed in order to 
adapt to the mass and geometry settings of the 
platform we intended to use in flight 
experiments. The model was then utilized to 
determine an initial set of autopilot gains to be 
used as a starting point for the manual tuning 
procedure. This approach has been proven valid 
before, when it was applied to the above 
mentioned heavier and larger aerial platform and 
flight controller A. It contains a 6-DOF non-
 linear aircraft model where forces generated by 
the plane’s aerodynamic surfaces (including the 
fuselage), the engine thrust and the non-linear 
actuator behavior have been considered. The 
thrust model has been determined from actual 
measurements on the ground as described in [8]. 
The contact forces of the landing gear have been 
incorporated as well, but are of no interest for 
this paper. 
Longitudinal dynamics results 
In this section, the simulation results for the 
height control loop will be presented. Fig. 6 
shows the step response of both controllers for 
different height steps.  
Even with the appropriate controller gain 
combination (calculation based on a simplified 
linear model using pole placement and 
successive manual fine-tuning) an overshoot can 
be observed for controller B. This behavior 
cannot be observed for controller A where no 
overshoot occurs. The explanation can be found 
in the different control structures of controller A 
and controller B (Fig. 2 and Fig. 3). As described 
above, climb angle is used as one of the control 
variables in controller A. This parameter is a 
component of the functional chain of the aircrafts 
flight dynamics where it directly precedes the 
actual height change. This means that a change 
in climb angle will necessarily and immediately 
induce a change in height. On the other hand, by 
calculating climb angle from height control 
deviation (instead of pitch angle as done in 
controller B) the influence of the angle of attack 
is not relevant. As for controller B, depending on 
the angle of attack, different pitch angles can 
lead to the same flight condition which 
especially makes an impact during the unsteady 
transition phases where the overshoot occurs. 
Another significant difference is the higher 
number of cascaded loops present in controller 
A. Due to the additional loop, controller A can 
account for disturbances in the primary variable 
faster and control it more effectively. It also 
reduces the effects of dead time and phase lag 
time in the system.  
 
Fig. 6: Height control loop performance for both 
controllers in nonlinear simulation 
The next figure shows the behavior in pitch- and 
climb angle for both controllers when 
performing the steps in height. Controller A is 
very reactive and performs changes in both 
angles faster than controller B.  
 
Fig. 7: Pitch (left) and climb angle (right) comparison for 
both controllers 
 
0 20 40 60 80 100 120 140
 60
 70
 80
 90
 100
 110
 120
 130
 140
 time (s)
 H
 ei
 gh
 t 
(m
 )
  
 
Reference
 controller B
 controller A
 0 20 40 60 80 100 120 140
 -40
 -30
 -20
 -10
 0
 10
 20
 30
 time (s)
 P
 itc
 h 
an
 gl
 e 
(d
 eg
 )
  
 
controller B
 controller A
 0 20 40 60 80 100 120 140
 -40
 -30
 -20
 -10
 0
 10
 20
 time (s)
 C
 lim
 b 
an
 gl
 e 
(d
 eg
 )
  
 
controller B
 controller A
 603
 
Lateral dynamics results 
A simulation has been performed for the course 
control loop as well. As described in the 
controller scheme section, the structure of both 
lateral controllers does not differ significantly. 
Hence, a similar behavior was expected. Fig. 8 
shows the simulation results; as expected, the 
lateral flight control performance is very similar 
in both cases.   
 
Fig. 8: Course (left) and roll angle (right) comparison for 
both controllers 
IV. FLIGHT TESTS 
The flight experiments have been performed 
using ELWIRA, one of DLR’s fixed wing 
platforms as shown in Fig.  9. 
 
Fig.  9: ELWIRA platform used for flight experiments 
With a wingspan of 4.3m and a maximum 
payload of 20kg ELWIRA is an electrically 
powered universal test platform suitable for most 
experiments without the need for 
miniaturization. The available sensor data 
consists of inertial measurement data, data from 
the Air Data System and the data derived from 
differential GPS (DGPS) working in RTK mode 
(positioning accuracy of several centimeters).  
The ground control equipment consisted of a 
computer running the Matlab/Simulink, a second 
computer for telemetry monitoring, the 
communications equipment and the DGPS 
ground station. The communications link is 
established by means of a wireless 5.8GHz 
router and a 2.4GHz digital modem as backup 
solution in case of communication loss. The 
5.8GHz high gain antenna has been mounted on 
an antenna tracker constantly pointing at the 
aircraft whereat the 2.4GHz omnidirectional 
antenna was installed on the ground. During the 
whole flight the safety pilot had the option to 
switch off the autopilot system and gain full RC 
control of the aircraft. 
As mentioned before all flight control laws have 
been designed and analyzed with 
Matlab/Simulink. The Simulink Real Time 
Workshop (RTW) toolbox has been used for 
automatic code generation and the code has been 
compiled for the real-time operating system 
QNX which is running on the Flight Control 
Computer. Considering the existing aircraft 
model as representative enough, it has been used 
to calculate a first set of controller gains as 
starting point for a manual tuning procedure. In 
doing so, the airspeed controller was first tuned, 
then the height controller, and finally the course 
controllers. 
Longitudinal dynamics results 
For the analysis of the longitudinal dynamics, it 
is important to consider both the performance of 
the height controller as well as the airspeed 
controller performance. The nominal cruise 
airspeed for the ELWIRA platform is 22 m/s. 
Fig. 10 shows a sequence of the airspeed 
controller performance during the flight 
experiments. A good general aircraft behavior 
can be observed.  
 
Fig. 10: Airspeed control loop performance in real flight 
At the moment, few flight experiments have 
been conducted. The tuning of the height 
controller has shown to be complex and time-
 0 20 40 60 80 100 120 140 160
 -200
 -150
 -100
 -50
 0
 50
 100
 150
 200
 time (s)
 C
 ou
 rs
 e 
(d
 eg
 )
  
 
Reference
 controller B
 controller A
 0 20 40 60 80 100 120 140 160
 -60
 -40
 -20
 0
 20
 40
 60
 time (s)
 R
 ol
 l a
 ng
 le
  (
 de
 g)
  
 
controller B
 controller A
 350 360 370 380 390 400 410 420 430 440
 18
 19
 20
 21
 22
 23
 24
 25
 A
 irs
 pe
 ed
  (
 m
 /s
 )
 time (s)
 604
consuming, due its higher number of cascaded 
loops. It was important to fly in a straight line 
during the basic tuning process in order to avoid 
the introduction of any coupling effects with the 
aircraft’s turning dynamics. Only by doing so it 
was possible to tune loop by loop, starting with 
the lower level loops. By following this 
systematic approach it should be possible to find 
a good set of controller gains based on the values 
obtained from the simulator and providing a 
satisfactory flight performance. Height controller 
A had already successfully undergone the whole 
tuning process as just described in previous flight 
experiments. Unfortunately we were not able to 
reach this goal for both controllers yet. As can be 
seen in Fig. 11 the pitch loop has been tuned 
successfully.    
 
Fig. 11: Pitch loop performance of controller B in real 
flight 
The outer loop though, which corresponds to the 
height control loop, was still oscillating. After 
the tuning process performed so far, Controller B 
did allow for coarsely following a given height 
reference but did not perform optimally. Future 
analyses and flight tests will be devoted to the 
improvement of the tuning of controller B. The 
performance of both controllers in their current 
state is shown in Fig. 12: . 
  
Fig. 12: Height control loop performance in real flight 
At this point we can only conclude that 
controller B is suitable for keeping the aircraft in 
the air within about 15 meters of a specified 
altitude. A quantitative comparison of the two 
control strategies was not possible based on the 
performed flight experiments. It remains the 
objective of future research.  
Lateral dynamics results 
The course control loop performance was 
analyzed by following an eight-pattern waypoint 
route successively with both controllers. Only 
small differences in the performance of the 
course controllers were expected due to the high 
similarity of their control structures. Fig. 13 
shows the performance of the course- and roll 
angle control loop. The actual differences are 
indeed minor.  
 
Fig. 13: Course and roll angle for both controllers in real 
flight 
V. BACKUP CONTROLLER STRATEGY 
In this section, a new strategy for an extended 
controller concept will be presented. As 
previously discussed, some applications require 
precise trajectory following capabilities in order 
to adhere to the pre-planned flight routes. 
Common examples are mission scenarios such as 
urban surveillance or rural search and rescue 
missions where UAVs have to fly around 
buildings or other structures at low altitudes. 
These environments are surrounded by abrupt 
terrain changes which makes precise trajectory 
following strictly required. In order to comply 
with this requirement, two factors play a crucial 
role. The first is the accuracy of the available 
positioning data (GPS) and the second is the 
performance of the flight controller. Controllers 
based on precise GPS data, such as controller A, 
are suitable for this kind of application. The 
problem arises in areas where the GPS reception 
600 620 640 660 680 700 720 740 760
 -30
 -25
 -20
 -15
 -10
 -5
 0
 5
 10
 15
 20
 time (s)
 pi
 tc
 h 
an
 gl
 e 
(d
 eg
 )
  
 
reference
 state
 650 660 670 680 690 700 710 720 730 740 750
 60
 80
 100
 120
 140
 160
 180
 200
 220
 time (s)
 he
 ig
 ht
  (
 m
 )
  
 
reference
 controller A
 600 620 640 660 680 700 720 740 760
 80
 100
 120
 140
 160
 180
 200
 time (s)
 he
 ig
 ht
  (
 m
 )
  
 
reference
 controller B
 100 120 140 160 180 200 220
 -200
 -150
 -100
 -50
 0
 50
 100
 150
 200
 co
 ur
 se
  (
 de
 g)
 time (s)
  
 
Controller B
 Controller A
 0 20 40 60 80 100 120
 -60
 -40
 -20
 0
 20
 40
 60
 ro
 ll 
(d
 eg
 )
 time (s)
  
 
Controller B
 Controller A
 605
is compromised, which might render the 
positioning data untrustworthy. In that case 
another “backup” controller, not requiring GPS 
data to perform the basic flight control tasks, 
would pitch in. This controller would then safely 
fly the aircraft until the GPS signal is recovered. 
In this section a composed control structure will 
be proposed, having controller A commanding 
the aircraft when GPS data is of appropriate 
quality to track the pre-planned trajectory, and 
controller B commanding when GPS data is 
compromised or not available.  
In addition to changing the active flight 
controller, it might also be necessary to change 
the navigation plan. If GPS positioning data is 
fully unavailable, it will not be possible to track 
a route of waypoints. In that case controller B 
would control the aircraft and initiate a turning 
maneuver with a constant course rate while 
increasing the altitude to a value high enough in 
order not to collide with any obstacle.  
Fig. 15 shows the result of a simulated GPS 
failure. The aircraft was supposed to follow an 
eight-pattern route of waypoints when GPS data 
suddenly becomes unavailable (beginning of 
blue dashed line in Fig. 14 and Fig. 15). The fail-
 safe system kicks in (changeover to GPS 
independent controller B) and the aircraft starts 
turning around the position at which the error 
was first identified. During this turning 
maneuver the flight altitude is constantly 
increased to allow for a better GPS reception and 
consequent recovery as described above. The 
height controller therefore uses barometric 
altitude measurements as shown in Fig. 3. The 
height change is illustrated in Fig. 16. In the 
moment GPS-lock is re-established, controller A 
takes back control, returning the aircraft to the 
previous waypoint route (end of blue dashed line 
in Fig. 14 and Fig. 15).  
 
Fig. 14: Simulated GPS failure 
 
Fig. 15: Simulated trajectory with sudden GPS failure 
 
Fig. 16: Simulated height control performance in case of 
GPS failure during flight 
For this type of mission profile it is important to 
synchronize the height information obtained 
through GPS measurements and by means of 
barometric measurements. GPS height 
information is given in WGS84 coordinates 
which can differ from the barometric height data 
depending on the current ground pressure and the 
deviation of the actual vertical temperature 
gradient from its definition in the standard 
atmosphere. It is therefore essential to 
synchronize both measurements before flight in 
order not to have offsets when changing from 
one to another. Another important point to be 
considered arises from the difference between 
course angle and heading. The course angle is 
computed from GPS velocity components and 
therefore represents the actual direction of flight. 
In the case of GPS data being unavailable, it is 
only possible to compute the heading using a 
606
magnetometer. This parameter represents the 
pointing direction of the aircraft’s x-axis in 
relation to magnetic north. The difference 
between both values is called sideslip angle and 
is caused by the wind. This means that a 
smoother controller switching, in terms of course 
control performance, can be expected in less 
windy conditions.  
VI. CONCLUSIONS  
In this paper, two different flight controllers for 
fixed wing UAVs have been analyzed and 
compared. The main difference between their 
respective control strategies was rooted in the 
usage of GPS positioning data within the basic 
flight control loops. Apart from that, both 
controller concepts were similar, with some 
differences in the loop distribution of the 
cascaded control structures (especially in the 
longitudinal controller). Both systems have been 
analyzed in simulation and in flight experiments 
and a qualitative performance analysis has been 
conducted. A non-linear model of the test 
platform was used to compute an initial set of 
control parameters as starting point for the first 
test flights. The simulation has shown little 
difference between both controllers with regard 
to the lateral dynamics. The longitudinal 
controller analysis showed a small but systematic 
overshoot in the height step response of 
controller B. This effect can be led back to the 
use of different control variables and the unequal 
number of loops used in the two cascaded 
controllers. 
Two flight tests have been performed with the 
ELWIRA aerial platform which was equipped 
with the full DLR avionics system. The lateral 
dynamics results were very satisfactory, as no 
considerable difference between both controllers 
was observed. However, due to the unsuccessful 
fine-tuning performed until now, the longitudinal 
controller B was still showing some oscillations 
in the height loop. The overshoot which has been 
encountered during the simulations was observed 
as well during the flight experiments. The 
successful termination of the tuning procedure 
for the height loop of controller B will be part of 
successive analyses and experiments in the 
future. 
A new backup controller was proposed in the last 
section, representing a combination of both 
strategies. This extended controller was able to 
maintain safe flight conditions in cases when 
GPS reception was lost during flight. This 
behavior could only be analyzed in simulation 
experiments for now. The next step consists in 
the validation of the proposed method by means 
of actual flight experiments crossing over GPS 
denied areas. 
Acknowledgements 
This work was partially funded by the FP7 
European Commission PEOPLE Program under 
the project MUAC-IREN (FP7-295300) and the 
FP7 large-scale integrating project EC-
 SAFEMOBIL (FP7-ICT-2011-7).  
 
REFERENCES 
 
[1] H. Chao, Y. Cao and Y. Chen, Autopilots for 
Small Unmanned Aerial Vehicles, 
International Journal of Control, Automation 
and Systems 8(1):36-44., 2010.  
[2] A. Bry, A. Bachrach and N. Roy, State 
Estimation for Aggressive Flight in GPS-
 Denied Environments Using Onboard 
Sensing, Proceedings of the IEEE 
International Conference on Robotics and 
Automation., 2012.  
[3] M. Hwangbo, Vision-Based Navigation for a 
Small Fixed-Wing Airplane in Urban 
Environment, Robotics Institute Carnegie 
Mellon University Pittsburgh., 2012.  
[4] A. Wu, E. Johnson and A. Proctor, Vision-
 Aided Inertial Navigation for Flight Control, 
AIAA Guidance, Navigation, and Control 
Conference and Exhibit., 2005.  
[5] B. L. Stevens and F. L. Lewis, Aircraft 
Control and Simulation, 2003.  
[6] R. Brockhaus, Flugregelung, Springer, 2001.  
607
[7] T. Lombaerts, Aerodynamic model 
identification of Frauke UAV, AIAA 2012 
Atmospheric Flight Mechanics Conference 
and Exhibit, 2012.  
[8] M. Laiacker, Entwurf und Implementierung 
einer Steuerung für eine Drohne auf Basis 
eines Modellflugzeugs., Diplomarbeit am 
Lehrstuhl für Prozessdatenverarbeitung und 
Robotik der Technischen Universität Berlin, 
2009.  
 
 
608
