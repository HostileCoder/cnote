2013 International Conference on Computing, Networking and Communications, Data Storage Technology and Applications
 Symposium
 Design of LDPC Coding Schemes for Exploitation of Bit Error Rate Diversity across
 Dies in NAND Flash Memory
 Ravi Motwani and Chong Ong
 Intel Corporation, USA, Canada, NVM Solutions Group
 ravi.h.motwani@intel.com, chong.ong@intel.com
 Abstract
 LDPC codes have been proposed for Flash memories due to
 their capability to correct higher number of bit errors. Several
 mechanisms can lead to bit errors in Flash memories. An ex?
 tensive list of these mechanisms as enlisted in [1] includes pro?
 gram disturb from tunneling, quantum level noise effects, er?
 ratic tunneling, SILC-related data retention and read disturb, and
 detrapping-induced retention. Each of these effects can be mod?
 eled as a random event with its own statistical behavior. Due
 to the process uncertainties in the lithography, the above mech?
 anisms vary from die to die leading to variability in the raw bit
 error rate (BER) for different dies ofthe Flash memory. This has
 an immense impact on design of error correction coding (ECC)
 schemes which combat the BER to achieve a specified uncor?
 rectable bit error rate (VBER) target. If conventional ECC tech?
 niques are used, they have to be designed to handle the worst die
 BER, which is a big overkill.
 We propose a new LDPC coding scheme which exploits the
 BER diversity to its advantage and enables a system design for
 the average BER of the dies. The method is based on spreading
 the LDPC codeword over dies rather than packing a single LDPC
 codeword in one die. The system has to properly select the dies
 between which to split the LDPC codeword. The LDPC decod?
 ing has to be modified to account for the BER diversity. Simula?
 tions results show a large coding gain resulting from spreading a
 codeword, with minimal quality ofservice (QoS) impact. The im?
 provement stems from the fact that the codeword splitting reduces
 the mean and the variance ofthe BER distribution.
 We also propose an LDPC code design which is customized
 to the codeword split across multiple dies. The proposed LDPC
 code design is on similar lines to its design for quasi-staticfading
 channel. The LDPC code can be designed using density evolution
 to obtain an optimal degree distribution for a given BER distri?
 bution. Simulation results for the custom-designed LDPC codes
 validate the hypothesis by showing appreciable coding gains.
 1 Introduction
 NAND Flash memory is used for data storage applications
 for a wide variety of consumer electronic products. Solid-state-
 drives (SSD) based on Flash memories have replaced Hard-Disk?
 Drives (HDD) for some applications which are intensive on ran?
 dom access at high speeds. As Flash memory technology scales,
 the raw BER of the memory also increases. This calls for design
 of sophisticated ECC schemes to mitigate the BER and attain the
 specified UBER target. LDPC codes have been proposed to attain
 the UBER targets for NAND Flash memory based controllers.
 A typical SSD comprises of Flash memory chips from various
 dies. Due to process variations in the lithography of Flash manu?
 facturing, the BER varies substantially from die-to-die. The ECC
 has to be designed to work at the worst case BER across all dies.
 This can be a substantial overkill in terms of the amount of parity
 required to attain the required UBER.
 We propose a modification in the ECC scheme which uses the
 BER diversity to its advantage. Assuming an LDPC code is being
 used as an ECC, we propose not to store a full LDPC codeword in
 a single die but to spread it across dies. The number of dies across
 which the codeword is split depends on the QoS. A read of a sin?
 gle sector requires reads from multiple dies. For higher coding
 gains, it is desirable to split a single codeword across large num?
 ber of dies. However a codeword split over larger dies impacts
 the system QoS. The choice of the dies over which the codeword
 is spread is dynamic. Since the BER of the dies degrades over the
 life of the device, the system has to do an allocation as it evolves.
 This is not a bottleneck since SSD's have an inherent system re?
 build option as they have to handle die failures and also manage
 over-provisioning.
 During read, the reliability of the bits of the LDPC codeword
 is computed. The reliability is a function of the BER of the die.
 The reliability of the bits in the same confidence region read from
 a die which has low BER will be higher than the reliability of the
 corresponding bits read from a higher BER die. Hence, the BER
 of the die is a sufficient parameter to decide the scaling of the
 Log-Likelihood-Ratios (LLR).
 We performed extensive simulations by distributing a 2 Kilo?
 Byte (KB) LDPC codeword over 6 dies. Unlike traditional com?
 munications, where coding gains are reported in terms of signal?
 to-noise ratio (SNR) improvements, for Flash memory, the cod?
 ing gains are reported as the ratio of the BER. Coding gains of
 12 orders was realized under the assumption that the BER of the
 dies follows a log-normal distribution. 12 orders means that the
 BER ratio between the earlier scheme and the proposed scheme
 978-1-4673-5288-8/13/$31.00 2013 IEEE 978-1-4673-5288-~31.00 2013 IEEE
is 12, so the split codeword scheme can tolerate a 12 times worse
 BER compared to the unsplit codeword scheme. For some ap?
 plications, 6 dies impacts the QoS and may not be feasible. For
 these applications, even a split of an LDPC codeword between
 two dies gives a coding gain of 5 orders.
 It is also possible to customize the LDPC code design based
 on the BER diversity. The design is on similar lines of code con?
 struction for quasi-static fading channels. In [7], design of LDPC
 codes for block-fading channels and their optimization under iter?
 ative decoding was considered. In [2], it was shown that numeri?
 cal analysis techniques for calculating the threshold of the LDPC
 codes for the additive white Gaussian noise (AWGN) channel
 can be applied to the uncorrelated flat Rayleigh fading channels.
 Splitting of LDPC codeword over multiple dies is a similar prob?
 lem to transmission of an LDPC codeword over a quasi-static
 fading channeL Coding gains of 2 orders were realized for the
 LDPC code constructed for a given BER distribution compared
 to just splitting a code designed for an AWGN channeL
 In the next section, an introduction to multi -level-cell (MLC)
 NAND Flash memory is presented. Since soft information is the
 basis of LDPC decoding, we elaborate on how soft information
 is obtained from NAND. Section 3 presents two LDPC schemes,
 one for LDPC codeword splitting across dies and the second for
 customized LDPC codes. Section 4 presents the simulation re?
 sults for the two proposed schemes.
 2 NAND Flash Memory
 Multi-level-cell (MLC) Flash memory comprises of cells
 which can be programmed to more than two levels. Recent MLC
 Flash memory systems support 3 bits/cell to 4 bits/cell, which
 means that the individual cells can be programmed to 8 or 16
 distinct levels respectively. As shown in figure 1, each cell can
 be programmed to 8 distinct levels with each level corresponding
 to 3 bits of information. Programming a cell consists of adding
 a specified amount of charge to the floating gate by Fowler?
 Nordheim tunneling. To read a memory cell, a specified voltage
 is applied to the control gate and the transistor drain current is
 measured. This drain current is fed to a comparator whose other
 input is set to a threshold value. The output of the comparator
 indicates if the voltage applied to the transistor was sufficient to
 turn on the transistor. The comparator provides only one bit of in?
 formation about the charge level of the floating gate. As is shown
 in figure 1, the voltage applied during read of the cell to turn
 it on follows a probability distribution. The probability density
 function of the threshold voltage is modeled by a Gaussian dis?
 tribution. Hence, the 8-level MLC is equivalent to the 8-PAM
 communication system with AWGN.
 During the read operation, the controller requests page infor?
 mation, say, a lower page read is requested. For lower page read,
 threshold voltage level Rl is used (figure 1). By applying a single
 threshold voltage, only hard information about the bit is obtained.
 951
 Figure 1. 3 bits per cell voltage level distribution
 for the 8 levels of the MLC Flash.
 2.1 Soft Information from NAND Flash and LLR
 Computation
 In [3], a method to obtain soft information optimized from in?
 formation theory perspective was proposed. The sense amplifier
 comparator outputs one bit of information about the threshold
 voltage. Using one bit of information can only provide the hard?
 decision correction. Soft information about a bit can be obtained
 by reading from the sense amplifier but applying different voltage
 levels to the control gate of the floating gate transistor. Hence, de?
 pending on the voltage applied to the control gate, we effectively
 partition the x-axis of figure 1 into disjoint regions and depending
 on the detected region, soft information is generated. If 5 distinct
 voltages are applied to the control gate, the x-axis is partitioned
 into 6 disjoint regions.
 For infinite reads, the soft information for the cell voltage r is
 mapped to the log-likelihood-ratio (LLR). By definition, the LLR
 as a function of the read level information r is
 LLR(r) = log p(rlx = 0)
 p(rlx == 1)
 In the above equation if we assume that level-O has a mean volt?
 age level of -a and level-l has a mean voltage level of a, and (J"
 is the standard deviation of the noise, then
 _1_ exp (_ (r-a)2)
 LLR(r) == log~ 2a2
 _1_ ex ( (r+a)2)
 V21ra 2 p-~
 LLR(r) = 2m = 2m.# (J"
3.2 Splitting the LDPC Codeword across Multiple Dies
 3.1 Diversity Advantage for Access Speed Improve?
 ment
 3 LDPC Encoding Schemes which Exploit Bit Er?
 ror Rate Diversity
 In [3], it was shown that LDPC codes designed over AWGN
 channel are suboptimal for NAND Flash channel which is a
 binary-input multiple-output channel. For n-1 reads from the
 NAND Flash, the channel is a binary-input n-output channel. If a
 single LDPC codeword is split across dies, the LDPC code design
 has to be customized based on this split, the BER of the dies, and
 the binary-input n-output channel consideration. The effective
 channel with the LDPC codeword spilt across dies with varying
 BER's is similar to the block-fading channel model of wireless
 communications. The block-fading (BF) channel model was first
 introduced in [8], and further elaborated upon in [9]. This is a
 realistic and convenient model for a number of channels affected
 by slowly varying fading. The design of error-control codes for
 a random variable with a normal distribution, then Y == exp(X)
 has a log-normal distribution. With log-normally distributed BER
 across dies, majority of dies will have low BER, but there will be
 a small fraction of dies whose BER will be in the tail end of
 the log-normal distribution and these dies will impair the overall
 system performance. For the LDPC codewords stored in the die
 with high BER, the probability of decode failure is high. Hence,
 it is advisable to split the LDPC codeword and spread it across
 dies. The choice of the dies over which the LDPC codeword has
 to be split should be such that the average BER of all codewords
 is almost constant. The codeword can be split equally amongst
 the dies or unequally depending on the variance of the log-normal
 distribution. Since the total number of dies with high BER are
 few, an unequal splitting of the codeword with a smaller chunk of
 the codeword in the die with high BER's turns out to be a better
 scheme. The extensive method of selection of dies to split the
 codeword across can be found in our patent application [5].
 The decoding of a codeword read from multiple dies is
 straight-forward. During read, the portions of the codeword read
 from the dies with low BER's will be considered as high relia?
 bility information by the LDPC decoder and the portion of the
 codeword read from the die with high BER's will be considered
 as low reliability information. Since the LDPC decoder has input
 reliability scaled by the signal to noise ratio of the channel, it is
 the best way to combine the diversity and obtain diversity advan?
 tage. As can be observed in Eqn. (1), a natural scaling of the
 LLR occurs depending on the noise variance.
 The number of dies across which the LDPC codeword is split
 has impact on the system performance. The maximum number
 of dies to split the codeword is decided by the QoS. The access
 times to procure the soft data from the NAND is an important
 factor. The access time gets scaled by the number of dies over
 which the codeword split is done.
 Modest diversity gains are seen when the codeword is split
 over 2 dies and the gains increase as the number of dies over
 which the split is done increases. Splitting the codeword over 6
 dies suffices to realize substantial diversity gain and splitting over
 more than 6 dies gives marginal diversity gain increments at the
 cost of high access times.
 3.3 LDPC Code Construction Customized to the BER
 Diversity
 (1)
 r 1 ((r-a)2)J} --exp ---
 LLR(bi ) == log bi~ 2a
 2
 r _1_ ex (_ (r+a)2)J b, V21ra2 p 2a2
 We propose a method to split an LDPC codeword across dies
 to exploit BER diversity across dies. It is observed that the BER
 of the dies in an SSD follows a log-normal distribution. A log?
 normal distribution is a continuous probability distribution of a
 random variable whose logarithm is normally distributed. If X is
 The noise variance (equivalently BER) is one primary input
 in deciding the LLR value assigned to a particular region. A die
 with higher BER (higher noise variance) has a lower value of
 LLR for the same region compared to a die with lower BER.
 For finite number of reads, the LLR calculation gets modified
 depending on the region of the voltage of the cell. Let five distinct
 voltages be applied and let the six distinct regions be denoted by
 bi, i == 0 ... 5. The LLR for region b, is given by
 This scheme is for systems which cannot afford to split an
 LDPC codeword over multiple dies due to high access speed re?
 quirements. For such systems, the LDPC code is designed to
 handle the worst case BER, hence on an average, the code is
 over-designed. For such cases, the BER diversity across dies can
 be exploited by having variable read times depending on the die
 BER. In [4], a method to do early reads was proposed. During a
 read operation from the Flash memory, the read time depends on
 the worst latency cells. A premature read in order to lower the
 read time to increase access speeds leads to an increased BER.
 We propose that for dies with BER lower than the code designed
 value, a smaller read time can be used and for dies with higher
 than specified BER, full read time can be allotted. Hence BER
 diversity results in variable read time which gives performance
 advantage in terms of decreasing the average read latency.
 We propose various schemes which can exploit the BER di?
 versity across dies in an SSD. If no LDPC codeword splitting
 is permissible due to QoS restrictions, the BER diversity can be
 used to reduce latency. This method is proposed in Section 3.1.
 Section 3.2 details the scheme of splitting an LDPC codeword
 designed for an AWGN channel over dies. Section 3.3 proposes
 a BER diversity customized LDPC code design.
 952
BF channels is a challenging problem, and differs greatly from
 the AWGN or independent-fading channels. In [7], a method for
 LDPC code construction for BF channels was proposed. This
 method was based on modifying the weight distribution of the
 four sub-matrices of the parity-check matrix. The channel was
 assumed to be a Rayleigh block fading channel. One of the dif?
 ferences between the BF channel and the NAND channel is that
 the BER's follow a log-normal distribution. This change can be
 easily incorporated in the LDPC code design by modifying the
 distribution of the fading channel parameters appropriately
 When we simulated the LDPC codes constructed using this
 method, considerable performance improvement was observed.
 3.4 Outage
 The outage concept in wireless communications is equivalent
 to the case where we randomly choose dies with high BER and
 the code rate is higher than the capacity of the effective chan?
 nel (channel comprising of the combination of the dies with high
 BER's). This equivalent outage concept in NAND Flash occurs
 with a probability depending on the mean and variance of the log?
 normal distribution. The code rate of the LDPC code has to be
 chosen in order to keep this probability below a system specified
 limit.
 4 Simulation Results
 In this section, we present the simulation results with the
 LDPC encoding schemes proposed in the last section. For our
 FPGA based simulations, we use a rate 0.9 LDPC code with
 blocklength n == 16384 (2 Kilo-Bytes), and dimension k ==
 14746. We first designed the LDPC code with optimal degree
 distribution for the AWGN channel [6]. For all the simulations,
 since the UBER targets were Ie-I5, we had to perform FPGA
 based simulations. For the Flash memory level distributions, we
 used histograms obtained using actual reads from the Flash for
 5 reads. In figure 2, we show plots for three schemes, one with
 no diversity combining, the second with diversity combining and
 the third with the customized LDPC code design. In the plot, the
 x-axis is the median BER (also called raw bit error rate (rber)) of
 the log-normal distribution whose variance is 6. For each point
 on the x-axis, we average the codeword failure rate over the log?
 normal probability distribution with the specified median BER
 value. The uncorrectable bit error rate plotted on the y-axis is
 then obtained from this averaged codeword failure rate.
 In traditional communications, it is common to report the cod?
 ing gains in terms of the signal-to-noise-ratio (SNR) improve?
 ment. For NAND Flash memory, since the BER is the conven?
 tional metric, the ratio of the BER between the two schemes
 is reported as the gain. When we split the codeword across 6
 dies, coding gains (in terms of BER) of 12 orders can be realized
 on the median log-normal BER scale. This means that the split
 codeword scheme gives the same UBER as the unsplit codeword
 scheme at a 12 times worse BER. For some applications, 6 dies
 may not be able to meet the system latency requirements. For
 953
 these applications, even a split of an LDPC codeword across two
 dies gives a coding gain of 5 orders.
 Also shown in the plot are the results when the 2 Kilo-Byte
 LDPC code construction is customized based on the BER diver?
 sity. The LDPC code was designed based on split across 6 dies.
 Gains of two orders were observed for this code compared to the
 code designed for the AWGN channel.
 5 Conclusions
 In this paper, we exploited the BER diversity across dies in a
 NAND Flash SSD to design high coding gains achieving LDPC
 schemes.
 As a first method for BER diversity exploitation, we consid?
 ered variable read timings to obtain constant BER's from differ?
 ent dies. The advantage of this scheme is that the overall latency
 of the reads decreases and the ECC capability is used to its full
 potential for all dies.
 The second method consists of splitting a single LDPC code?
 word across multiple dies. Since a full LDPC codeword is not
 stored on a single die, the problem of performance bottlenecks
 from dies with higher BER is circumvented. Substantial gains
 were realized even when a single codeword is split across two
 dies. There is some performance disadvantage in terms of ran?
 dom access speeds as the split is done over larger number of dies.
 In the third method, the LDPC code design was customized
 under the BER diversity consideration. The design is similar to
 the design of LDPC codes for BF channels, the only difference
 being that the density evolution has to consider the log-normal
 distribution of the BER. The interpretation of outage for tradi?
 tional wireless channels translates to the choice of high BER's
 dies for LDPC codeword splitting. Simulations were done with
 the customized LDPC code and improvements of two orders were
 realized compared to the same configuration with AWGN LDPC
 codes.
 6 References
 [1] "Bit Error Rate in NAND Flash Memories", Mielke N.,
 Marquart T., Ning Wu, Kessenich J., Belgal H., Schares E.,
 Trivedi F., Goodness E., Nevill L.R., IEEE International Relia?
 bility Physics Symposium, 2008. IRPS 2008, pp. 9-19.
 [2] "Design of low-density parity-check codes for bandwidth
 efficient modulation," Hou J., Siegel P.H., Milstein L.B., Pfister
 H.D., Proc. 2001 IEEE Information Theory Workshop, pp. 24?
 26.
 [3] "Soft Information for LDPC Decoding in Flash: Mutual?
 Information Optimized Quantization," Wang J., Courtade T.,
 Shankar H., Wesel R., IEEE Globecom, Dec. 2011.
 [4] "Accelerating Flash Memory Access by Speculative Early
 Sensing Decision," Berman A., Birk Y., Non-Volatile Memory
 Workshop, UCSD, 2012.
 [5] "Diversity of the bit error rate Exploitation to realize
 LDPC Decoding Gains," Motwani R., Intel IDF #89309, U.S.
 patent application filed titled 'Distributed Codeword Portions'.
Figure 2. Simulation results comparing the performance of the proposed schemes.
 [6] "Error Control Coding for Multilevel Cell Flash Memories
 Using Nonbinary Low-Density Parity-Check Codes," Y. Maeda
 and K. Haruhiko, 24th IEEE Int. Symp. on Defect and Fault
 Tolerance in VLSI Systems, Chicago, IL, Oct. 2009.
 [7] "Low-Density Parity-Check Codes for Non-ergodic
 Block-Fading Channels," Boutros J., Fbregas A., Biglieri E.,
 Zmor G., IEEE Tran. Information Theory, vol. 56, no. 9, Sept
 2010, pp. 4286-4300.
 [8] "Information theoretic considerations for cellular mobile
 radio," L. H. Ozarow, S. Shamai (Shitz), and A. D. Wyner, IEEE
 Trans. Vehicular Tech., vol. 43, no. 2, pp. 359-378, May 1994.
 [9] "Fading channels: Information-theoretical and communi?
 cations aspects," E. Biglieri, J. Proakis, and S. Shamai (Shitz),
 IEEE Trans. Inf. Theory, vol. 44, no. 6, pp. 2619-2692, Oct.
 1998.
 954
