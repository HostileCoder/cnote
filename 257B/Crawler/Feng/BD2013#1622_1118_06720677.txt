Secured e-health data retrieval in DaaS and Big Data 
 
David Shin, Tony Sahama, Randike Gajanayake 
Science and Engineering Faculty 
Queensland University of Technology 
Brisbane, Australia 
dong.shin@student.qut.edu.au, t.sahama@qut.edu.au, g.gajanayake@qut.edu.au 
 
Abstract— Big Data is one of rising IT trends such as cloud 
computing, social networking or ubiquitous computing. Big 
Data can offer beneficial scenarios in the e-health arena. 
However, one of the scenarios can be that Big Data needs to be 
kept secured for a long time in order to gain its benefits such as 
finding cures for infectious diseases and keeping patients’ 
privacy. From this connection, it is beneficial to analyze Big 
Data to make meaningful information while the data are stored 
in a secure manner. Thus, the analysis of various database 
encryption techniques is essential. In this study, we simulated 3 
types of technical environments such as Plain-text, Microsoft 
Built-in Encryption, and custom Advanced Encryption 
Standard using Bucket Index in Data-as-a-Service. The results 
showed that custom AES-DaaS has faster range query 
response time than MS built-in encryption. In addition, while 
carrying out the scalability test, we acknowledged there are 
performance thresholds according to physical IT resources. 
Therefore, for the purpose of efficient Big Data management in 
e-health, it is noteworthy to examine its scalability limits as 
well even if it is under cloud computing environment. 
Furthermore, when designing an e-health database, both 
patients’ privacy and system performance needs to be dealt as 
top priorities.   
Keywords-component; formatting; e-health, security, DaaS,  
Big Data, cloud, Bucket Index, Bloom filter, AES 
 
I.  INTRODUCTION/ ASSUMPTION 
Big Data is one of rising IT trends such as cloud 
computing, social networking and ubiquitous computing. 
Even though Big Data means ‘Big Data’ literally, its concept 
is still not clear in business fields such as e-health. It is worth 
exploring what features Big Data has, where it can be 
utilized or why it is an important concern. This research 
assume some utilization scenarios as following. In terms of 
eHealth, Big Data has several benefits. For example, Big 
Data can advise patients to choose appropriate medical 
practitioners to cure patients with more success ratio, it can 
match patients alike such so that they can connect with each 
other so that they can communicate and share information 
with respect to their treatments. Healthcare professionals can 
also benefit from Big Data. For instance it can enable drug 
procurement officers to estimate purchasing medicine times 
and costs, it can enable pharmacies manage customers’ 
buying experiences, accumulate their points and make more 
discounts for when it is available. Big Data can also explore 
how efficiently medical emergency systems operate and are 
controlled such as an ambulance’s arrival time at a patient’s 
house and bring them to appropriate medical practitioners 
within a given time and collect all the patients’ sensor data 
seamlessly through mobile device to machine 
communication. Big Data can also be securely kept and 
stored for decades to find cures for infectious diseases such 
as Human immunodeficiency virus infection/ acquired 
immunodeficiency syndrome (HIV/AIDS). 
From the above examples, it is clearly beneficial to 
analyze Big Data to make meaningful information while the 
data are stored in a secured manner. Therefore, it is 
appealing to retrieve valuable information more effectively 
while the raw data are encrypted for patients’ privacy. Thus, 
one of absolute methods to keep the raw data safe is to use 
database encryption. In the Data-as-a-Service (DaaS) 
environment [1], the ownership of data security belongs to 
the data owner. Nowadays, it is a time of cloud computing 
that provides Software-as-a-Service (SaaS) [2], Platform-as-
 a-Service (PaaS) [3] and Infrastructure-as- a-Service (IaaS) 
[4]. Even though cloud computing providers such as 
Microsoft, Amazon and Google state reliability for 
customers’ data, data owners are still responsible for keeping 
their data proactive. Therefore, it is vital to handle Big Data 
as formatted or unformatted such as NoSQL [5]. However, 
this research focus on the use of traditional Relational 
Database Management System (RDBMS) rather than 
NoSQL in the condition that some sensitive data are 
encrypted. 
In this paper, we simulate a scalability test for DaaS. We 
propose that it will be suitable for scalability testing of Big 
Data. 
II. LITERATURE REVIEW 
In this section, the concepts of Big Data, e-health, cloud, 
DaaS, and encryption techniques are introduced. 
A. Features of Big Data 
Gartner states that “Big Data is high-volume, high-velocity 
and high-variety information assets that demand cost-
 effective, innovative forms of information processing for 
enhanced insight and decision making” [6]. Therefore, 
volume, velocity and variety (3V) are significant features of 
Big Data. At present, even personal computers are using a 
number of terabytes of hard disks. Smart phones are 
collecting vast amount of personal behaviours and attributes 
2013 IEEE 15th International Conference on e-Health Networking, Applications and Services (Healthcom 2013)
 978-1-4673-5801-9/13/$26.00 ©2013 IEEE 255
such as geo-location data and movement tricking. New 
Twitter mentions were created by 33,388 tweets per second 
on January 1 2013, when the new year began [7]. 
B. E-Health in the cloud 
E-health clouds can stimulate new potentials, such as 
super-massive workloads and machine to machine (M2M) 
access of medical information and business logic for 
stakeholders [8]. Cloud computing can provide cost-
 effective, scale-up, scale-out, less downtime, and disaster 
recovery. In the case of the Australian healthcare sector, 
cloud computing is one of rising technologies that creates 
values from health information exchange [9]. Cloud 
computing enables the e-health database owners store data 
for decades. The information extracted and reprocessed from 
the data will be extremely valuable for curing diseases and 
encouraging patients. On the other hand, the database 
encryption techniques are still useful in e-health cloud 
scenarios because the database owners are responsible for 
their data even if cloud vendors promise database security as 
a top priority task. 
C. Logical Data Model in Cloud SQL Server 
In this study, we focus on Microsoft SQL Server as a 
DaaS model dataset. Its characteristics can be similar to on-
 premise SQL server and SQL Azure, which is a cloud 
database. In Cloud SQL Server, a logical database is called 
as a table group. A table group can be keyless or keyed. A 
keyless table group is a normal SQL Server database. There 
are no limitations on choosing keys for its tables. However, 
if a table group is keyed, all of its tables should include a 
common column called the partitioning key [10]. 
D.  DaaS and database security 
Data as a Service (DaaS) was a transitional concept for 
database management before the concept of cloud 
computing was popular. It permits data owners to outsource 
their data to Database Service Providers (DSP) to reduce the 
maintenance cost. However, if the data is encrypted, faster 
query response times for the data become a serious issue 
[11]. The database encryption techniques can be varied to 
database owners’ planning. 
E. Advanced Encryption Standard (AES) 
AES is a symmetric encryption which can be called as 
Rijndael algorithm. It was suggested to replace Data 
Encryption Standard (DES) which was also a block cipher. 
“Rijndael is a parameterized algorithm in that it can operate 
on block size of 128, 192, or 256 bits” [12]. 
F. Bloom filter and collections 
A Bloom filter only responds “yes” or “no” even if it 
stores the actual data. A Bloom filter can be utilized to 
facilitate quick answers in a key-value storage system[13]. 
The algorithm is applied in Database Management System 
(DBMS) such as Oracle 10g R2 and its implementation is 
introduced as an open source using C# and other 
programming languages. The following Bucket Index can 
utilize a Bloom filter as an element in querying translator. 
There is performance comparison between collection 
objects such as Bloom filter, HashSet and HashTable as 
follows. 
 
Figure 1.performance ratio among collection objects [14] 
This figure depicts Bloom filter memory loading time 
takes slightly longer than HashSet or HashTable under 
Singleton design patterned Bucket Index. HashSet stores 
only distinctive data whereas HashTable store ‘key=value’. 
Overall, HashTable shows fastest response time than the 
others. 
G. Database security technique – Bucket Index 
Bucket index application use a bloom filter as a 
collection of key information that indicates ‘true’ if the data  
exist in the database. The bucket index engine can have a 
singleton-patterned architecture for storing key information. 
Among CRUD (Create, Read, Update and Delete) operations, 
read operation performances are a main concern because it is 
most heavily used. 
 
 
 
Figure 2.Bucket Index Architecture [15] 
0
 0.2
 0.4
 0.6
 0.8
 1
 1.2
 Memory Loading 
 Time
 Search Time
 Bloom Filter
 HashSet
 HashTable
 2013 IEEE 15th International Conference on e-Health Networking, Applications and Services (Healthcom 2013)
 256
 
Figure 3.classification of MS built-in encryption [16] 
The Bucket Index system can be described as a 
partitioning data model. At first it collects a coarse 
partitioning data and after refining the data, decrypt the 
selected narrower range of data which is partitioned. It will 
reduce the query response time which is typically a read 
operation significantly. However, its implementation can be 
varied with respect to the Bloom filter as a querying 
translator. 
H. Database security technique – MS built-in encryption 
Microsoft provides a combination of the encryption/ 
decryption programming approach from a database 
administrator’s (DBA) point of view. Firstly, the DBA can 
choose a master key of the database. Secondly, s/he can 
choose a certificate or asymmetric key for managing 
symmetric key to encrypt the database. The master key is 
also used in managing a certificate or asymmetric key as a 
hierarchical structure [14]. 
 
I. Measurement Technology (performance) 
? Client_response_time: is the total network included 
round-trip time as requested by the client, starting 
from sending the request to receiving the 
corresponding response. 
? Processing_time: the amount of time for processing 
the request on the server side. 
? DB_processing_time: ideally the amount of time a 
database takes to process Structured Query 
Language (SQL) [17]. 
Therefore, the generalized performance measurement 
principle can be as follows. 
Client_response_time  >  Processing_time  
>  DB_processing_time 
 
III. METHOD 
Simulation results confirm various database encryption 
techniques are significant to review secured data retrieval. 
The results provide scalability and performance review based 
on query response times. The data were generated randomly 
as patients’ biological and social identities. 
Table 1: Database Encryption approach using DaaS models [14] 
Data Types (DB) Encryption 
(types) 
DaaS model used 
Plain-Text [PT] No encryption No DaaS roles 
MS built-in 
Encryption 
[MSE] 
Combination of 
Master database key, 
Triple DES, 
Asymmetric key  
Role based DaaS 
AES-DaaS 
[DAS] 
Advance Encryption 
Standard 
Recommended to DaaS, all 
encryption / decryption logic 
is on the application side, not 
on the database side 
 
Table 2.query conditions for performance test 
String Numeric Aggregate Range Range-
 Bucket 
Index 
Range-
 Count 
Address Medicare 
number 
Blood type Birth date Birth date Birth date 
The basic design is to measure typically select query 
response times among plain-text, MS built-in encryption and 
AES-DaaS models. The custom AES-DaaS using Bucket 
Index is to create additional field for key query conditions in 
encrypted state.  
The software packages used in the simulation are MS 
Visual Studio 2010 using C# and MS SQL Server 2008. The 
processor is Intel Core 2 duo with Windows XP. 
The query conditions are in the following table. 
IV. SIMULATION RESULTS 
Table 3 depicts the times consumed to build up the three 
environments (Plain-text, MS built-in Encryption, AES-
 DaaS) when the data is increased from 5K records to 2560K 
records. The data was dummy and randomly generated by a 
console C# application.  
The results showed that the MS built-in encryption 
model took the longest build-up time compared to custom 
AES-DaaS model or Plain-Text (PT) model.  
On the other hand, AES-DaaS model consumes 
physically additional field in tables. Here, we used extra 
Bucket Index fields for birth dates. To avoid unnecessary 
database connection trials, we used a Bloom filter in 
Singleton Design Patterned. It answers ‘yes’ or ‘no’ for the 
existence of the data before making a connection to the 
database.  
Table 4 shows the categorized scalability result in the 
three environments (Plain-text, MS built-in encryption, AES-
 DaaS). “Aggr” means Aggregate query for blood type. RQ 
means normal range query for birth dates. RC means just to 
get a counted number of the range query for birth dates.  
2013 IEEE 15th International Conference on e-Health Networking, Applications and Services (Healthcom 2013)
 257
Table 3.List of the simulated databases for scalability factors  - insertion 
[14] 
Record size (K) Data types (DB) Scalability Factor Total (Hrs) 
5 – 10  
(1) PT 
(2) MSE 
(3) DAS 
0.01 –  0.01 
0.09 –  0.18 
0.01 –  0.01 
20 – 40 
(1) PT 
(2) MSE 
(3) DAS 
0.02 –  0.08 
0.34 –  0.72 
0.04 –  0.08 
80 – 160 
(1) PT 
(2) MSE 
(3) DAS 
0.23 –  0.44 
1.44 –  2.83 
0.20 –  0.48 
320 – 640 
(1) PT 
(2) MSE 
(3) DAS 
1.03 – 1.87 
  6.03 – 11.35 
1.07 – 2.10 
1280 – 2560 
(1) PT 
(2) MSE 
(3) DAS 
 4.13 – 10.53 
24.85 – 49.18 
 4.95 – 14.28 
 
Table 4.Categorized Scalability Test (milliseconds) [14] 
DB 
Record 
Size String Numeric Aggr. RQ 
 
RC RBI 
PT 5K 73 0 3 186 0 N/A 
PT 10K 100 0 6 233 0 N/A 
PT 20K 160 0 10 263 0 N/A 
PT 40K 283 20 36 246 33 N/A 
PT 80K 293 13 123 313 30 N/A 
PT 160K 493 30 153 453 30 N/A 
PT 320K 1030 16 276 793 53 N/A 
PT 640K 1753 36 476 1633 53 N/A 
PT 1280K 4236 100 820 3040 416 N/A 
PT 2560K 7426 50 1983 5060 156 N/A 
MSE 5K 106 16 70 200 23 N/A 
MSE 10K 183 23 56 240 63 N/A 
MSE 20K 316 46 60 210 76 N/A 
MSE 40K 570 100 116 350 160 N/A 
MSE 80K 2543 200 333 830 313 N/A 
MSE 160K 13453 410 576 1306 636 N/A 
MSE 320K 40806 796 1220 2970 1280 N/A 
MSE 640K 136600 1656 2423 4830 2513 N/A 
MSE 1280K 330713 3193 4686 14656 5046 N/A 
MSE 2560K 718150 26580 8906 27936 10080 N/A 
DAS 5K 47 16 31 63 63 16 
DAS 10K 266 94 63 156 156 16 
DAS 20K 344 188 250 422 422 109 
DAS 40K 1109 234 438 641 641 203 
DAS 80K 3813 344 968 1313 1313 297 
DAS 160K 12110 453 1328 2610 2610 453 
DAS 320K 40690 656 2235 5172 5172 828 
DAS 640K 111585 938 2672 9266 9266 1531 
DAS 1280K 289345 1203 5344 19595 19595 2781 
DAS 2560K 660851 1875 8704 36987 36987 5226 
 
RBI means range query using Bucket Index for birth 
dates. The RBI feature is only available to custom AES-
 DaaS model. In the simulation, we used 70 partitioning for 
Bucket Index. The Bucket Index in the AES-DaaS showed 
approximately 7 times faster response time than the normal 
Range query when the record size was 2560K. Thus, Bucket 
Index is quite useful in custom AES-DaaS model when 
databases are bigger. 
In figure 4, numeric type scalability trend is drawn for 
medicare card number. From 5K to 1280K record-sized, the 
line graph increases gradually, however, in 2560K, the MS 
built-in encryption technique show abrupt increased query 
response time. This means there are certain performance 
threshold points in any hardware / software.   
 
V. CONCLUSION 
If the AES-DaaS model can be adopted, the Bucket 
Index, in other word, partitioning and singleton design 
patterned architecture is a useful framework when range 
queries are heavily used.  
 
 
Figure 4.numeric type scalability trend(milliseconds) [14] 
 
In addition, if the data characteristic is numeric, the 
study shows number type is more acceptable to character 
type when designing the database. 
Finally, the custom AES with Bucket Index shows faster 
response time than MS built-in encryption. Therefore, when 
we deal with Big Data encryption techniques, custom 
encryption techniques are recommended. Besides, cloud 
DBMS does not support the full feature of on-premise 
DBMS such as MS SQL Server. 
 In conclusion, we covered secured e-health data 
retrieval in the environments of PT, MSE, and DaaS. 
Custom encryption techniques can increase the efficiency of 
DBMSs while data needs to be encrypted in a DaaS or Big 
Data environment. However, Big Data stores enormous data 
0
 5000
 10000
 15000
 20000
 25000
 30000
 5K 10K 20K 40K 80K 160K 320K 640K 1280K2560K
 PT
 MSE
 DAS
 2013 IEEE 15th International Conference on e-Health Networking, Applications and Services (Healthcom 2013)
 258
continuously. Thus, when we design e-health database in 
Big Data system, we need to define which fields of data to 
be encrypted and cost-effective on limited physical IT 
resources. For this reason, it will be advantageous to 
investigate the scalability limits to support seamless and 
consistent Big Data management. 
 
VI.  FUTURE WORK 
Transaction Processing Performance Council Benchmark 
E (TPC-E) represents the operations of an On-line 
Transaction Processing (OLTP) system or custom 
performance checker [18]. This can be used as performance 
test index for further Big Data simulation. The additional Big 
Data simulation requires extremely large-scaled records over 
1 billion with the same query plan. Besides, the cloud 
computing environment will support the simulation. 
 
VII. ACKNOWLEDGMENT  
This research was supported by QPA (Queensland 
Postgraduate Award) scholarship in QUT. 
 
REFERENCES 
[1] Quang Hieu, V., et al. DEMODS: A Description Model for 
Data-as-a-Service. in Advanced Information Networking and 
Applications (AINA), 2012 IEEE 26th International 
Conference on. 2012. 
[2] Wikipedia. Software as a service. 2013  [cited 2013 
23/05/2013]; Available from: 
http://en.wikipedia.org/wiki/Software_as_a_service. 
[3] Wikipedia. Platform as a service. 2013  [cited 2013 
23/05/2013]; Available from: 
http://en.wikipedia.org/wiki/Platform_as_a_service. 
[4] Wikipedia. Infrastructure as a service (IaaS). 2013  [cited 
2013 23/05/2013]; Available from: 
http://en.wikipedia.org/wiki/Infrastructure_as_a_service#Infr
 astructure_as_a_service_.28IaaS.29. 
[5] Wikipedia. NoSQL. 2013  [cited 2013 23/05/2013]; 
Available from: https://en.wikipedia.org/wiki/NoSQL. 
[6] Gartner. Big Data Definition. 2013  [cited 2013 10/04/2013]; 
Available from: http://www.gartner.com/it-glossary/big-
 data/. 
[7] Wikipedia. Twitter. 2013  [cited 2013 10/04/2013]; 
Available from: http://en.wikipedia.org/wiki/Twitter. 
[8] L, H., et al., Securing the e-health cloud, in Proceedings of 
the 1st ACM International Health Informatics 
Symposium2010, ACM: Arlington, Virginia, USA. p. 220-
 229. 
[9] Sullivan, T. HIE 2.0 closer than it might appear. 2013  [cited 
2013 15/03/2013]; Available from: 
http://aushealthit.blogspot.com.au/. 
[10] Bernstein, P.A., et al. Adapting microsoft SQL server for 
cloud computing. in Data Engineering (ICDE), 2011 IEEE 
27th International Conference on. 2011. 
[11] Wei, Z., et al. A tuple-oriented bucket partition index with 
minimum weighted mean of interferential numbers for DAS 
models. in Computer and Automation Engineering (ICCAE), 
2010 The 2nd International Conference on. 2010. 
[12] Smart, N., Cryptography: an introduction2003, Maidenhead: 
McGraw-Hill Education. 433. 
[13] David Shin, T.S., Steve Kim, Ji-Hong Kim, Data 
Encryptions Techniques for Electronic Health Record 
Exchange. ITCH 2011, 2011. Stud Health Technol Inform. 
2011;164:392-6. 
[14] Shin, D., Improving trust and securing data accessibility for 
e-health decision making by using data encryption 
techniques, 2012, Queensland University of Technology: 
Brisbane. 
[15] Lianzhong Liu, J.G., A method of query over encrypted data 
in database. 2009 International Conference on Computer 
Engineering and Technology, 2009. 
[16] Masood-al-farooq, B.A. SQL Server Encryption. 2013  [cited 
2013 25/02/2013]; Available from: 
http://www.sqlmag.com/article/sql-server/sql-server-
 encryption-144904. 
[17] Liang, Z., A. Liu, and J. Keung. Evaluating Cloud Platform 
Architecture with the CARE Framework. in Software 
Engineering Conference (APSEC), 2010 17th Asia Pacific. 
2010. 
[18] Hill, Z., et al., Early observations on the performance of 
Windows Azure, in Proceedings of the 19th ACM 
International Symposium on High Performance Distributed 
Computing2010, ACM: Chicago, Illinois. p. 367-376. 
 
 
2013 IEEE 15th International Conference on e-Health Networking, Applications and Services (Healthcom 2013)
 259
