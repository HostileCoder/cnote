Virtual Machine Portability - A Novel Approach
 Parshant Tyagi, Divya Kapil, R. C. Joshi
 Department of Computer and Science and Engineering
 Graphic Era University
 Dehradun, India
 (monutg89, divya.k.rksh, chancellor.geu)@gmail.com
 Emmanuel S. Pilli
 Department of Computer Engineering
 Malaviya National Institute of Technology Jaipur
 Jaipur, India
 espilli.cse@mnit.ac.in
 Abstract—The rise of cloud computing has been driven by the
 benefits, the cheapest purveyor of application hosting, storage,
 infrastructure, huge cost savings with low initial investment,
 elasticity and scalability, ease of adoption, operational efficiency,
 on-demand resources, and the use of equipment that is largely
 abstracted from the user and enterprise and how the virtualiza-
 tion has changed the foundation of computing. In other terms
 the virtualization is the process that turns the hardware bound
 entity in to software based component and the end result comes
 in to the form of VM. Current virtualization software supports
 transparent VM migration between physical servers on the same
 LAN but WAN migration remains a challenge due to the need for
 network reconfiguration and storage migration. With this paper
 our main concern is to present the virtual machine portability
 (VMP) is one of the most important futuristic aspects of Virtual
 machine migration, the term VMP requires that cloud customers
 can keep their VM including the prefix-when migrate from one
 cloud services provider to another avoiding the costs of switching
 to new VM configuration.
 Keywords-Cloud Computing, Virtualization, Live Virtual Ma-
 chine Migration;
 I. INTRODUCTION
 With the rapid growth of cloud computing, it is very
 easy to access computing resources without the burden of
 purchasing, updating, managing and maintaining the resources.
 Cloud computing provides the illusion of infinite computing
 resources which are available from anywhere, anytime, on
 demand. Cloud service provider manage computing resources
 at data center and provide these resources to the consumer.
 Infrastructure, software, platform are offered as service in a
 pay-as-you-go manner to users. Cloud computing makes better
 use of distributed resources and put them together to solve
 the complex computational problems. Most cloud platforms
 use virtualized data centers which maximize the computing
 resources utilization. Cloud computing is based on utility
 computing in which resources are provisioned on-demand and
 adopts its pricing scheme fully due to economical reasons.
 Resources utilization can be maximized and operating costs
 can be minimized by service providers. Users do not need to
 worry about their data, backups because if something happen
 wrong, components fail, it is service provider’s responsibility
 to make data available.Virtualization is gaining momentum
 in the information technology world and emerge as a key
 technology of cloud computing. Virtualization is not a new
 concept, cost savings, and manageability are the reasons for
 the recent rising. It also supports service-oriented architectures,
 isolated secure systems, and flexible deployment. Virtualiza-
 tion allows to run multiple virtual machines on a single
 host. A virtual machine (VM) is an abstraction layer between
 hardware and the user. Virtual machines run operating systems
 and its applications. A host operating system can run many
 virtual machines and shares system hardware components such
 as CPUs, disk, memory, and I/O among virtual servers[1].
 Virtualization facilitates server consolidation, live migration,
 and resource isolation. Live virtual machine migration is the
 process in which one VM or many VMs are migrated from
 one physical host to another and they appear to be responsive
 all the time from user’s perspective. The service availability
 can be improved by moving less loaded VMs to another host
 so that resources could be assigned to more loaded VMs. It
 has many benefits such as energy saving, load balancing, and
 online maintenance.
 There are large variety of Cloud services and the great number
 of service providers. The service providers use Service Level
 Agreements (SLAs) to express and negotiate user requirements
 and offer their services. Many live migration technologies
 are proposed to improve migration efficiency within cluster
 environment or data centers of same cloud service providers.
 In existing technologies, there is no such a mechanism in
 which a user can continue with same service (VM) but with
 different service provider due to some difficulties with previous
 provider.
 In this paper we are proposing a new idea in which a user can
 always keep his virtual machine with same configuration also
 with different service provider. We call this mechanism VMP
 (Virtual Machine Portability). This is the first idea in which a
 user can change his service provider but he can continue with
 his previous virtual machine.
 The remainder of the paper is organized as follows: Section
 II describes the live virtual machine migration in which we
 describe virtualization and its type and live migration reasons.
 In section III we discuss related work which are categorized
 into virtual machine migration in cluster, modern data centers
 and cloud data centers. We propose our idea in section IV with
 architecture description and advantages of this mechanism. In
 Section V we show implementation work with eucalyptus tool.
 Section VI concludes the paper.
 II. LIVE VIRTUAL MACHINE MIGRATION
 A. Virtualization
 Virtualization technology is used to maximize the uti-
 lization of hardware resources. It allows multiple operating
 systems run concurrently on the same physical machine. It
 splits up a physical machine into several virtual machines. A
 virtual machine can be defined as, ”It is a software imple-
 mentation of a computing environment in which an operating
 2013 International Conference on Cloud Computing and Big Data
 978-1-4799-2829-3/13 $26.00 © 2013 IEEE
 DOI 10.1109/CLOUDCOM-ASIA.2013.108
 240978-1-4799-2830-9/14 $31.00 © 2014 IEE
system or program can be installed and run” [2]. Virtualization
 is the key technology in cloud computing. It is the most
 efficient solution resource management in cloud computing.
 Virtualization technology organizes the computing resources
 flexibly and it unscrambles the hardware and software archi-
 tecture dependency. Virtualization technology also facilitates
 resource sharing, cost efficiency, fault tolerance, application
 isolation, portability. A layer, called hypervisor, separates the
 hardware resources and provide the virtual machines (VM).
 VMs act like real physical machines; they use their virtual
 hardware resources. Live migration is one of the key features
 of virtualization technology which makes it attractive. Live
 migration allows to administrator to move running virtual
 machine or VMs from one physical server to another. It results
 high availability of services which is very beneficial for service
 providers. There are two main types of virtualization:
 Type I (Bare Metal): In this type VMM (Virtual Machine
 Monitor) is installed as a primary boot system on the hardware.
 Bare metal hypervisors run directly on the hardware and
 control the hardware and manage the guest operating system
 i.e. VMM has full control over all virtual machines.Examples
 are: Citrix XenServer[3], VMware ESX/ESXi[4], KVM[5],
 and Microsoft Hyper-V[6] hypervisors.
 Fig. 1. Type I
 Type II (Hosted): In this type hypervisors run within
 conventional operating system environment. Hypervisor is
 installed on the host operating system. Above hypervisor layer
 guest operating systems or virtual machines are installed.
 Examples are: VMware Workstation[7] and VirtualBox[8].
 Fig. 2. Type II
 B. Live Virtual Machine Migration
 Virtual machine migration is the process that a running
 virtual machine moves from a physical computer to another
 computer. Many virtualization software such as VMware[9],
 Xen[10], KVM[5], and Open VZ[11] are used to implement
 it. There are two types of migration: 1) non-live 2) live. In
 non live migration a virtual machine stops, and the virtual
 machine’s state is transferred from the source to the destina-
 tion computer. Then restart on the destination computer. In
 live migration virtual machine’s state is transferred without
 stopping it. Virtual machine’s state has changed so addition-
 ally this difference is also transferred. Live virtual machines
 migration is an extremely powerful tool for cluster or data
 center administrators for many reasons such as: load balanc-
 ing, online maintenance and proactive fault tolerance, energy
 saving. The manageability of data centers and clusters has been
 significantly improved using virtualization and migration.
 • Load balancing: Due to heavy workload on a physical
 host, there is need to rearrange the VMs, so to relieve
 the load VMs are migrated.
 • Online maintenance: A physical machine may need
 upgrade and maintenance, so physical server must be
 free, all its VMs migrated to alternative server to free
 the physical machine for maintenance. So, it improves
 the service availability.
 • Proactive fault tolerance: Proactive fault tolerance
 prevents physical host failures that is about to fail.
 It keeps services alive by avoiding failures through
 preventative measures. All VMs over hosts could be
 migrated so that services which are running on virtual
 machines remain available all the time.
 • Energy saving: Idle servers are frequently left power.
 The idle servers are powered off and power consump-
 tion can be reduced by consolidating VMs of idle
 servers. So live virtual machine migration can also
 be used to save the energy.
 Mostly hypervisors, such as Xen[10] OpenVZ[11], KVM[5],
 and VMWare[9] has feature of live migration which has very
 short downtime. Live virtual machines migration mainly use
 pre-copy approach which first transfers all memory pages
 and then copies pages just modified during the last round
 iteratively. When threshold comes or the maximum number
 of iterations is reached, the virtual machine is paused and
 then only CPU state and dirty pages in the last round are sent
 out to the destination host and finally resume on it. Due to
 iteration, memory pages have been modified, called dirty pages
 must be sent to destination also, hence memory pages are sent
 multiple times. Current migration requires network attached
 storage(NAS) which is accessed by all hosts uniformly. Live
 virtual machine migration allows seamless migration of online
 services without requiring users to reconnect.
 III. RELATED WORK
 A. Virtual Machine Migration
 Sapuntzakis et al.[12] focused on user mobility and system
 management by moving hardware state, called capsule. To
 reduce amount of data of capsule, they developed copy-on-
 write disks (updates to capsule disks), ”ballooning” (zeros
 unused memory), demand Paging (fetches only needed blocks),
 and hashing (avoids sending blocks that already exist at the
 remote end) techniques. They have shown that by capsule
 241
migration, running application can be started within 20 minutes
 on a 384 kbps link instead of installing the application.
 To overcome the process level problems such as residual
 dependencies, Clark et al.[13] proposed the basic idea of live
 migration algorithm and also described writable working set
 concept. Live migration has the ability to move the entire
 operating system. They have implemented migration on Xen
 which is a freely available open source VMM in data center
 and cluster environments.
 Current technologies of live migration focused on improve-
 ment of migration efficiency within cluster environment or data
 centers of same cloud service providers. We are categorizing
 virtual machine migration related work into cluster, data center
 and cloud data center environment.
 1) Cluster Environment: Hines et al.[14] proposed post-
 copy technique to optimizing live migration of virtual ma-
 chines. Post-copy contains four key components: demand pag-
 ing, active pushing, prepaging, and dynamic self-ballooning.
 Michael R. et al.[33] compare post-copy against the precopy
 approach using Xen Hypervisor. Using post-copy technique
 the total migration time and the number of pages transferred
 can be reduced as compared to pre-copy. But this approach
 has more downtime, which causes to service unavailability the
 users.
 To provide fast virtual machine migration, Jin et al.[16]
 used memory compression and a VM migration approach
 (MECOM) based on it. The virtual machine services may be
 slightly affected based on memory page characteristics. For
 balancing the performance and the cost of virtual machine
 migration, they also designed an adaptive zero-aware compres-
 sion algorithm. Pages are quickly compressed in batches on
 the source and exactly recovered on the target. They compared
 with Xen hypervisor, it reduces downtime, total migration time
 and total transferred data on average.
 By adding a bitmap page which marks those frequently up-
 dated pages Fei Ma et al.[17] improved pre-copy approach
 on Xen 3.3.0 in cluster environment. Due to using a network-
 accessible storage system (such as SAN or NAS), only memory
 and CPU status needs to be transferred from the source node to
 the target. Frequently updated pages put into the page bitmap
 in the iteration process and those pages are transmitted in
 the last round of the iteration process. This can ensure that
 those frequently updated pages are transmitted just once in the
 iteration process. It solves the resending problem of memory
 pages and reduce the transferred data and total migration time.
 2) Modern Data Center Environment: Hacking and
 Hudzia[18] focused on migration limitation of larger appli-
 cation system such as SAP ERP due to consumption of
 large amount of memory and they present a system which
 support transparent migration of large enterprise applications
 workloads. This system has a novel mechanism of memory
 transfer based on delta compression and to reduce the rigidity
 of migrating large VMs, an adaptive warm up transfer phase
 is added. This system aims to increase transfer performance
 and reduce down-time.
 Akoush et al.[19] examine migration times and propose models
 which predict the workload specific service interruptions. They
 show that the link speed and page dirty rate are the major
 factors impacting migration behavior. Prediction of migration
 time must be accurate to enable more dynamic and intelli-
 gent placements of VMs without degrading performance. The
 current technology focused on the schemes of VM placement
 with performance constrains. There was little work concerning
 about both the performance and energy costs during the
 consolidation actions.
 H. Liu et al.[20] proposed a model the VM migration per-
 formance based on theoretical analysis and empirical studies
 on Xen platform. It is the first model VM migration costs
 in terms of both performance and energy. They validate the
 models by conducting a large set of experiments. Modeling
 the performance of migration involves several factors: the
 size of VM memory, the workload characteristic, network
 transmission rate, and the migration algorithm. The most
 important challenge is to correctly characterize the memory
 access pattern of each running workloads.
 3) Cloud Data Center Environment: ”Address-warping”
 problem is one of the difficulties in wide-area migration,
 the address of the VM warps from the source server to the
 destination server which complicates the status of the WAN,
 and the LANs connected to the WAN. Kanada et al.[21] use
 address translation to solve this problem. It translates the
 original and moved addresses of the VM, which have the
 identical but exist in different locations. It is like paging in
 memory virtualization.
 Current live migration technology has long migration times
 and also wastes valuable network bandwidth due to sending
 memory pages several times during the live migration process,
 memory pages are frequently updated and these pages must
 be sent. A VM can easily dirty memory pages faster than
 these can be transferred over the network, it causes extended
 migration downtime. These problems be more difficult when
 memory or CPU intensive Virtual Machines (VMs) are mi-
 grated or VMs are migrated over slow networks. To reduce
 the total migration time Svard et al.[22] proposed a method
 dynamic page transfer reordering which dynamically adapt
 the transfer order of memory pages. In this approach, page
 weight is calculated which is based on page update frequency
 sampling information. Then it is used to prioritize the transfer
 of less frequently updated pages before the frequently updated
 pages. Then these frequently updated pages are sent in last,
 the number of page re-transfers is reduced, by reducing the
 amount of transferred data total migration time can be reduced.
 To reduce the migration downtime they combine dynamic
 page transfer reordering with delta compression techniques. It
 increases the migration throughput and thus reduces migration
 downtime. They modified KVM hypervisor by implementing
 the combined page transfer reordering and compression algo-
 rithm.
 Three elements: memory, status, and storage (the disk-image
 containing file system and user data) are transferred during
 VM migration from a source cloud to a destination cloud over
 a WAN. Celesti et al.[23] focus on the dynamic VM allocation
 and propose a ”Composed Image Cloning” (CIC) methodology
 to reduce the consumption of bandwidth and cloud resources.
 Suen et al.[24] propose and compare techniques for both
 instance-based and volume-based storage in the public and pri-
 vate cloud infrastructure that can reduce the transfer bandwidth
 and storage cost of data involved during the migration process.
 B. Cloud Brokerage
 Cloud brokerage is a bridge between service provider and
 the user. Gartner explain the responsibility of cloud broker
 242
into cloud service arbitrage, aggregation and cloud service
 intermediation[25]. Central Cloud Broker component is given
 by Grivas et al. [26] which is responsible for governance and
 the management of cloud environment, mainly focused on
 business process management. Chaisiri et al.[27] proposed a
 cloud broker with optimal virtual machine placement algorithm
 and this algorithm is also minimize the cost for hosting virtual
 machines in several provider environment.
 IV. PROPOSED IDEA
 A. Mechanism Description
 Figure 3 illustrates three roles in cloud to cloud migration
 architecture: user, cloud broker, cloud provider. Here we are
 giving a term SCA(Service Change Agreement) for changing
 the service provider.
 1) User: User is one who uses the cloud services and if
 he/she is not satisfy or with any reason any time he can change
 his service provider by submitting its VM description to the
 broker.
 2) Cloud Broker: A cloud broker is an individual or
 organization that creates and maintains relationship among
 cloud providers. It acts as a liaison between cloud service users
 and cloud service providers. They select best provider for each
 user and also monitors the service continuously so that user
 will be satisfy. If user has any problem with the service then
 he can request to broker either to change his service provider
 or to improve the service.
 3) Cloud provider: A service provider offers storage or soft-
 ware services via a private cloud or public cloud to users. The
 cost is based on a per-use utility model. Each cloud provider
 supports several instance types (VM configuration). A instance
 type is defined as hardware metrics such as CPU, storage, main
 memory. Some examples are: Amazon Simple Storage Service
 (Amazon S3)[28], Cisco[29], Citrix[30], IBM[31], Google[32],
 Microsoft[33], Rackspace[34], Salesforce.com[35].
 4) SLA (Service Level Agreement): The emergence of
 cloud computing has led to evolution in terms of how ap-
 plications are built and managed this whole new perspective
 of how the things are done needed a new way of management
 . This management involves the constraints and parameters of
 service, service customer and service provider are to adhere
 to. It is the cornerstone of how the service provider sets
 and maintains commitments to the service consumer. When
 a customer wants to use service then first he engages in a
 negotiation phase, after an agreement has been achieved. The
 service provider and customer sign this agreement. The goals
 of SLA is to provide the clear reference to service ownership,
 roles and accountability and it match perceptions of expected
 service provision with actual service support and delivery.
 B. Virtual Machine Portability
 1) Methodology: This is a new mechanism for migrating
 the VM from one service provider to another service provider.
 First user request to the broker to change his service provider
 then broker verify the request and forward the request to
 donor(source service provider) then donor approved request
 and forward approval to the broker. The broker fixes the porting
 and convey it to both source service provider and target service
 Fig. 3. Virtual Machine Portability
 provider. Then VM would be migrated from donor to recipient
 with the same configuration and VM would be disconnected
 from donor service provider and provisioned in target service
 provider.
 2) Advantages: The following advantages are describing
 below:
 • Portability: Cloud service customer would be able
 to port service provider while retaining their existing
 virtual machine.
 • Simplicity: VMP success mainly depends on the sim-
 plicity of the process. There could be many rules that
 the regulator may impose.
 • Speed: Speed is one of the major factors that affect the
 success of VMP. Service level agreements should be
 stringent enough to minimize the time taken to migrate
 the VM to other service provider. This increases the
 level of customer satisfaction
 • Cost factor: VMP success also depends on the cost of
 porting the VM. The lower the cost, the higher will be
 the rate of porting. The cost here refers to the amount
 that the customer needs to pay to port their virtual
 machine to some other service provider’s.
 3) Limitation:
 • Bandwidth Limitation: Bandwidth limitation is the
 most influential parameter on performance of VM
 migration. It effects to total migration time and down-
 time. To speed up migration it is necessary to have
 great speed of bandwidth.
 • No shared storage: In most migration methods, shared
 virtual disk is considered so that source and destina-
 tion hypervisor can access to it. Otherwise it can take
 long time due to large size virtual disk. We are trying
 to implement with shared storage.
 • Problem with platform compatibility: Many different
 types hardware is used with different platform, hence
 moving of VM from one service provider to another
 243
may face this problem. Hardware compatibility is a
 big challenge.
 V. IMPLEMENTATION
 Eucalyptus: Eucalyptus[36] is a open source software that
 helps in managing and creating public or even private acces-
 sible cloud. Eucalyptus has become very popular and is seen
 as one of the key open source cloud platform. Its architecture
 is simple and flexible. Eucalyptus has five main components:
 A. Cloud controller(CLC)
 It is the frontend of the architecture and interacts with the
 user and also provides the virtual machine controlling. It is
 most visible element of the eucalyptus architecture.
 B. Walrus Storage Controller(WSC)
 It is a storage which is used to store and access virtual
 machine images and user data. WSC storing and accessing
 data either from running instance or from anywhere on the
 web.
 C. Cluster controller(CC)
 This is used to manage one or more the node controllers
 and manage/deploys instances on them. Cluster controller also
 manages the networking for instances running on the nodes.
 It operates between cloud controller and node controller. It
 will receive request to allocate machine images from the cloud
 controller and in turn decides which node controller will run
 the machine instance. This decision is based upon status report
 which the cluster controller receives from each of the node
 controllers.
 D. Node controller(NC)
 It is back end of the infrastructure, used to control and
 terminating of virtual machine instances on the host. The NC
 role is to interact with the operating system and hypervisor
 running on the node, as instructed by the cluster controller.
 Fig. 4. Eucalyptus Architecture
 In order to create cloud environment, we used two ma-
 chines for node controller with 500GB hard disks and 8 GB
 RAM. Furthermore we installed Xen on the NCs. We install
 cluster controller and cloud controller on one machine with 500
 GB hard disk and 8 GB RAM. These machine are connected
 through LAN network with 100 Mbps bandwidth. The cloud
 administrator and client input their request to the CLC through
 running API functions. Therefore in order to create migration
 capability in eucalyptus we create an API functions. We run
 euca-migrate-instance API, firstly CLC finds the node’s IP
 address that the instance currently running there and then these
 values are transferred to the cluster controller. API Function
 shown in figure 5. We successfully migrated VM from one NC
 to another NC.
 Fig. 5. API Function
 Now we set up a eucalyptus based cloud with two cloud
 service provider which are connected through a switch. For
 each service provider we take two machines for node controller
 and one for cluster controller and cloud controller and these are
 connected via a private switch. Now we are trying to migrate
 VM running on NC of one service provider(source) to another
 service provider’s(destination) NC.
 Fig. 6. A Simple Private Cloud Environment
 VI. CONCLUSION
 Current commercial cloud platforms are incapable of meet-
 ing the requirements of enterprise customers However, The
 technique described in this paper offer a promising new
 approach for supporting the task of virtual machine portability
 In this work we propose the idea Cloud-to-Cloud Migration,
 We envision the future clouds as flexible resource pools that
 seamlessly span multiple data center and enterprise sites.
 With this kind of architecture, cloud providers and enterprise
 customers are able to transparently migrate VMs between
 sites. This can allow a data center operator to perform load
 balancing between sites without impacting customer applica-
 tions, or for customers to change placement decisions based
 on. This paper takes a step in that direction by simplifying
 the network reconfiguration for migration of virtual servers
 between cloud sites. This approach is expected to produce a
 more precise traceability reduce costs, improve efficiencies and
 reduce administrative overhead. Delivering IT services via the
 Cloud portends to be a time saver, a money saver and allow
 for better efficiencies.
 244
REFERENCES
 [1] Kreuter, D., “Where server virtualization was born”. Virtual Strategy
 Magazine, July 21, 2004.
 [2] A. Desai(2012), “Virtual Machine”. Accessed April 15, 2013
 [3] Xenserver, “Citrix Xen Server” Avail-
 able:http://www.citrix.com/products/xenserver/ [May 2013]
 [4] VMWare, “vSphere ESX and ESXi Info Center.”, (2013), [online].
 Available: vmware.com/products/vsphere/esxi-and-esx [May, 2013].
 [5] KVM, “Kernel-based Virtual Machine.”, (2013), [online]. Available:
 linux-kvm.org [May, 2013].
 [6] Microsoft, “Hyper-V Server 2012.”, (2013), [online]. Available:
 microsoft.com/server-cloud/hyper-v-server/ [May, 2013].
 [7] vmware, “Workstation”, (2013), [online]. Available:
 http://www.vmware.com/products/workstation/ [May, 2013].
 [8] Oracle, “VirtualBox.”, (2013), [online]. Available: virtualbox.org [May,
 2013].
 [9] VMWare, “VMWare”, (2013), [online]. Available:
 http://www.vmware.com/in/ [May, 2013].
 [10] Citrix, “Xen”, (2013), [online]. Available: http://www.xen.org/ [May,
 2013].
 [11] OpenVZ, “OpenVZ”, (2013), [online]. Available:
 http://openvz.org/MainPage [May, 2013].
 [12] P. S. Constantine, C. Ramesh, P. Ben, C. Jim, S. L. Monica, and
 R. Mendel, “Optimizing the migration of virtual computers,” in 5th
 Symposium on Operating Systems Design and Implementation, SIGOPS
 Oper. Syst. Rev., vol. 36, Issue SI, pp. 377-390, 2002.
 [13] C. Christopher, F. Keir, H. Steven, H. Jacob Gorm, J. Eric, L. Christian,
 P. Ian, and W. Andrew, “Live migration of virtual machines,” 2nd confer-
 ence on Symposium on Networked Systems Design and Implementation
 - Volume 2: USENIX Association, 2005.
 [14] R. H. Michael, D. Umesh, and G. Kartik, “Post-copy live migration of
 virtual machines,” SIGOPS Oper. Syst. Rev., vol. 43, pp. 14-26, 2009.
 [15] R. H. Michael and G. Kartik, “Post-copy based live virtual machine
 migration using adaptive pre-paging and dynamic self-ballooning,”, ACM
 SIGPLAN/SIGOPS international conference on Virtual execution envi-
 ronments, Washington, DC, USA: ACM, 2009.
 [16] J. Hai, D. Li, W. Song, S. Xuanhua, and P. Xiaodong, “Live virtual
 machine migration with adaptive, memory compression,” in IEEE Inter-
 national Conference on Cluster Computing and Workshops, CLUSTER
 ’09, pp. 1-10.
 [17] M. Fei, L. Feng, and L. Zhen, “Live virtual machine migration based
 on improved pre-copy approach,” in IEEE International Conference on
 Software Engineering and Service Sciences ICSESS), 2010, pp. 230-233.
 [18] H. Stuart, Beno, and H. t, “Improving the live migration process of large
 enterprise applications,” 3rd International Workshop on Virtualization
 Technologies in Distributed Computing, Barcelona, Spain: ACM, 2009.
 [19] A. Sherif, S. Ripduman, R. Andrew, W. M. Andrew, and H. Andy,
 “Predicting the Performance of Virtual Machine Migration,” in IEEE
 International Symposium on Modeling, Analysis and Simulation of
 Computer and Telecommunication Systems, 2010.
 [20] L. Haikun, X. Cheng-Zhong, J. Hai, G. Jiayu, and L.Xiaofei, “Perfor-
 mance and energy modeling for live migration of virtual machines,” 20th
 International Symposium on High Performance Distributed Computing,
 San Jose, California, USA: ACM, 2011.
 [21] Y. Kanada and T. Tarui, “A network-paging” based method for wide-
 area live-migration of VMs,” in International Conference on Information
 Networking 2011, ICOIN 2011, Jan 2011, pp. 268-272.
 [22] P. Svard, J. Tordsson, B. Hudzia, and E. Elmroth, “High performance
 live migration through dynamic page transfer reordering and compres-
 sion,” 2011 3rd IEEE International Conference on Cloud Computing
 Technology and Science, CloudCom 2011, pp. 542-548.
 [23] A. Celesti, F. Tusa, M. Villari, and A. Puliafito, “Improving virtual
 machine migration in federated cloud environments,” 2nd International
 Conference on Evolving Internet, Internet 2010, pp. 61-67.
 [24] S. Chun-Hui, M. Kirchberg, and L. Bu Sung, “Efficient Migration of
 Virtual Machines between Public and Private Cloud,” in IEEE Third
 International conference on Cloud Computing Technology and Science
 (CloudCom), Los Alamitos, CA, USA, Nov 2011, pp. 549-53.
 [25] “Gartner research: cloud consumers need broker-
 ages to unlock the potential of cloud services”,
 http://www.gartner.com/it/page.jsp?id=1064712, visited May 2013.
 [26] S. Grivas, T. Uttam Kumar, and H. Wache, “Cloud broker: Bringing
 intelligence into the cloud”, in proceedings of IEEE 3rd International
 conference on cloud computing(CLOUD 2010), pp. 544-545.
 [27] S.Chaisiri, B.-S. Lee, and D. Niyato, “optimal virtual machine place-
 ment across multiple cloud providers”, in proceedings of the 4th IEEE
 Asia pacific services computing conference, pp. 103-110.
 [28] Amazon, “Amazon Simple Storage Service (Amazon S3)”, (2012),
 [online]. Available: aws.amazon.com/ec2/ [May 2013].
 [29] Cisco, “Cisco System”, (2013), [online]. Available:
 http://www.cisco.com/ [May 2013].
 [30] Citrix, “Citrix-India”, (2013), [online]. Available: http://www.citrix-
 india.com/ [May 2013].
 [31] IBM, “IBM”, (2013), [online]. Available: http://www.ibm.com/in/en/
 [May 2013].
 [32] Google, “Google”, (2013), [online]. Available: http://www.google.co.in/
 [May 2013].
 [33] Microsoft, “Microsoft”, (2013), [online]. Available:
 http://www.microsoft.com/en-us/default.aspx [May 2013].
 [34] Rackspace, “Rackspace”, (2013), [online]. Available:
 http://www.rackspace.com/ [May 2013].
 [35] Salesforce, “Salesforce”, (2013), [online]. Available:
 http://www.salesforce.com/in/ [May 2013].
 [36] N. Daniel, W. Rich, G. Chris, O. Graziano, S. Sunil, Y. Lamia, and
 Z. Dmitrii, “The Eucalyptus Open-Source Cloud-Computing System,” in
 Proceedings of the 2009 9th IEEE/ACM International Symposium on
 Cluster Computing and the Grid: IEEE Computer Society, 2009.
 245
