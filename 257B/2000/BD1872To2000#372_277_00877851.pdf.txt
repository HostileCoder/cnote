An Integrated Support System for Rotorcraft Health 
Management and Maintenance1 
Amit Mathur, Sudipto Ghoshal, Deepak Haste, Charles Domagala, Roshan Shrestha, Venkatesulu Malepati, Krishna Pattipati 
Qualtech Systems, Inc. 
6 Storrs Road, Suite 6 
Willimantic, CT 06226 
amit C~tcarna~i.com 
(860) 423-2099 
Abstract- This paper reports work being done by Qualtech 
Systems, Inc. (QSI) and Sikorsky Aircraft towards 
developing an integrated solution for onboard and ground- 
based health management and condition-based maintenance 
of the Navy and Army helicopters as part of the JAHUMS- 
ACTD Program (Joint Advanced Health and Usage 
Monitoring System - Advanced Concept Technology 
Demonstration). The solution builds upon QSI’s system 
modeling and integrated diagnostics tools and Sikorsky 
Aircraft’s Integrated Electronic Technical Manual (IETM) 
software, and involves several key innovations. The 
solution will be integrated with the Navy’s Integrated 
Mechanical Diagnostics Health and Usage Monitoring 
System (IMD-HUMS). We present the overall architecture 
and the data-management process of the integrated onboard 
and ground-support system for the IMD-HUMS, and 
comment on its potential for achieving the goals of the 
HUMS technology. 
TABLE OF CONTENTS 
1. INTRODUCTION 
2. ARcmcTURE OVERVIEW 
3. THE INTEGRATED TEAMS TOOLSET AND ITS 
DEPLOVMENT IN JAHUMS 
4. DEVELOPMENT UNDER JAHUMS 
5. INFORMATION FLOW FOR HUMS DATA PROCESSING 
6. PRELlMINARY RESULTS AND CONCLUSION 
7. REFERENCES 
1. INTRODUCTION 
The logistics of sustaining the availability of technological 
assets is a principal cost-driver in organizations performing 
safety- and mission-critical operations, e.g., the defense 
forces’ weapon systems and commercial airline fleets. 
Maintenance of such organizations’ sophisticated 
mechanical and electronic systems such as ships and aircraft 
has traditionally relied on overly conservative scheduled 
maintenance to minimize unscheduledcorrective 
maintenance and to prevent catastrophic failures. The 
obvious solution to this expensive approach is condition- 
based maintenance (CBM) - provided that an infrastructure 
for continuously monitoring and assessing the health, and 
estimating the remaining life of the organizations’ assets can 
be established. The recent activity in the field of health and 
usage monitoring systems (HUMS) and large distributed 
management information systems (MIS) for maintenance 
logistics is the result of the urgency of creating the necessary 
infrastructure to support CBM. At the same time, the 
system- and application-specific intelligence to successfully 
drive the health assessment, diagnostics, and prognostics of 
the monitored systems also needs to be developed and 
incorporated into these systems. 
This paper presents architectural details of an integrated 
maintenance support process for a health and usage 
monitoring system (HUMS) for helicopter maintenance that 
seeks to enhance the HUMS infrastructure as well as to 
provide system intelligence for efficient diagnostics. This 
technology is being developed under the U.S. Navy’s and 
Army’s Joint Advanced Health and Usage Monitoring 
System (JAHUMS) Advanced Concept Technology 
Demonstration (ACTD) program [ 1 J sponsored by the U.S. 
Office of Secretary of Defense (OSD). Several proprietary 
implementation details are not being provided. 
JAHUMS solutions will be integrated with the Integrated 
Mechanical Diagnostics (IMD-COSSI) HUMS being 
developed for the Sikorsky Aircraft SH-60B Seahawk 
helicopters by BFGoodrich Aerospace (BFG) under the 
Defense Advanced Research Projects Agency (DARPA) 
Joint Dual Use Programs Office (JDUPO) Commercial 
Operations and Support Savings Initiative (COSSI). 
2. ARCHITECTURE OVERVIEW 
As shown in Figure 1, the integrated support system under 
development includes three diagnostic modules and one data 
management module, to be installed on three hardware 
systems: the IMD-HUMS onboard system (OBS) on the SH- 
60B Seahawk; the IMD-HUMS Ground Support Station 
(GSS); and the Portable Electronic Display Device (PEDD). 
The four software modules are: (i) QSI’s TEAMS-RT real- 
time health monitoring and diagnostic module, to be 
embedded in the onboard HUMS Flight Program; (ii) an 
Electronic Logbook and Knowledge Base (ELB&KB) data 
management module to be installed in the GSS, with a Kl3- 
lite module installed in the PEDD; (iii) a Diagnostic Debrief 
module to be installed in the GSS and integrated with QSI’s 
TEAMATE diagnostic reasoner; and (iv) the IETM- 
TEAMATE interactive troubleshooting aid installed in the 
PEDD. The diagnostic modules will be data-driven, where 
the data will consist mainly of system models. 
’ 0-7803-5846-5/00/$10.00 0 2000 IEEE 
1 
The system models, extracted and adapted from Sikorsky’s 
troubleshooting procedures into QSI’s modeling and 
diagnostic strategy generation tool TEAMS, will be stored 
in the ELB&KB database. The model will also be uploaded 
into the OBS for use by TEAMS-RT’s inference engine. 
TEAMS-RT’s health report is used by the Debrief module 
and IETM-TEAMATE for interactive, off-line 
troubleshooting and initiating condition-based ground 
maintenance. The combination of ELB&KB and KB-lite, a 
central and a mobile database, respectively, integrates the 
entire maintenance and support environment and binds the 
information flow among the diagnostic modules. ELB&KB 
will interface with the Naval Aviation Logistics Command 
Organizational-level Management Information System 
(NALCOMIS) [2 ]  to initiate maintenance actions, obtain 
ground maintenance scheduling information and upload 
compliance data after an interactive IETM-TEAMATE 
3. THE TEAMS TOOLSET AND lTS DEPLOYMENT 
IN JAHUMS 
QSI’s set of modeling and diagnostic tools aims to support 
an integrated process for system maintenance and 
diagnostics in complex systems. Current research at QSI is 
focused on enhancing the TEAMS tool set to include a fully 
operational support process for on-line diagnostics, portable 
maintenance aiding, current operational procedures, parts 
prediction and inventory management. The integrated 
process not only eases the model development process by 
integrated model management with the model development 
tool, but also integrates data from field maintenance to 
update and improve the models for better fault detection and 
isolation, as well as improved diagnostic strategies. 
f Real-time Diagnostics \ 
Reduce Cannot DuplicatesRetest OKs 
Improve Diagnostic Performance & 
Reduce L i fe  Cycle Costs 
Accuracy 
2 - - - - - - - 
Flight 
Data Portable Logbook & 
Knowledge Base 
Interactive Electronic 
Technical Manuals 
I . . - _ - - - - - - - -  i K- Pilot Maintainer 
I NALCOMISOMA I 
i Electronic Lo 
Knowledge Base 
Intelligent Diagnostic Debri 
. 
- 
Figure 1 Overview of the integrated support system components for JAHUMS. 
maintenance session. It is also intended to assist in aircraft 
configuration management performed in NALCOMIS by 
updating configuration information following maintenance 
sessions. The ELB&KB database is a complete repository 
of TEAMS models, whose parameters, such as test costs, 
test times, and mean-time to failure (MTTF) of parts, are 
updated from data logged by TEAMATE in the mobile 
database, KB-lite. 
TEAMS - System 
Model 
The tool set comprising of TEAMSTM (Testability 
Engineering and Maintenance System), TEAMS-RTTM, 
TEAMATETM and TEAMS-KB/KB-liteTM captures the 
users’ knowledge of the system in terms of models to 
automate the testability and reliability analyses, and to 
perform on-line monitoring and off-line diagnosis tasks. 
2 
TEAMS 
TEAMS is a graphical software tool for diagnostic model 
development and analysis [3] that integrates a unique multi- 
signal flow graph modeling methodology [4, 51 and various 
analysis techniques for performing testability analysis and 
design for testability [6]. Various testability figures of merit 
(TFOMS) are also generated. TEAMS has been used for 
The TEAMS-RT software has a modular structure: it is 
composed of two primary modules - a kemel (the diagnostic 
engine) which exists as a dynamically linked library (DLL), 
and a driver routine, which acts as the executive responsible 
for scheduling the diagnostic processes. The driver routine 
utilizes the Application Programming Interface @PI) of the 
TEAMS-RT kemd to Perform aPPlication-sPecific tasks, 
interface, if required. 
testability analysis 2 large systems containing as many as 
50,000 faults and 45,000 test points. TEAMS is designed to 
support the life-cycle cost reduction of a system by aiding 
the system designer and test engineer in embedding 
testability features, including "built-in-test'' requirements, 
into a system design; and by aiding the maintenance 
engineer by developing near-optimal diagnostic strategies. 
TEAMS is used to: (i) model individual subsystems and 
integrate them into system models, (ii) analyze and quantify 
testability of systems and subsystems, visually pinpoint the 
diagnostic inefficiencies of a system, and make 
recommendations towards the design of completely testable 
systems, (iii) provide a comprehensive aid to automate the 
generation of FMECA reports, (iv) generate near-optimal 
diagnostic procedures for a variety of realistic testing 
options. Thus, TEAMS is mainly a design for testability 
(DFT) tool, but its (pre-computed, and, hence, static) 
diagnostic procedures can be embedded into Interactive 
Electronic Technical Manuals (IETMs) and Automatic Test 
Equipment (ATE). TEAMS can also export the diagnostic 
strategy as in SGML format that has allowed Sikorsky to 
produce automated technical publications that are consistent 
with IETMs and expert diagnostic systems for a range of 
aircraft configurations. In the JAHUMS project, TEAMS is 
being used to model the engine systems of the SH-60B 
helicopter. The flat SGML file generated by TEAMS from 
an XML file format for TEAMS models, is being used to 
develop the binding between the identifiers of the individual 
entities in the model of the engine system and the relevant 
content in the IETM for those entities. 
TEAMS-RT 
TEAMS-RT is a diagnostic module designed to be 
embedded in target systems for real-time onboard diagnosis 
and on-line system health monitoring [3]. For its 
processing, it requires a TEAMS model of the system, and 
results from onboard sensors monitoring system health (the 
results may be asynchronous). Using the fault-test 
dependency model, and the test-results computed from 
sensor data, TEAMS-RT identifies the bad, good and 
suspect set of components. Some salient features of 
TEAMS-RT are (i) efficient real-time processing of sensor 
results, (ii) update of fault-to-test-point dependencies in 
response to system mode changes, and (iii) update of 
dependencies resulting from failures in redundant 
components. TEAMS-RT may be embedded in the flight 
computers to continuously monitor the health of the system, 
and identify any in-flight failures. The real-time capabilities 
of TEAMS-RT were demonstrated on the X33 Integrated 
Propulsion Testbed Demonstrator project [8,9]. In these 
tests, TEAMS-RT, running on a space-qualified Sparc2 
workstation, was able to monitor a 1000-component and 
1000-test liquid oxygen (LO?) and liquid hydrogen (LH?) 
subsystem in 50- 100 milliseconds/second. Memory 
requirements were 0.9 MB. TEAMS-RT's real-time and 
memory performance exceeded specifications (execution 
time specification: 200msec; memory specification: 2MB). 
In the IMD-HUMS system for the SH-60B helicopters, the 
built-in-test (BIT) results will be obtained via the HUMS 
interface. Each of these test results represents a test in the 
context of the TEAMS model of the subsystem being 
diagnosed. The failed tests are used by TEAMS-RT to 
generate a system health report and to log it into the HUMS 
onboard data storage cartridge. This system health report is 
used by TEAMATE for ground-based diagnosis. 
TEAMATE 
TEAMATE (read team-mate) is a companion tool to 
TEAMS and TEAMS-RT for adaptive field diagnosis [3]. 
TEAMATE is a thin-client capable, network-based 
environment for interactive diagnosis. It isolates failure 
sources in the shortest possible time (or smallest number of 
tests), subject to various constraints on available 
troubleshooting resources, maintenance setup operations 
already performed, the initial suspect set generated by 
TEAMS-RT during a flight (mission) and post-flight (post- 
mission) pilot (operator) debrief. TEAMATE can also 
operate in a training mode and, thus, is ideal for trainees and 
apprentices for learning troubleshooting strategies and repair 
procedures. For JAHUMS, the TEAMATE diagnostic 
engine will be integrated with a Pilot Debrief module in the 
Ground Station, and an interactive electronic technical 
manual (IETM) to assist field personnel in post-flight 
debrief and on-aircraft condition-based maintenance. Like 
TEAMS-RT, TEAMATE too employs TEAMS-generated 
system models to perform interactive diagnosis. 
In the JAHUMS Pilot Debrief and IETM modules, 
TEAMATE is implemented as a server with the Debrief and 
IETM user interface sub-modules as clients. The technician 
performs off-line diagnosis with TEAMATE and interacts 
with the user interface of the TEAMATE client. The client 
performs minimal processing of user inputs. The client user 
interface allows the user to pass or fail a test, indicate the 
completion of a setup, undo the last step which could be a 
test or a setup, or state that a step (i.e., a test or setup) 
suggested by TEAMATE cannot be done. 
TEAMS-KB 
TEAMS-KB is a maintenance database tool that can be 
deployed at various maintenance sites [3]. It provides a 
repository for TEAMS-generated models as well as all 
diagnostic and maintenance process information that the 
onboard and ground-based diagnostic tools need to 
exchange. In particular, the on-line diagnostic and 
maintenance information collected by TEAMATE 
(components repaired, repair timedcosts, test costdtimes, 
etc.) is archived in TEAMS-KB. It is also designed to 
archive diagnostidmaintenance data from external 
maintenance management databases, legacylprovisioning 
databases, or through TEAMS-KB's graphical interface 
forms. Various parameter estimation algorithms are built 
3 
into it to support analysis of maintenance data. It can be 
used to further refine the system model residing in the 
knowledge base of TEAMS with updated repair costs, repair 
times, component failure rates and diagnostic costs and 
times. In addition, the analysis algorithms provide 
predictions of optimal shelf-stocks of spares, and parts 
requirements. The reports generated by TEAMS-KB can 
provide insights into the bottleneck operations that slow 
down the entire maintenance process, by flagging 
unreasonably long task times, repeated failures of certain 
components, and updating hazard rates of components 
caused by changing environmental conditions. 
As part of the TEAMS-KB environment, a small database 
called TEAMS-KB Lite is also provided. TEAMS-KB-lite 
is a portable database with a small memory footprint that 
works in conjunction with TEAMS-KB’s main (central) 
database. It is used for field deployment and is used as a 
temporary repository for data required by TEAMATE 
(models and TEAMATE logs) that are uploaded to TEAMS- 
KB through automatic or manual scheduling. The central 
TEAMS-KB database is a complete repository of TEAMS 
models, whose parameters, such as test costs, test times, 
mean-time to failure (MTTF) of parts, repair costs, repair 
times are updated from the data logged by TEAMATE in the 
mobile TEAMS-KB Lite database. Currently, TEAMS-KB 
is an Oracle 8.0 Enterprise Edition database for hosting on a 
server computer at the ground station. TEAMS-KB-lite, an 
Oracle-lite 3.0 database with a small memory footprint, is 
ideal for mobile and other hand-held computer devices. It is 
currently hosted on a notebook computer that the technician 
would carry in the field, e.g., the Navy’s Portable Electronic 
Display Device (PEDD). Data is exchanged and updated 
between TEAMS-KB and TEAMS-KB-lite based on the 
replication and refresh capabilities built into those 
databases. 
Thus, in the JAHUMS effort, we have leveraged the 
TEAMS tool set for multi-signal dependency modeling from 
legacy data (via TEAMS), onboard diagnostics using built- 
in-tests (via TEAMS-RT), portable intelligent maintenance 
aiding, automated and consistent technical publications and 
linking with interactive electronic technical manuals (via 
TEAMATE), and data collection (via TEAMS-KB). 
4. DEVELOPMENT UNDER JAHUMS 
The following sub-sections document some of the 
innovations or modifications being implemented as part of 
developing the integrated support system. Implementation 
details of TEAMS-RT are not being provided because they 
are intricately tied to BFGoodrich Aerospace’s proprietary 
HUMS Flight Program architecture. 
4 
Modeling and TEAMS 
As mentioned in Section 2, all reasoning performed by the 
diagnostic modules is data-driven, where the data is 
provided as diagnostic models of the helicopter systems. 
Figure 2 illustrates the modeling process. 
The first step to capturing system models for the HUMS 
diagnostic modules is to collect available paper 
documentation in the form of technical manuals, schematics, 
and recommended troubleshooting strategies. These are 
combined with any other technical expertise obtained from 
technicians experienced with working on the systems, and 
entered as cause-effect dependencies in an XML (extensible 
Markup Language) document. The XML model is imported 
into the TEAMS environment for insertion of failure modes 
and test parameters, and analyzed. TEAMS also computes 
static troubleshooting strategies as well as dependency 
models readable by the onboard diagnostic module TEAMS- 
RT, and the ground-based troubleshootinghepair engine 
TEAMATE. The models are written into the TEAMS-KB 
component of ELB&KB for storage and retrieval by 
TEAMATE during the Pilot Debrief and IETM sessions. 
The IETM-TEAMATE 
The fault detection and diagnosis information collected from 
a system during maintenance must be communicated to the 
maintenance personnel in a clear and unambiguous manner 
and consistent with their training, experience and workload. 
In addition, the personnel should have the capability to 
query the diagnostics and prognostics system as to how and 
why a particular conclusion is reached; to elicit the nature, 
severity and context of the fault; to determine repair and 
rectification actions; and to provide additional inputs to the 
diagnostic and prognostic system to refine the decisions. 
The IETM-TEAMATE combination is designed with the 
above needs in mind to support efficient ground-based 
troubleshooting. While the IETM is an environment for a 
need-based presentation of technical information to the 
maintenance personnel, TEAMATE is the reasoning engine 
&at determines the content that the IETM must display, or 
tbt information on system status or test results that must be 
giiited from the personnel via the IETM interface. Figure 3 
summarizes the information flow between the IETM module 
seen by the technician and the underlying diagnostic 
reasoner implemented by TEAMATE. 
The Diagnostic Debrief 
The Diagnostic Debrief module has been designed to extend 
the IETM-TEAMATE technology to exploit the potential of 
diagnostic refinement by querying the human operators 
(flight crew) immediately after completion of a mission 
(flight). Using the same principles as in IETM-TEAMATE 
(wherein TEAMATE recommends a test to be performed by 
the technician, the technician reports the padfail outcome 
of the test, and TEAMATE updates the ambiguity group and 
determines the next test action to be performed by the 
technician), in the Diagnostic Debrief module, the IETM 
interface is replaced by a new interface customized for 
interaction with the flight crew. Now, TEAMATE suggests 
Yes/No type questions to be asked of the crew members 
(instead of pasdfail tests) and uses the responses to refine its 
initial suspect set and determine the next best question for 
TEAMATE 
Figure 3 Message protocol between TEAMATE and 
IETM. 
the Dilot based on Dotential information gain. The message 
protbcol is similarL to that shown in Frgure 3 for IETM- 
TEAMATE. 
5.  "ATION FLOW FOR HUMS DATA 
PROCESSING 
The support system process being developed for JAHUMS 
involves the following steps of information flow: 
1. 
2. 
3. 
4. 
5 .  
The information regarding system failure modes, tests, 
and cause-effect dependencies between failure modes 
and tests, captured in XML files, is imported into 
TEAMS, analyzed, and exported as diagnostic models 
to TEAMS-KB (for retrieval by TEAMATE), and to 
TEAMS-RT readable files for upload into the onboard 
HUMS. 
The TEAMS-RT model files are uploaded into the 
onboard HUMS system via a proprietary HUMS data 
upload process. 
During flight, TEAMS-RT is executed by the HUMS 
Flight Program. TEAMS-RT retrieves the TEAMS 
model of the system to be monitored. It obtains sensor 
data from the system via a proprietary HUMS-specified 
process, converts the data into test pass/fail results, and 
processes the test result data to compute the health 
status of all system components. The health status 
assigned to each component is one of four possible 
labels: Good, Bad, Suspect, and Unknown. TEAMS- 
RT logs the health report in the HUMS data logging 
unit (memory cartridge). 
After the aircraft lands, the HUMS memory unit is 
downloaded into the Ground Station. A process in 
ELB&KB retrieves the TEAMS-RT health report from 
the downloaded data and stores it in the KB database. 
The Pilot Debrief application is launched by the air 
crew, whereupon the underlying TEAMATE reasoner 
retrieves the system model and the TEAMS-RT health 
report to compute a dynamic questionnaire to be 
displayed to the flight crew. Each successive set of 
questions is determined based on the pilot's response to 
the previously answered questions. The questionnaire is 
designed to enable enhancement and corroboration of 
the diagnostic information obtained from TEAMS-RT. 
After completion of the Debrief session, the system 
health status is written into ELB&KB. 
If the diagnosis at the end of Pilot Debrief suggests a 
maintenance action (one or more system components 
have a Suspect or Bad health status), a process in 
ELB&KB initiates the generation of a maintenance 
action (Work Order) in NALCOMIS. 
The NALCOMIS environment provides the interface 
for the naval aviation maintenance organization’s Work 
Center personnel to review the maintenance actions 
initiated as a result of TEAMS-RT data and Pilot 
Debrief, and to schedule the maintenance action and 
assign resources (technicians) to the jobs. For this 
work, it is assumed that interfacing our Ground Station 
modules with NALCOMIS will effect the integration of 
our process into the overall maintenance process. 
After a job has been assigned to a technician, the 
information pertaining to the job, including the 
diagnostic model of the system to be worked on, is 
downloaded automatically from ELB&KB (central) 
database to the ELB&KB Lite database in the PEDD. 
The technician performs the necessary maintenance 
action by interacting with the IETM-TEAMATE 
application on the PEDD which guides himher through 
the troubleshooting process. Upon completion of the 
maintenance action, TEAMATE logs the session history 
into ELB&KB Lite. 
10. The session data is uploaded from the ELB&KB Lite 
Symptom - 
into the ELB&KB (central) database on the Ground 
Station. Subsequently, this data may be written into 
NALCOMIS for possible updating of the maintenance 
action job order with compliance data and aircraft 
configuration. 
6. PRELIMINARY RESULTS AND CONCLUSION 
.4n illustration of the potential gains from implementing the 
reported JAHUMS process is provided in Figure 4 for an 
example problem in a helicopter engine system. The figure 
shows a comparison of the current (legacy) process, 
supported only by an (unintelligent) IETM driven by a 
rsymptom reported by a human operator, with a process 
:supported by the onboard TEAMS-RT, Diagnostic (Pilot) 
Debrief, and an IETM driven by TEAMATE. In this 
example, the number of manual actions performed by 
technicians - the most expensive part of maintenance 
support - has been halved by using the integrated 
technologies. 
Upon completion of the development and installation phase 
of the JAHUMS program, the modules will undergo flight 
demonstrations to evaluate their return on investment. It is 
anticipated that our technologies will contribute to 
~ Altemator 
- Engine Hamess 
- History Recorder 
- Water Intrusion 
- Yellow Hamess 
- Thermocouple 
- Pilot Exceedance 
- DEC 
- VlDS 
.... 
- DEC 
- Engine Hamess 
- History Recorder 
- Water Intrusion 
- Yellow Hamess 
~ Engine (mechanical) 
- Thermocouple 
- VlDS 
- Pilot Exceedance 
JAHUMS 
- Alternator 
-Control Unit - Altemator - Control Unit 
- Engine Hamess - Control Unit - Engine Hamess 
- History Recorder - Engine Hamess - History Recorder 
- Water Intrusion - History Recorder - Yellow Hamess 
- Yellow Hamess - Water Intrusion 
- Thermocouple - Yellow Hamess 
- Instrument Display 
- Pilot Exceedance 
... 
Figure 4 Comparison of maintenance effort using the integrated maintenance process versus current practice for an engine 
problem. 
6 
0 Reducing life cycle costs via reduced maintenance costs 
Increasing availability 
Streamlining the maintenance and logistic process. 
The major benefit in deploying such an integrated 
maintenance system is the reduction of the overall life cycle 
cost of a system. This is achieved by impacting several 
measures of maintenance performance as follows: 
reduction in maintenance cost, including reduction in 
RTOKs (Retest OK’s), because of accurate fault 
isolation by the seamless integration of onboard 
monitoring (via TEAMS-RT) and ground support (via 
Debrief and IETM-TEAMATE) 
rapid turn-around time. The integrated system allows 
much of the fault diagnosis to be performed onboard 
via TEAMS-RT and reduces the dependence on 
ground-based troubleshooting and diagnosis. In 
addition, TEAMATE’s diagnostic strategies reduce the 
troubleshooting time by a factor of 3 or more over 
manual troubleshooting strategies embedded in 
standalone IETMs 
preventive maintenance by tracking the MTTFs (Mean 
Times to Failure) and MTTRs (Mean Times to Repair) 
and updating them with field data logged by 
TEAM ATE. 
Sikorsky Aircraft has performed a preliminary cost-benefit 
analysis and a Return On Investment (ROI) analysis for 
deploying an integrated maintenance system on SH-60B 
and CH-47D helicopters [7]. The cost-benefit analysis was 
performed for the engine maintenance of these two fleets. 
Engine maintenance savings would include savings from: 
Reduced Inspection Time 
Reduced False Removals 
0 Reduced Spare Part Requirements 
0 Reduced Unscheduled Data Collection 
0 Reduced Training Requirements 
A conservative estimate by Sikorsky Aircraft showed that 
the total yearly savings from deployment of an integrated 
maintenance technology, just for the engine maintenance 
alone, would be in the range of several million dollars for a 
fleet of 500 for each of the two fleets. An ROI analysis for 
the same two fleets of 500 of these two aircraft for all the 
subsystems of the aircraft shows a break-even period of less 
than half a year and a 5 year retum that is more than an 
order of magnitude over the initial investment. 
Reduced Mean Time To Repair 
7. REFERENCES 
[ 11 http://www.dt.navy.mil/jahums/ JAHUMS Project 
HomeDage. 
[3] Deb, S., Pattipati, K.R. and Shrestha, R., “QSI’s 
Integrated Toolset“, Proc. IEEE Autotestcon, Anaheim, 
CA, pp. 408-421, Sept. 22,1997. 
[4) Deb, S., Pattipati, K.R.. Raghavan, V., Shakeri, M and 
Shrestha, R. “Multi-Signal Flow Graphs: A Novel 
Approach for System Testability Analysis and Fault 
Diagnosis”, Proc. IEEE Autotestcon, Sept 20-22, 1994. 
[5] Deb, S., Ghoshal, S., Mathur, A., Shrestha, R. and 
Pattipati, K.R., “Multisignal Modeling for Diagnosis, 
FMECA and Reliability“, Proc. IEEE International 
Coilference on Systems, Man, and Cybernetics, 1998. 
[6] Pattipati, K.R., Raghavan, V., Shakeri, M., Deb, S., and 
Shrestha, R., “TEAMS: Testability Engineering and 
Maintenance System”, Proc. IEEE Automatic Control 
Coilference, Baltimore. MD, 1994. 
[7] “Joint Advanced Health and Usage Monitoring System - 
Advanced Concept Technology Demonstration“, Phase 
I Final Report, Sikorsky document no. SER 521365, 
August, 1998. 
[SI Holthaus, M., “Model Documentation for CLIN 0001, 
Engineering Support under Qualtech’s NASA Contract 
Entitled ‘Multisignal Flow Graphs for System Fault 
Diagnosis’ ,” Rockwell Aerospace, Final Report, May 
1996. 
[9] Kulkarni, D., Patterson-Hine, A., Holthaus, M., Deb, S., 
and Pattipati, K.R., “Degradation Detection and 
Testability Analysis in Propulsion Checkout and 
Control System,” Proceedings of the Aerotech ’95, Los 
Angeles, CA, Sept. 1995. 
8. BIOGRAPHIES 
Amit Mathur, a Research Scientist at Qualtech Systems, 
received the B.Tech. (1988) and M.Tech. (1990) degrees in 
Electrical Engineering from the Indian Institute of 
Technology, Kanpur (India), and the Ph.D. degree (1996) in 
Electrical Engineering from the University of Connecticut. 
A t  QSI, Dr. Mathur has led a number of projects applying 
and enhancing the modeling and analysis methods in QSI’s 
diagnostic tools. These include an ongoing OSD SBIR 
contract on failure analysis of large-scale systems, the 
ongoing NSWC-CD Joint Advanced Health and Usage 
Monitoring System (JAHUMS) ACTD (via subcontract from 
Sikorsky Aircraft), and a recently concluded DARPA SBIR 
Phase I contract on network fault modeling and monitoring. 
Dr. Mathur’s research has spanned the areas of testability 
and reliability engineering, statistical methods for  
manufacturing system optimization, quality engineering, 
distributed detection, and multiobjective optimization. 
Sudipto Ghoshal, is the Principal 
Research Engineer at Qualtech 
Systems, Inc. He received his B.Tech 
degree in Electrical Engineering 
from the Indian Institute of 
Technology, Kharagpur, India in 
1989, the M.S. and Ph.D. denrees in 
Biomedical Engineering from-the University of Connecticut, 
Storrs in 1991 and 1997, respectively. Prior to joining 
Qualtech Systems, Dr. Ghoshal was a Senior Sofhyare 
Engineer at Netscape Communications Corporation, 
Mountain View. 
Dr. Ghoshal’s research interests include understanding the 
signal processing of neural systems and development of 
tools and strategies for eflcient system test and diagnosis. 
A t  Qualtech Systems, he is primarily involved in developing 
a web based system diagnostic and training tool, 
TEAMATE, using Java and CORBA and is involved in 
standard related efforts in the areas of diagnostics. He was 
also the lead developer in the development of a web based 
Reusable Test Library software using Java and JDBC (Java 
Database Connectivity). 
Deepak Haste joined Qualtech Systems, bic as a Software 
Engineer in January 1999. He received a B.Tech degree in 
7 
Electrical Engineering from the Indian Institute of optimization algorithms for large-scale systems and team 
Technology, Bombay (India) and the M.S. degree in decision making. He is currently the Editor-in-Chief of the 
Electrical Engineering (Controls and Robotics) from IEEE Transactions on SMC - Part B (Cybernetics). 
Clemson University. His software expertise includes Ada95, 
LabVIEW and C/C++. He is currently working on 
enhancements to Qualtech Systems’ diagnostic tools and 
supporting work for the Navy’s Joint Advanced Health and 
Usage Monitoring System (JAHUMS) program under 
subcontract from Sikorsky Aircraft Corporation. 
Charles Domagala has been a Senior Systems Engineer at 
Qualtech since 1996. He received his B.E. degree in 
Engineering Science from SUNY Stony Brook. Prior to 
joining QSI, Mr. Domagala was a TPS Engineering 
Manager at Raytheon Corp. He is currently tasked to 
provide engineering services in the areas of training and 
creating diagnostic models utilizing QSI’s diagnostic 
toolset. 
Roshan Shrestha has been with 
Qualtech Systems, Inc., since 199.5, 
where he leads the products 
development group. He received the 
B.E. degree in Electrical Engineering 
from Gauhati University, India in 
1989. and the M.S. denree in 
Electrical and Systems Engiieering from the University of 
Connecticut in 1994. Mr. Shrestha has extensive experience 
in developing commercial software products for both the 
UNIX and Windows environment, with expertise in C, C+ +, 
and Java languages. He was the chief architect of QSIs  
premier product, TEAMS. Currently he is leading the 
development work on the network-aware version of 
TEAMATE, which utilizes state-of-the-art CORBA and Java 
technologies to per$orm remote diagnosis using the intemet. 
Venkatesulu Malepati is a Software 
Engineer at Qualtech Systems, Inc. 
He received a B.E in Electrical 
Engineering from Gulbarga 
University, Kamataka, India and 
Master of Computing (Information 
Technology) from the University of 
Westem Sydney, Australia. His expertise includes analysis 
and design of distributed, relational and object-oriented 
databases. 
Krishna R. Pattipati, is the President 
of Qualtech Systems, Inc. He received 
the B.Tech degree in Electrical 
Engineering with highest honors 
from the Indian Institute of 
Technology, Kharagpur, in 1975, and 
the M.S. and Ph.D. degrees in Systems Engineering from the 
University of Connecticut in 1977 and 1980, respectively. 
From 1980 to 1986, he was at ALPHATECH, Inc., 
Burlington, MA, where he supervised and pe$ormed 
research on queuing networks, automated testing, large- 
scale mixed-integer optimization, human decision modeling, 
and multi-target tracking,. Since 1986, he has been with the 
University of Connecticut, where he is a Professor of 
Electrical and Systems Engineering. Dr. Pattipati has 
published over 200 articles, primarily in the application of 
systems theory, queuing theory and optimization techniques 
to large-scale systems. Dr. Pattipati was selected by the 
IEEE Systems, Man, and Cybemetics Society as the 
Outstanding Young Engineer of 1984, and received the 
Centennial Key to the Future award. He was elected a 
Fellow of the IEEE in 1995 for his contributions to discrete- 
8 
