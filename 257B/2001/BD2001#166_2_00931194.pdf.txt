Modular Telecommunication Satellite Network using 
On-Orbit Telerobotic Assembly 
Susan Ayer (Caltech) 
Gregorio Drayer (Universidad Simon Bolivar) 
Scott England (University of Leicester) 
Helen Laird (University of Leicester) 
Eric Romo (Cooper Union) 
Todd Schuman (Caltech) 
Laboratory for Spacecraft and Mission Design 
202 Gugenheim Laboratory 
Caltech 
Pasadena 
CA91 125 
1 
626-395-4792 
Mentor: Dr. Joel C. Sercel (Caltech) 
Abstract-Orbital structures are currently limited by the 
payload capacity of launch vehicles. Satellite mass and 
volume constraints restrict the maximum size of solar 
arrays, antenna diameters, fuel tanks, and other satellite 
subsystems, thereby limiting overall satellite capability 
and effectiveness. In this study we address these issues 
by proposing the assembly of . a global 
telecommunications satellite network, the Ansible, that 
takes advantage of on-orbit telerobotic assembly and 
modular spacecraft design, thus surpassing other modem 
communication satellite networks. 
The Ansible network would provide several simultaneous 
global services, ranging from low data rate transmission 
to the satellite fiom a small low-power device, to very 
high data rate transmission to a small number of fixed 
ground stations, with intermediate levels of service in 
between. The ability to significantly vary levels and 
types of services is not currently available in the 
telecommunications market. This uniquely versatile 
satellite service is made possible with the use of 
steerable, hopping beams, regulated by an on-board 
processor that also controls the demodulation and 
remodulation of signals. 
Some of the specific functions which this system will be 
capable of include: 1) low data rate communications 
(4.8kbps) from many low power small mobile terminals 
(e.g. a watch size device) allowing the transmission of 
status and voice information, 2) high data rate downlink 
(2Mbps) and low data rate uplink (64kbps) fiom a highly 
mobile vehicle (e.g. a plane) allowing streaming video 
down and voice and data transmissions up, 3) high data 
rate uplink (24h4bps) and low data rate downlink 
(128kbps) fiom a semi-mobile terminal (e.g. a camera 
crew), and 4) very high data rate uplink and downlink 
(300Mbps) between a stationary high power ground 
station (e.g. link to ground-based communications 
infrastructure). 
The Ansible design utilizes many advanced technologies 
including telerobotic assembly, a reusable solar orbit 
transfer vehicle, tethered powersail, lightweight truss 
structure with integrated power distribution and thermal 
control system, deployable looped heat pipe radiators & 
lightweight, deployable Ka-band antennae. These allow 
the overall mass and stowable volume of the modules to 
be minimized, while allowing the construction of a 
platform whose size is beyond the capability of any 
single launch vehicle. 
The mission architecture, technical specifications of the 
satellite, and robot are all presented and justified. Models 
for the cost, mass, power and performance of the satellite 
are given and comparisons are drawn against existing, 
conventional satellite telecommunications networks, 
quantifying the many advantages of modular on-orbit 
satellite construction. 
0-7803-6599-2/01/$10.00 2001 IEEE 
5-2339 
CONTENTS 
SECTION 1 
1 .1  INTRODUCTION 
1.2 MISSION DESIGN 
1.3 SERVICES PROVIDED 
1.4 MISSION AND SYSTEM ARCHITECTURE 
1.5 TIMELINE 
SECTION 2 
2.1 ROBOTICS 
2.3 STRUCTURE 
2.5 PROPULSION 
2.7 TELECOM 
2.8 THERMAL 
2.2 COh4MUNICATIONS PAYLOAD 
2.4 POWER 
2.6 ATTITUDE DETERMINATION AND CONTROL 
2.9 DIGITAL SYSTEMS 
SECTION 3 
3.1 COSTING 
3.2 CONCLUSIONS 
SECTION 4 
4.1 REFERENCES 
4.2 ACKNOWLEDGEMENTS 
4.3 BIOGRAPHY 
5-2340 
SECTION 1 
1.1 INTRODUCTION 
Historically, the size of telecommunication satellites has 
been driven by the power that they require to operate 
nominally. The evolution of telecommunications has 
required that satellites become increasingly powerful; 
consequently, satellites have become larger. Along with 
bigger satellites comes a lower cost per bit (an important 
figure of merit for telecommunications systems). 
Early satellite designs were meant to meet specific mission 
objectives which made the design of each satellite unique. 
These spacecraft were very tightly integrated and the 
subsystems were inflexible to changes. The integration of 
new hardware into early satellite designs was very 
expensive and dif€kult. The evolution of satellite 
technology has helped develop new techniques and 
processes to design simpler systems. Today, satellites are 
designed with internally modular components that reduce 
the time spent on integration and testing procedures. 
Within this design, the satellites have a standardized 
Payload / Spacecraft module interface, which allows the 
different subsystems of the satellite to pass data and power 
between each other. Even given the internal modularity of 
current satellite designs, no existing satellites support on- 
orbit servicing and repair. 
Continuing in the line of telecommunications satellite 
evolution, The Ansible is a network composed of larger and 
more powerful satellites. The major driving force behind 
this network is the elimination of centralized Earth ground 
stations by allowing small, mobile receivers to establish a 
direct link with a satellite. This is best achieved using a 
large number of relatively small dishes, either installed on a 
fleet of small satellites, or a few large platforms. Large 
satellites offer less duplication of function and networks of 
only a few satellites offer operational simplicity. 
Many technologies have been and will be developed to 
facilitate the assembly of large structures in space. First, 
we have a modular design that is being used to build the 
space stations, which are the largest structures currently in 
orbit. One major drawback of the modular design technique 
employed in the assembly of the space stations is the 
immense amount of man-hours, specifically those of 
astronauts, which are required. Telerobotic assembly 
circumvents this problem, minimizing the man-hours 
required, and eliminating altogether the risk to astronauts. 
On-orbit assembly experiments and operations have been 
made in the past. From the Japanese Engineering Test 
Satellite VII of 1997 to the International Space Station 
robotic arm and the upcoming Ranger Telerobotic Shuttle 
Experiment, new technologies aie constantly shaping a 
simpler and more reliable set of robotic tools. These trends 
of technological advancement can be combined to launch 
and build immense satellites that will constitute a network 
that will provide new and revolutionary telecommunication 
services. 
The Ansible was a faster than light telecommunications 
network that enabled ships to talk to each other even when 
they were across the galaxy. It originally appeared in Ursula 
Le Guin’s science fiction novel called The Left Hand of 
Darkness and was later named in a more popular book: 
Ender’s Game, by Orson Scott Card. Our project operates 
on a slightly smaller scale than the fictional Ansible 
network, but still offers unheard of telecommunications 
capabilities. 
1.2 MISSION DESIGN 
In general, our mission is the telerobotic, on-orbit 
construction of a large telecommunications platfoim. 
Inherent to this mission are various principles. First of these 
is the necessity to maintain this massive satellite on-orbit, 
both during construction and during operation. All methods 
that will be considered involve modern or near-term 
technologies. 
Orbit Selection 
For this study, Geostationary orbit (GEO) was chosen as it 
takes full advantage of the small number of large platforms 
being considered (only 3 for near global coverage). It also 
creates fewer tracking problems than other orbits and is 
sufficiently far from the Van Allen Belts and atmospheric 
drag to allow the longest potential spacecraft lifetime. 
Launch Vehicle 
The second obstacle inherent to this 
mission is that great amounts of material 
need to be launched into orbit for the 
construction of this telecommunications 
network. Launching voluminous and 
massive modufes into space requires 
large, powerful rockets. Presently, the 
most powerful rocket used in the US for 
military and commercial applications is 
the Titan IVB, built by Lockheed Martin 
Corporation. The Boeing Company 
currently is developing the Delta IV 
Heavy, a bigger and cheaper vehicle 
than the Titan IVB. The Delta IV 
Heavy will have the most expansive 
payload fairings available, and its 
launch capacity to LEO of 23,040 kg ~ 
will be the greatest of any 
American launcher. Coupled with 
its comparably low price of Ivf feavY-Kessk  
$1 1OM per launch, these quoted 
performance specifications make 
the Delta IV Heavy an obvious choice for launching 
massive quantities of materials into orbit. 
Fig 1.2.1 BoeiWDelta 
L. and%e, f‘., (1999) 
5-2341 
Orbit Transfer Vehicle 
As previously mentioned, the Ansible network will consist 
of satellites in GEO. These satellites will be constructed 
on-orbit, and so, materials for construction will be launched 
to LEO. Various methods exist for the transfer of payloads 
from LEO to GEO, most of which require an upper stage to 
the heavy launch vehicle. Recent advances in technology 
will soon allow conventional rocket upper stages to be 
replaced by the Solar Orbit Transfer Vehicle (SOTV) which 
is currently being designed and developed by The Boeing 
Company. Concentrated sunlight is used to energize 
hydrogen, providing medium thrust with a high specific 
impulse (-900s). The reusability of this SOTV is perhaps 
its greatest feature. A new propellant tank is launched with 
each payload, and captured by the SOTV, which is already 
in orbit. Thus, a cycle, as shown in figure 1.2.2, is formed, 
allowing for the transfer of multiple payloads from LEO to 
GEO for the construction of an Ansible satellite. 
- 
-. --.? -. 
caDixllvw ', 
c 3.-
Fig 1.2.2 Boeing SOTV- Kessler, T.  L. and F y e ,  P., 
(1 999) 
Orbit Trajectories 
Transfer fiom LEO to a final orbit is performed using a 
multiple perigee and apogee burn approach. This approach 
differs substantially fiom the two-impulse (single perigee 
and apogee burns) approach used by chemical propulsion 
stages to perform LEO-to-GEO transfers as shown. The 
multiburn approach uses several successive burns at perigee 
to raise the apogee to 35,864 km, followed by successive 
apogee burns to raise perigee to the same altitude and 
perform the 28" plane change. A total of 4.30 km/s (3.94 
km/s for orbit transfer and 0.36 km/s for the plane change) 
is required. 
1 Orbii 
linitial 
1 Two-Impulse Transfer 1 Multiburn Trajectory 
Fig 1.2.3 Boeing SOTV- Kessler, T. L. and Frye, P 
(1 999) 
Stationkeeping bums 
The stationkeeping burns will be made in the ascending and 
descending nodes of every orbit, which occurs every 12 
hours. To perform these burns, the satellite use Hall'effect 
thrusters located near the center of mass of the spacecraft. 
1.3 SERVICES PROVIDED 
Each of ithe three Ansible satellite is designed to facilitate 
operations in a specific global area, or theater. Specifically, 
each b i b l e  satellite can simultaneously cover an Earth 
area of approximately 1.6 million square miles (or over half 
the continental United States). 
The services provided by the Ansible network would greatly 
enhance ithe capabilities of military units in an area, putting 
new resources in the hands of military commanders. The 
four specific functions of the Ansible network are displayed 
in Figure 1.3.1. The Ansible network is designed to provide 
varying levels of these services, dependent on need (it is 
important to note that the service levels quoted are merely 
examples; of the capabilities of the Ansible network). Given 
that the current example is that of military use in a theater of 
operations, the levels of service quoted are for one Ansible 
satellite, not the entire network. 
i Co mmu nicat i ons Architecture I 
3 
i 
i 
I 
$ 
1 
se 
Fig 1.3.1 Services Provided by the Ansible Network 
Theater ,4rea Personal Status 
The first service allows military commanders to track and 
communicate with many units in the field. The main 
benefits of this feature are the large number of users 
supported and the small size of the individual 
receivedtransmitters on the ground. Fifty thousand 
simultaneous users are supported at a data rate of 4.8kbps 
uplink and downlink. The uplink with the satellite is the 
primary function of this service. Units on the ground 
constantly transmit information about their position, health, 
and perkiaps information regarding the status of pieces of 
equipment in the field. Since this transmission need not be 
constant, Time Division Multiple Access (TDMA) schemes 
may be employed which would essentially increase the 
number of users linearly as the regularity of communication 
5-2342 
decreases. For example, if a military commander wanted to 
be updated every sixty seconds regarding the status of one 
of his units, a single Ansible satellite would be able to 
monitor 3 million units in the theater. The downlink from 
the satellite provides fifty thousand simultaneous channels 
of low quality voice transmissions. Given the estimations 
that most cellular providers use (approximately 10% of the 
total users will be utilizing the service at any time), the 
downlink from the satellite accommodates roughly five 
hundred thousand users. Given that this coverage of five 
hundred thousand is below the 3 million uplink users, the 
voice channels could be used sparingly, for emergency 
purposes. 
The second major advantage of this system over pre- 
existing communications schemes is the small size of the 
ground terminal. As shown later, an Ansible satellite is 
composed of many high gain antennae. This scheme allows 
the ground transmissions to come from low gain (isotropic, 
OdB gain), low power (Effective Isotropic Radiated Power 
of a cellular phone) terminal. These terminals, unlike 
cellular phones, communicate directly with the satellite, 
removing the need for pre-existing transmission towers. 
Since these terminals are low power and low gain, they can 
be very small. For military purposes, they would perhaps 
be integrated into the users uniform, or in the case of a 
piece of equipment being monitored, become a small part 
of the equipment’s circuitry. 
Real-time Tactical Awareness 
Military pilots have at their disposal the most advanced 
sensors available. These sensors are limited by their 
effective ranges, and so limit the capabilities of the aircraft. 
The ability to view a target area or a hostile area before 
entering sensor range would give pilots important 
information regarding what is to come in their mission. 
The second service of the Ansible network, Real-time 
Tactical Awareness, gives pilots access to surveillance data 
collected by satellites, reconnaissance aircraft, or units 
which have otherwise infiltrated enemy airspace. This data 
is uplinked directly to the Ansible network, then sent down 
immediately to pilots in the air. The reconnaissance data 
could be streaming video or 3-D imagery, as the Ansible 
network supports a 2 Mbps downlink to 300 aircraft 
simultaneously as well as a 64 kbps uplink for status, 
telemetry information, and data requests. This service 
essentially eliminates the time between the collection of 
reconnaissance data and its dissemination to units in the 
field. To communicate with aircraft while in flight at a 
high data rate requires a relatively high gain mobile 
antenna. A phased array antenna of this type was developed 
in the mid-90’s for use with military aircraft and the NASA~ 
Advanced Communications Technology Satellite (ACTS). 
The data rate at which this system performed was lower 
than that of the Ansible system (21.6 kbps), but it is feasible 
that a technological derivative of this could be integrated 
into modern vehicles for higher data rates. 
Mobile Reconnaissance 
Some of the real-time tactical information that is 
disseminated by the Ansible network to units in the field 
must be gathered by reconnaissance units, e.g. planes or 
men on the ground. Therefore, an Ansible satellite must 
have the ability to receive relatively low power, moderate 
gain signals at high data rates fi-om users on the ground or in 
the air. An example of the ground terminal for this service 
is the Very Small Aperture Terminal (VSAT) designed for 
use with the ACTS network. This terminal is approximately 
the size of a DirecTV dish, but for the purposes of the 
Ansible network has to be portable and assembled by for 
transmission by an individual or small team. The team 
would assemble the terminal, and uplink high quality video 
or imagery at 24 Mbps to the Ansible network. The Ansible 
network can also downlink information to these mobile ‘ 
terminals at a rate of 128 kbps, such as voice 
communications or data regarding the next target. These 
abilities are available for simultaneous use by 24 users in the 
theater. 
Theater Command Centre 
In order to interact with the existing military 
communications inhstructure, the Ansible network must 
have some link to the ground fiber network. These links 
come in the form of very high data rate, high gain, fixed 
ground stations. A symmetrical uplink and downlink of 300 
Mbps allows any data necessary to be linked to other 
terminals en masse. Also data gathered in the field can be 
relayed to the ground station. These ground stations require 
a 4m antenna and a lOOW transmitter, and so could be 
mounted on a mobile platform for quick deployment to a 
theater of operations, or permanently in place at a military 
base. An Ansible satellite in this configuration has the 
ability to communicate with 10 of these ground stations in a 
theater simultaneously. 
1.4 MISSION & SYSTEM ARCHITECTURF! 
The Ansible network takes advantage of several radically 
new assembly concepts. This section gives an overview of 
the general design philosophy of the Ansible satellites 
Current satellite size limitations are dominated by the launch 
shroud volume available in modem launch vehicles. This 
volume has increased only marginally over the past twenty 
years, and there are few technologies on the horizon which 
promise to increase available launch volume by any 
appreciable amount. Satellite volume restrictions in turn 
place constraints on the maximum size of solar arrays, 
antenna diameters, fuel tanks, and other satellite subsystems, 
thereby limiting overall satellite capability and 
effectiveness. Several methods have been used to overcome 
these limitations, including complicated deployment 
mechanisms and inflatable structures. However, both of 
these methods have fundamental limits to their effectiveness 
and have been known to fail, causing complete mission 
failure. 
5-2343 
Using modular design, the Ansible’s subsystems are broken 
down into smaller components that are launched separately 
and assembled on orbit. Each component has a shared 
universal interface that allows it to connect and interact 
with the main satellite bus. Using this technique, there is 
no longer any set limit on the size of satellites. Satellites 
can grow as large as they have to simply by launching more 
components. Although the universal interface is more 
complicated and adds more mass to the physical 
connections between components, the savings in mass and 
complexity fiom the elimination of deployment 
mechanisms and the ability to assemble very large satellites 
far outweigh these penalties. 
Another advantage of modular construction is that it allows 
for comparatively easy servicing and upgrading. As 
technology advances, new modules can be constructed and 
launched into orbit for incorporation into the Ansible either 
as a replacement for an obsolete module or as an add-on to 
existing hardware. 
Finally, modern satellites have to be strongly reinforced to 
survive strong launch accelerations in a completed form 
and tested to ensure that they will survive the launch. 
Ansible components only have to be built to survive launch 
as ldividual units, not as a complete satellite--- x___^___ 
Ansible Design 
Main Solar Arrays 
ingineering Supprlt Modules 
Communications Array: The communications array 
contains approximately 400 antennas mounted on a co- 
centric hexagonal truss structure. The truss structure 
contains built-in cabling that provides power and data 
transfer both to the antennas and to the assembler robots 
that build the station. There are a total of nine hexagonal 
rings, one main north/south truss and one main eastlwest 
truss, along with smaller connecting trusses for stability. 
Core Systems: The core systems are centrally located 
behind the communications array. Contained here are 
batteries and the propulsion system. The batteries are 
responsible for providing power to the Ansible during 
eclipse periods and to the electric thrusters. The propulsion 
system handles all station-keeping and orbit maintenance 
for the Ansible. 
Main Solar Arrays: The main solar arrays are located at the 
north andl south ends of the Ansible. They are attached to 
the satellite by a zero-tension tether which transfers power 
generatedl by the solar array to the rest of the station. Each 
solar array has its own independent attitude determination 
and conlrol system. (ADACS) which ensures constant, 
accurate pointing at the sun. 
Engineer.ing Support Modules: The engineering support 
modules (ESMs) are located at the east and west ends of the 
Ansible. They house the assembler robots responsible for 
constructing the rest of the station. The ESMs also handle 
all digital processing for the whole Ansible satellite 
(excluding payload). The ESMs are the link between the 
operators on the ground and the Ansible satellite. 
The ESM is a completely independent spacecraft that 
contains id1 of the inf?astructure needed to construct the rest 
of the Ansible. Two ESMs are launched together before 
construction begins. They deploy their robot systems and 
await h-ther payloads from Earth. The ESMs provide 
power and data to the assembler robots. Commands from 
the ground are routed to the robots while visual imagery is 
routed from the robots back to the teleoperators. 
The ESMs contain several major components of the ADAC 
system. They help ensure that the Ansible is pointed 
correctly for proper communications with the Earth. 
Finally, the ESMs serve as an auxiliary power source. In 
the case of failure of one or both of the main solar arrays, 
the ESMs’ solar arrays can be used to provide keep-alive 
power to the rest of the station until repairs can be 
completed. 
Additional modules are launched separately once the ESMs 
are in position. The modules are docked with the ESMs and 
unpackedl, distributed, and assembled by the robots. 
Robotic assembly is best suited for larger modules that have 
simple connections with the rest of the satellite. Those 
systems which are assembled in this way are as follows: the 
main solar arrays, all communication antennas, the 
supporting truss structure, the energy storage system, the 
propulsiain system, and the attitude control system. 
All other satellite subsystems are distributed throughout the 
Ansible. These systems contain components that are either 
too numcxous or too cumbersome to assemble by robots. 
Instead, these components are incorporated into the truss 
structure of the communications array. The PMD system is 
built into the truss in this way, as is the power and data 
cabling that runs throughout the station. Grapple fixtures 
for the rolbots are also built into the truss. Thermal radiators 
are distributed around other satellite components based on 
their heat dissipation needs. 
As mentioned previously, modular construction makes the 
Ansible very easy to service, repair, and upgrade. The 
universal interface allows for modules to be removed 
without impeding the function of the rest of the satellite. 
5-2344 
This means that satellite downtime is virtually eliminated 
even during repair periods. In addition, the Ansible fully 
supports mid-mission refuelling. New propellant tanks for 
both primary propulsion and attitude control can be 
launched and attached at any point in the Ansible's lifetime, 
extending mission duration well past fifteen years. 
The first launch of each satellite is unique in that it contains 
the re-useable orbit transfer vehicle used to cany payloads 
and ESMs from low orbit to geostationary orbit. All 
subsequent launches contain only payload and fuel for the 
OTV. The two ESMs are the first main modules to be 
placed in orbit. Once in orbit, the ESMs deploy their robot 
systems and await further payloads. 
~" Y ~ "".l. _ _  
Final Configuration 1 
I 
I -" 111_11".--2 
Fig 1:4.2Final Configuration of the Ansible Satellite 
This is one possible fmal configuration for the Ansible 
satellite. All four services are fully operational at this 
stage. However, because it uses modular construction, the 
final configuration of the Ansible can be c h g e d  to suit the 
needs of its consumer market. These changes can even be 
implemented part way through satellite construction due to 
the extremely versatile nature of the Ansible's design. The 
Ansible can even grow beyond the configuration shown by 
launching additional modules and attaching them to the 
existing structure. 
1.5 TMELINE 
The Ansible project makes use of a number of technologies 
which are currently under development and so the earliest 
possible launch date is governed by the date by which all of 
these will be ready. This date is controlled by the power- 
sail technology, which is expected to be ready in 2007. 
Once construction has begun, the rate of launches of the 
components for each satellite is limited by the transfer rate 
of the S O W .  The SOTV is highly efficient, allowing 
larger payloads to be transferred into GEO than a 
conventional chemical thruster, but it takes one month to 
transfer the payload from LEO to GEO and another month 
to return. Taking into account that three satellites would be 
built simultaneously, this translates to a maximum launch 
rate of three every two months. 
The construction time budget for the robot shows that 
approx. 20 days of construction time are required per 
launch, which is equivalent to three sets of construction 
every two months, allowing a single robotic control team to 
oversee the entire operation. 
Figure 1.5.1 highlights key milestones during the assembly 
of the satellites vs. launch number. As can be seen, after the 
first launch all the construction infrastructure is in place; 
after the third, operation can begin; and after ten launches, 
the satellite is completed. This translates to 30 Delta-IV- 
Heavy launches and a total time of 20 months to assemble 
thl 
I ;  
x_IIIIIx^xI_- ----- ~ 
T-1.5. 1 Construction ofthe satellites with launch nun; ier 
The earliest date of operation is set by the time at which all 
of the subsystems on the main satellite are operational. 
After six months the telecom, digital systems, ADACS and 
propulsion have been completed and a sufficient number of 
power, payload and structure modules have been launched 
to allow each of the four services to be provided to a limited 
number of users. So, for a relatively small investment and 
construction time, all the infrastructure to assemble, service 
and upgrade the entire network is in place and operation can 
commence. At this point the satellites begin to provide a 
return on the investment, making the network more 
financially viable than a conventional one, which must be 
completely finished before any return is seen. 
ROBOTICS 
Responsibilities and challenges 
Robotics system is responsible for the assembly and 
maintenance of the Ansible satellites. The design of a 
system capable of carrying out these tasks involves 
examining the following technical issues; 
a. Transportation around the Ansible structure 
b. Capture/auto-docking of delivery parts 
c. Connecting parts i.e. trusses, antennae, PMD 
5-2345 
modules etc. 
d. Deployment of antennaelsolar sails 
e. Controlltask scheduling 
Transportation around the Ansible structure 
Considering the Ansible’s length of 144m from end to end, 
a stationary robot would be too massive and extremely 
limited in it’s capabilities, therefore it was decided the 
robot would be mobile. 
The following methods of transportation and their 
corresponding technical issues were examined: 
Free floating 
An autonomous robot with it’s own propulsion and 
navigation system. One of the advantages of this type of 
robot is that it would be capable of accessing the parts that 
any fixed based robots could not reach. It would also make 
the station keeping of the Ansible simpler, as the robot 
would not be moving along the structure, changing 
moments of inertia. The biggest issues associated with this 
configbation include; 
Fueling the robot - Given that one tank containing all the 
fuel the robot might need in it’s 15 year lifetime would be 
ridiculously large, the robot would have to be refuelable. 
Power - The robot would also require it’s own power 
supply. Given the required lifetime of the robot, solar 
power would be the only option. The pointing of the solar 
panels would then become an issue. If the power system 
should fail for any reason, the robot might drift and be lost, 
thus putting the whole Ansible satellite at risk. 
Control and communications - If the robot is moving 
around the Ansible structure, it’s likely that a constant 
communications link with the ground would be difficult to 
maintain. 
Station keeping and docking - An extremely accurate and 
autonomous ADACS system would be required, allowing 
the robot to manoeuvre into a docking position in order to 
grapple to the Ansible whilst canying out it’s tasks, if the 
docking or ADACS systems were to fail, it would be 
rendered useless, again jeopardizing the mission. 
This configuration was considered to be too risky, a 
malfunction of any of the robot’s subsystems, could result 
in loosing it altogether, or immobilize it. 
Free floating with “mother unit ’’ 
An autonomous “mother unit” to act as a charger, 
communications relay, keeping constant contact with the 
ground and the Ansible. This addresses the power and 
communications/control issues highlighted above. Issues 
outstanding include: 
Fueling the robot - Whilst the “mother unit” can act as a 
fuel and power station, allowing the robot to carry a much 
smaller fuel tank and therefore be capable of accessing 
smaller spaces. The “mother unit” itself would still need to 
be refuelable. 
Station keeping and docking - An extremely accurate and 
autonomous ADACS system would still be required on the 
robot, fa.ilure of that system would render the robot useless. 
These outstanding issues still prove too risky for the 
Ansible, this configuration was thus discarded. 
Truss bmed 
The truss acts as a track on which the robot moves. This 
allows the robot to utilize the Ansible’s power and 
communications. Issues associated with this configuration 
include: 
Mass - ’Whilst the track based robot has no station keeping 
issues, the truss on which the robot moves would have to be 
strong enough to withstand strong forces fiom the robots 
motion, thus this configuration would not be mass efficient. 
Accessibility - The placement of the track truss around the 
structure would limit the robot’s versatility. There may be 
large parts of the structure that would be inaccessible to the 
robot. 
Ansible’k ADACS - The Ansible would have to deal with 
robots moving along the structure, which would pose 
difficulties for the ADACS system. 
This configuration was discarded. Whilst it is much more 
reliable than the configurations above, it’s mass inefficiency 
and it’s limited motion were too limited for the needs of this 
project. 
EmbeddedinSOTV 
The main issue with this configuration would be that the 
SoTV would not be able to begin it’s journey down to LEO 
to pick up the next delivery until construction of the 
previous part had been completed. Considering that the 
SOTV would take two months to make the return journey, it 
would seriously extend the construction time of the Ansible 
and so was discarded. 
Walking robot 
The chosen configuration was a walking robot, The robot 
always keeps one limb attached to the Ansible strhcture via 
a Power Data Grapple Fixture (PDGF) and uses the other 
limb to move forward. This is not the most mass efficient 
configuration and the robot’s movements would be slow, 
however it is very reliable and offers the robot more 
versatility than the truss based robot, whilst still keeping the 
benefit of the Ansible’s power supply and communications 
capabilities. If one of the robot’s grapple fixtures were to 
fail, the robot would then still be attached to the Ansible and 
thus retrievable, the robot would also receive all it’s power 
and commands through the PDGFs thus making the whole 
process less susceptible to failure. If there is a malfunction 
with one of the PDGFs on the Ansible, the robot could then 
side step it and continue with it’s tasks. The walking robot 
also takes up much less volume, allowing compact stowage. 
This configuration also offers operational simplicity in 
comparison to the other configurations, which is highly 
valued in such a large complicated structure. 
5-2346 
Foothold 
Grapple 
iald M 
ControI Issues 
Several methods of control were examined; 
Complete autonomy, the complicated nature of some of the 
tasks ruled this possibility out immediately. 
Complete telerobotic control would involve a controller in 
constant control of the robot's every motion 
Partial autonomy would involve a control on the ground 
during complicated manoeuvres, but only initiating highly 
repetitive tasks. 
Partial Autonomy was considered to be the most 
appropriate method of control given the Ansible's size and 
the nature of some of the tasks, it would be impractical for 
someone to be in constant control during highly repetitive 
manoeuvres. In this case, the controller would input high 
level commands e.g. commanding the robot to walk fiom 
point A to point B. The Ansible's on-board computer would 
then directly control the robot from its memory under the 
supervision of ground control. In the event of a 
communications breakdown mid-manoeuvre, the on-board 
computer would be capable of issuing a command to the 
robot to complete it's manoeuvre and go into a safe mode. 
Storing and executing these commands will place a large 
burden on digital systems. 
Video cameras will be mounted on the robot's end effectors 
so the controller can observe actions. The video images 
will be time buffered on the ground to give the controller an 
uninterrupted streaming image, which is essential for 
control during delicate manoeuvres. 
_^._ ""1"1" "- ~ l_l" -111 
Fig 2.1.2 
Walking Robot, 
modified >om 
Muller, Ronald 
M (2000) 
I- 
Tasks to perfom 
1. Walking 
2. 
3. Capturing/de-capturing object 
4. Connecting trusses 
5. 
6. 
Walking whilst carrying an object 
Connection and deployment of antennae 
Connection and deployment of solar sails. 
Given the tasks the robot is required to perform, it was 
decided the robot would have 3 limbs, each with a grapple 
fixture on the end. This would allow the robot to walk whilst 
carrying an object. The robot's grapple would be a universal 
connection allowing the robot to walk, carry objects and 
even capture new modules using the same fixture. 
The Ansible's robot is adapted from a scaled version of the 
Ranger telerobotics flight experiment and a design for a 
robot to assemble the Next Generation Telescope (NGST). 
The robots will have a step length of at least 8 meters, 
allowing them to cross from one of the Ansible's hexagonal 
rings to another. To accommodate the step length, each 
robot limb will be 5 meters long. 
Construction time 
Time for capturing packages and connecting modules are 
adapted fiom docking procedures. 
I~;&alytru; :;4 1 
Ca ture acka es 
Transnort nieces 46.3 
Deploy trusses 2.9 
Attach pieces 43.2 I 
I Connect modules 8.1 I 
Cool down 42.5 
Total 212.7 I 
Table 2.1.1 (numbers adapted9om Ranger and 
Hohwiesner, Bill and Pairot, Jean-Michel) 
Each ESM module launched will contain two stowed robots, 
giving each satellite four robots. The dimensions are as 
follows: 
Degrees of freedom 10 
Keep alive power 188W 
Max nower 625W 
Average power 380W 
Speed 9m/hr 
Table 2.1.2 
The ESM must also be able to supply the power and 
communications to the robots, so they may deploy 
5-2347 
themselves from their stowed configuration and begin 
construction. 
2.2 COMMUNICATIONS PAYLOAD 
The communications payload of an Ansible satellite 
provides the four services offered by the Ansible network. 
The payload of an Ansible satellite is independent of the 
other systems on the satellite, save the power requirement. 
This system is designed to be extraordinarily versatile; to 
offer varying levels of each of the services, based on need. 
In order to accomplish this, the payload was designed to use 
many of the same type of antennae, instead of singular 
antennae designed for each specific purpose. 
To establish a direct link between low gain, low power 
receiver/transmitters on the ground and a saiellite in 
geostationary orbit, high gain, high power receivers and 
transmitters must be used on-orbit. Having many high gain 
antennae in orbit is the first important technological 
accomplishment of the Ansible communications payload. 
The second is the ability to process and route all data that 
passes through the communications payload. Purported 
increases in computing capability, and consequent 
decreases in power and weight requirements idlow the 
payload to process all incoming signals, reroute the new 
signals, and allocate the number of antennae required to 
accomplish these tasks most efficiently. Clearly., the high 
gain antennae and the on-board processors, of the 
communications payload are the most vital components of 
this system. 
Spot Beams 
Traditional communications satellite design takes 
advantage of moderately high gain broadcast antennae. 
These antennae transmit a specific bandwidth of RF to a 
region, such as the Northeastern US, or a European country. 
As is illustrated in Figure 2.2.1, the entire region of 
broadcast is not usually populated with ground terminals. 
The result is wasted RF energy striking the earth, and a 
relatively inefficient transmission method. 
Broadcast Spot i 
Antenna vs . Beams, 1 
With spot-beam broadcast techniques, very small beam 
widths me used to cover relatively little ground surface area, 
such as a metropolitan area. This small beam width results 
in a very high gain. In the case of broadcast antennae, the 
gain is not as high as with spot beams, and so a larger, high 
gain groilnd terminal is needed. A perfect example of the 
ground terminal of a broadcast antenna system is a DirecTV 
home dish. With spot beams, the gain of the space antenna 
is much higher, and so the ground terminal may be much 
smaller; this allows us to use wristwatch size, OdB gain 
ground ttmninals. 
Furthermore, spot beams allow for the re-use of valuable 
bandwidh In broadcast antenna schemes, an entire region 
receives all of the RF from the used bandwidth, even though 
a particular user may only be interested in a small fraction 
of the information contained in that bandwidth. 
Consequently, the bandwidth requirements are increased 
linearly with the amount of data required to be transmitted. 
Through spot beams, a region is covered by many beams, 
which, if separated by enough beam width to avoid 
interference, can use over and again the same small chunks 
of bandwidth. The result is a much smaller overall 
bandwidth requirement. 
Finally, spot beams are compatible with a technique called 
beam hopping, which means that a particular beam only 
transmits to an area on the ground for a fraction of its total 
transmisision time, then moves to another area. Essentially, 
for sacrificing the amount of data that one ground area 
receives, one antenna can cover much more landmass. This 
provides a significant advantage over broadcast antenna 
schemes, because beams can be allocated to maintain 
changing levels of user needs, and track highly mobile units. 
This process is known as dynamic coverage allocation 
Antenna,e 
The major performance requirement of the uplink and 
downlink antenna of an Ansible satellite is the generation of 
steerable: spot beams, capable of high data rate links. The 
hardware and multiple access schemes were chosen 
specifically to accomplish this goal. In addition, the chosen 
antenna types should be lightweight, capable of stowage for 
launch, and standardized for robotic, on-orbit assembly. 
To solve the problem of lightweight antenna construction, 
the figure of merit used for each of the uplink and downlink 
antennae is 1.5 kg/mz, which is based on a European Space 
Agency near term projection of 1 kg/m2. As for stowage 
and on-orbit construction, each antenna is designed to 
collapse to a small volume, then be unfixledunfolded by the 
robotic construction units. Each antenna has a standardized 
interface that plugs into the power management and data 
lines on the main trusses of an Ansible satellite. Essentially, 
the robot’s only tasks in deploying an antenna are plug it 
into the truss, and unfold it. Standardized interfaces also 
allow fix easy upgrade and replacement of obsolete or 
damaged antennae. 
5-2348 
Downlink 
The downlink or transmitting beams are hoppable, high- 
gain spot beams. These small beam widths can be 
generated in two ways. First, a large parabolic dish could 
be used, but to generate this beam width, the dish would 
have to be 1Om or greater. This dish would also have to be 
mechanically steered, and so the mass and inertial problems 
caused by a steerable parabolic reflector of this size caused 
the elimination of this option. 
The other technique for generating a small beam width uses 
a parabolic reflector system, fed by an array. This array 
could be a phased array, or simply an array of horn 
antennae, as in the NASA ACTS satellite. The ACTS 
antenna generated a beam width of 0.3 degrees, and the 
Ansible downlink antenna generates a beam width of 0.1 
degrees. This difference of 0.2 degrees from an early-90’s 
technology should not be hard to accomplish. The 
performance of a double reflector system is comparable to 
the performance of a single reflector system, and so a single 
reflector system was chosen to limit mass. The feed array 
and parabolic reflector system is shown. 
Downlink Antenna 
All antennae wll be constructed 
from proposed near term lightweight 
Multcelement feed array 11 
Fig 2.2.2 Feed array and reflector 
The feed array system was also chosen because the beams 
are electronically steerable. The dynamic coverage 
allocation techniques requires the Time Division Multiple 
Access (TDh4A) scheme, also supported by this type of 
antenna. 
In addition, Traveling Wave Tube Amplifiers (TWTA’s) 
were chosen over Solid State Power Amplifier’s (SSPA’s) 
for three reasons; higher efficiency, greater overall power 
output, and increased reliability. 
The frequency was chosen to be Ka-band for two reasons. 
First, more bandwidth is currently available there than 
other, lower frequencies. Second, Ka-band has been the 
preferred band of military projects for the last 15 years. 
Uplink 
The uplink or receiving antennae also operate in Ka-band, 
for the same reasons as the downlink, and for symmetry. 
The uplink antennae also need to generate high gains; so 
again, the choice of antenna type must be made. In this 
case, interference between the multitudes of signals being 
received becomes the major driver, over mass. Thus, 
parabolic reflectors with receiving arrays and phased array 
antennae are ruled out, due to their propensity for 
performance to suffer as the number of distinct signals 
grow. Therefore, many steerable parabolas, each dedicated 
to a certain ground area for a considerable length of time 
(not hopping) were chosen. 
Two different sizes of parabolic reflectors were chosen, 
because of the enormous difference between the gains of the 
Theater Area Personal Status terminals (<O dB) and the 
Theater Command Centre Terminals (>50 dB). Mass 
efficiency calls for the use of the smallest parabolic antenna 
possible for the link and so 7m and lm antennae are 
included in the Ansible system. These antennae are shown. 
! Uplink Antenna- 7m Uplink antenna- l m  
I 
i 
i 
z 
i 
i 
d 2.2.4 
The multiple access scheme was also chosen to alleviate the 
interference problems associated with the uplink of many 
signals. Code Division Multiple Access (CDMA) was 
chosen over Frequency Division Multiple Access (FDMA) 
because FDMA has interference problems with large 
numbers of users. A CDMA/TDMA hybrid was chosen to 
increase the number of users on the ground by allowing the 
links to be non-simultaneous. 
&-Board Processors 
The payload is autonomous due in part to the 
standardization of its components, but mostly because of the 
many functions of the on-board processing units. 
All data that is uplinked to the antennae of an Ansible 
satellite is amplified, and then sent to the on-board 
processors. Similarly, all data that is downlinked by the 
antennae of an Ansible satellite comes from the on-board 
processors. In between, the on-board processors perform a 
multitude of functions related to the data. Upon entering the 
processors fiom the Low Noise Amplifiers, the signals are 
demodulated, so that the coded signal is now in the form of 
useful data. The processors then analyze the data, 
determining the source and type of data. Based upon this 
information, the processors resolve the eventual destination 
of the data. The processors then remodulate the data for 
transmission to its proper destination. Then, the processor 
must route the data to the correct lWTA/Feed Array pair, 
and then electronically steer the beam, with the correct 
timing, to the final Earth destination of the data. 
5-2349 
As an example of the function of the on-board processors, 
let us consider the circumstance of a large movement of 
troops and equipment, to be monitored by an Ansible 
satellite. First, a Theater Command Centre must uplink the 
probable locations of the units. Upon receiving and 
analyzing this signal, the on-board processors mechanically 
point the correct number of uplink dishes to the proper 
ground location. The Ansible satellite will then start 
receiving signals from the units in the theater. Many 
signals will be received here, but after they are 
demodulated, they will be collated and remodulated as one 
or a few large signals, and sent back to the Theater 
Command Centre for use by the command hierarchy. The 
on-board processors are the integral part of the dynamic 
coverage allocation scheme, and perhaps the most 
important part of the communications payload itself. 
Payload Conj?guration 
The final configuration of the communications payload is 
shown Figure 2.2.5. As can be seen the most massive 
components of the payload, the 7m parabolic dishes, are 
clustered towards the centre of the satellite, to alleviate 
some of the strain on the Pointing System. Table 2.2.1 
shows that the major power driver of the system is the input 
power for the TWTA's. The payload will be assembled to 
this configuration in various stages, but will be operative by 
the third launch in a limited capacity. 
~ -__I- 
t 
-- 
Fig 2.2.5 Final Con$guration of the Payload 
2.3 STRUCTURE 
Design Considerations 
The Ansible satellites place unusual demands upon the 
structure of the spacecraft. The forces and torques are 
extremely high, so a high rigidity is required to meet the fine 
pointing requirements set by the payload. Similarly, the 
thermal distortion must be kept to a minimum. 
The mass and stowed volume of the structure must be kept 
to a minimum to take full advantage of the flat packing 
employed during launch. 
The Ansible satellites have a very large mass (-SO,OOOkg), 
which is distributed across a great area. As much of the 
mass as possible is concentrated as close to the centre of 
mass, but the payload must be distributed over a large area. 
The strut:ture is launched as needed to support the other 
systems. It must be designed to grow as the satellite does 
and be fully functional throughout. In keeping with the 
philosophy of the Ansible satellites, the structure must be 
both expandable and upgradable, which would allow the 
mission to be extended or modified. 
Overdl A!rchitecture 
ODeployaible trusses that pack into a relatively small volume 
are currently being developed. The drawback to deployable 
trusses is; the mass of their deployment mechanisms and 
canister. A truss assembled on the ground, however, has a 
very large launch volume. Capitalizing on the robots, we 
used a deployable truss similar to the one used in the Shuttle 
Radar Topography Mission but without the deployment 
mechanism, relying upon the robots to deploy it. 
The overall configuration of the structure is shown in fig 
2.3.2. A hexagonal layout was chosen as it allows the 
maximum number of payload modules to be supported by 
the least amount of structure. In all, 2,500m of deployed 
lightweight truss is required to form this structure. This has 
a total stowed volume of 250m3 and a total mass of 
20,OOOkg (including integrated systems). 
Table 2.2.1 Communications Payload Mass/Power Budget 
5-2350 
xx-  _^- ~ 
Diagram of Truss Layout 
9 rings and 4 booms 
I 4 
4 I 
144 m 
Fig 2.3.2 Truss structure layout 
Several of the distributed systems are integrated into this 
truss structure. The PDGF’s for the robots are located 
along the truss, spaced every 8m, with one on each of three 
faces, giving a total of 1250 grapple points. A vast amount 
of cabling for power and data runs through the structure. 
The thermal system and power management units are also 
integrated into the truss. 
The structure for each satellite is launched in segments on 
launches 2-10. No structure for the main Ansible satellite is 
launched with the ESMs as there is insufficient volume in 
the payload fairing. After 10 launches, the structure is 
complete. 
Equipment 
2.5km of deployed truss, with a mass of 20,OOOkg is 
required. It is the rigid strength of these trusses, rather than 
the configuration which gives the strength to the main 
structure. 
3,000kg of data and power cables must be integrated within 
this structure before launch. 
1250 PDGF’s, each having a mass of -1kg. 
ADACS has very precise pointing requirements. A small 
bend throughout the material due to changes in temperature 
could result in a significant change in the shape of the truss. 
With standard materials, the difference of 2K could be too 
much for ADACS. To maintain the pointing accuracy 
ADACS requires, the truss will have to be made ffom a 
near-zero coefficient of thermal exDansion material. 
Fig 2.3.3 Deployed truss structure with cable (AEC-Able) 
Fig 2.3.4 Stowed truss (AEC-Able) 
Outstanding issues 
As with the ISS, the Ansible satellites are large enough for 
high potential differences to be set up which lead to sparks 
that can damage equipment. To prevent this, the ISS uses 
ion beams to equalise the potential between surfaces. Either 
a similar system, or very good electrical contacts between 
all components would be required for the Ansible satellites, 
but this was not fully investigated. 
2.4 POWER 
The Ansible satellites require more power than any other 
communications satellite in orbit today. This section 
provides details on the power subsystem and describes the 
technologies utilized by the Ansible network in meeting 
these large power requirements. 
Standard operation of the Ansible requires approximately 80 
kW of power. However, the power system must be capable 
of delivering more power than this due to inefficiencies in 
the power bus. The power system must also be able to 
supply stored energy to the Ansible during periods of 
eclipse and to the electric thrusters. Both of these tasks are 
complicated by the large size of the Ansible satellite. Large 
amounts of wiring translates into excessive energy loss in 
the form of radiated heat. The power system must also be 
able to supply power to all subsystems at many different 
voltages and current levels. Modular construction must be 
used in the design to facilitate construction by the robots and 
easy servicing and repair. Finally, the power system must 
be designed to endure at least fifteen years of continuous 
usage. 
Alternatives for the power generation system include 
photovoltaics and nuclear power. Nuclear power, although 
useful in certain applications, carries with it unwanted 
political consequences when applied to earth-orbiting 
spacecraft. Photovoltaics are much more well-established 
and reliable as a means of power generation. Planar solar 
arrays and concentrator arrays are cheaper and more 
efficient than other forms of photovoltaics, but they do not 
have the high specific power density required by the 
Ansible’s large energy needs. Inflatable solar arrays are 
more powerful, but they also have complicated deployment 
and pressure maintenance mechanisms that drive up mass 
5-2351 
and cost. Thin film solar arrays, while less efficient than 
other photovoltaics, have an extremely high speciik power 
density and are best suited to the Ansible’s needs. 
The Ansible uses an experimental solar array technology 
being developed by the Air Force Research Laboratory 
known as Powersail. Powersail is an advanced thin film 
array that is attached to the Ansible by a zero-tension tether. 
The Powersail has its own attitude control system that 
maintains proper orientation of the solar array towards the 
sun. The solar arrays are divided into two segments 
positioned at the north and south ends of the 
communications array. The solar arrays transfer power to 
the Ansible through their connecting tethers. The Ansible 
design also supports a direct structural coupling of the 
Powersails to the northlsouth truss. 
Batteries are the primary form of power storage on virtually 
all modem spacecraft. Silver-zinc and nickel-hydride 
batteries, while inexpensive, do not deliver adequate power 
densities. Nickel-cadmium batteries can be reconditioned, 
making them well suited for a long-term mission, but they 
still are not powerful enough for the Ansible’s needs. 
Lithium batteries have the highest energy densities of the 
battery alternatives examined and can also be reconditioned 
to extend efficient lifetime. 
The Ansible uses advanced lithium polymer batteries for its 
energy storage needs. Lithium polymer cells deliver 3.6 
volts each and are bundled in groups of 55 to farm 198V 
battery packs. Lithium polymer batteries have extremely 
high charge and discharge efficiencies. They are capable of 
limited reconditioning, making them well-suited for the 
Ansible’s fifteen year lifetime. The batteries on the Ansible 
have a very deep depth of discharge due to the short and 
infrequent nature of eclipses in geostationary orbit, 
The Ansible power system uses a 200V main bus. This bus 
routes power to all of the subsystems and converts its 
voltage and current according to the needs of the 
subsystem. The power management and distribution 
system is built into the truss structure of the Ansible’s 
communication array, as is the 2.5km of cabling used to 
transfer power across the station. 
I Power Budget 
Table 2.4. I Power Budget for the Ansible during all 
mission phases. 
Many technical issues must be resolved before the Ansible’s 
power system can be made feasible. First, the PowerSails 
are still in the developmental stage and will not be flight- 
tested until after 2004. The performance figures quoted in 
this presentation are based on AFRL predictions and could 
change ‘based on actual flight tests of the Powersail. 
PowerSail was originally intended to be coupled with a 
much smaller satellite. The viability of formation flying 
Powersail with a satellite as large as the Ansible would have 
to be examined further. Structural coupling creates its own 
problems in the form of large torques and moments that 
must be handled by the ADAC system. Lithium polymer 
batteries are also still in the development stage and would 
have to be tested further before being installed in the 
Ansible. Finally, a universal connection for power 
transmission has never been attempted and would have to be 
designed very carefully. 
2.5 PROPULSION 
Maintaining the orbit of a 100 tonne satellite is not a simple 
task. Tlhis section provides information on the Ansible’s 
main praipulsion system and describes the technologies used 
to keep the satellite in its proper orbit. 
The services offered by the Ansible depend greatly on the 
satellite’s ability to remain fixed in one location over the 
Earth. Ground antennas must be pointed at the Ansible very 
accuratelly to ensure high data transfer rates. For this reason, 
the Ansible’s propulsion system must be capable of 
maintaining a very precise orbit. In addition, the Ansible 
contains hundreds of highly sensitive exposed electrical 
components. These components must be protected fiom 
exhaust damage and contamination fiom the propulsion 
system. They must also not be subjected to abrupt 
manoeuvres and large accelerations. Finally, the propulsion 
system must support mid-mission refuelling to extend 
mission life if necessary. 
Several fuel alternatives are available for satellite 
stationkeeping. Monopropellant systems are simple, cheap, 
and are well-suited to long-term missions. However, they 
have a relatively low specific impulse and would require 
huge amounts of propellant for a fifteen year mission. 
Bipropelllant systems are more efficient, but their fuel is 
difficult to store for long periods of time and they have the 
added complexity and cost of two tank systems. Solid fuel 
systems offer even higher performance, but they cannot be 
controlled once ignited and are better used as kick motors. 
Electric propulsion systems, while providing very little 
thrust, have extremely high efficiencies and are very capable 
when used in the orbit maintenance role. 
Electric propulsion systems can be broken down further into 
electrothermal, electrostatic, and electromagnetic thrusters. 
Electrothermal thrusters are usually smaller, deliver less 
thrust, and offer a smaller specific impulse than other 
systems. Electromagnetic systems are much more powerful, 
5-2352 
but they require very large amounts of electrical power 
before they become highly efficient. Electrostatic thrusters 
are in the middle in terms of performance and efficiency. A 
single electrostatic thruster is insuEcient, but a cluster of 
such thrusters provides the ideal solution for the Ansible’s 
needs. 
The Ansible’s propulsion system features a cluster of ten 
Hall-effect electrostatic thrusters with four additional 
thrusters for redundancy. Each thruster draws a maximum 
of 5 kW of power during operation. No more than four 
thrusters fire at any one time meaning the propulsion 
system requires 20 kW of power for its burns. The 
Ansible’s thrusters are centrally mounted on the very back 
of the satellite as part of the core systems. This location 
prevents interference with antenna performance and offers 
easy access for future refuelling missions. In addition, the 
thrusters are tilted backwards at a 20’ angle to ensure that 
all exhaust is directed away from the sensitive components 
of the Ansible. Standard operation calls for four thrusters 
pointed in the north and south directions and one thruster 
pointed in the east and west directions. There are four 
additional thrusters for redundancy, one in each direction. 
There are still some technical issues facing the Ansible’s 
propulsion system. The electrostatic thrusters draw very 
large amounts of power and thus require up to 4 kW of heat 
dissipation. This must be accounted for by the station’s 
thermal system. Also, the Ansible is without an operational 
power system until after the third launch. The satellite will 
almost certainly drift slightly from its orbit before that time. 
Several initial burns will be necessary to correct this drift 
and place the Ansible back in its proper orbit. Finally, 
electric thrusters corrode over .time, decreasing thruster 
performance. Additional thrusters are available for 
redundancy, but it is possible that other thrusters will have 
to be launched to replace those that fail during the 
Ansible’s lifetime. 
2.6 ATTITUDE DETERMINATION ANDCONTROL 
SYSTEM (ADACS) 
This subsystem is concerned with the attitude determination 
and control for the main satellite and ESMs, but does not 
include that required for the power-sails (their own ADACS 
systems are incorporated into each sail which is launched as 
a complete unit - see power subsystem), does not provide 
any station-keeping (see propulsion subsystem) and is not 
concerned with the SOW, the design for which is not 
covered in this paper (see Kessler, T. L. and Frye, P., 
( 1999)). 
Design Considerations 
The ADACS system for the Ansible satellites must face 
similar challenges to those of the space stations. It must be 
able to cope with the changing mass and contiguration of 
satellite during assembly, so must be sized to cope with the 
worst case during construction, and last for 15 years in the 
final configuration. The disturbance torques from the robot 
as it moves or imposes a torque on parts being deployed 
range across many sizes and positions around the craft, 
similar to astronauts moving around a space station. Also 
the disturbance torques experienced by the Ansible satellites 
are only comparable in size to those experienced by a 
structure as large as a space station. 
Given the size of the Ansible satellites and the very long 
mission life, the ADACS system required cannot be 
launched all at once, so it must grow along with the satellite. 
This poses the problem that the ADACS system must be 
functional at all times throughout construction and always 
be able to cope with the present configuration. This 
suggests that it must be one of the earliest systems to be 
launched. 
The spot beams used by the payload place a requirement on 
the deadband of the ADACS system of only 0.05 deg. This 
creates a need for very high accuracy determination 
equipment which would not normally be used on a 
communications satellite. 
The key disturbances experienced by the Ansible satellites 
are; intemal torques during construction, intemal torques 
from the steerable antennae, misbalance of solar radiation 
pressure, main thruster misalignment and thermal distortion 
of structure. Of these, counteracting the internal torques 
consume the most propellant, but the thermal distortion 
poses the greatest problem to the accuracy of the deadband. 
Architecture 
The attitude determination and control systems can be either 
centralized onboard the ESM (as the telecom systems) or 
distributed about the main structure (as the power system) 
and the factors considered in the trade are the same for both. 
The advantage of centalizing the systems is that it removes 
any duplication of function with the ESMs, which both 
require their own complete ADACS systems for the time 
before construction begins. The ADACS onboard the ESMs 
will also be required during the early construction, before 
any additional systems could be operational. The main 
disadvantage of centralization is that it imposes large mass 
and volume requirements on the ESMs, which are limited to 
the size of one payload fairing. Also during construction of 
the central truss and any ESM upgrade, such a centralized 
ADACS system would be compromised, which is 
unacceptable. 
A distributed system would remove any reliance on the 
ESMs, but require more duplication of function, which is 
inefficient. 
The chosen architecture was a hybrid, consisting of a group 
of centralized ADACS systems which are distributed around 
the structure, including the ESMs. This also allows the 
system to grow, reducing the mass requirements on the 
ESMs. 
5-2353 
The ADACS components must be launched very early 
during the construction to stabilise the main structure and 
allow it to become operational as soon as possible. One 
third is launched on each of the ESMs in launch 1. This 
provides the ADACS for both of these craft before any of 
the additional components for construction are delivered. It 
also provides ADACS while the first components are being 
assembled. However, as the two ESMs and the connecting 
truss form a linear structure, there is virtually no moment 
arm in the third axis, so the second launch contains all the 
ADACS required for the rest of the structure. This is put in 
place before the vertical truss is built. So, after 4 months 
the ADACS system is complete. 
A D A C S  Block Diagram 
n .  
Fig 2.6. I - Block diagram of the ADACS system, ,showing 
location of the centralised systems and the controlled axes. 
Equipment 
Determination 
The high accuracy required for the spot beams (0.05 deg) 
means that a combination of gyroscopes ( 1 O O H z )  and star 
trackers (30 arc sec) are required for the attitude 
determination. The gyroscopes provide the real-time 
determination and their drift is corrected by the star 
trackers. This combination is not used in typical 
communication satellites because of the high cost, but given 
the unusually high cost of the Ansible project this is 
acceptable. The back-up system uses sun sensors, which 
are have low cost, mass and power requirements. In 
addition, the payload is able to lock on to the IRF signal 
from the ground to provide an in-situ reference point which 
compensates for any distortion in the structure (either 
thermal or mechanical). 
Control 
The very large moment of inertia of the Ansible satellites 
means that thrusters must be used for the control system. 
0.9N monopropellant thrusters were chosen because of they 
offer a combination of the low minimum impulse bit 
required for high accuracy (lE-3Ns), long shelf-life, high 
pulse lifetime required for such a long mission (100,000 
pulses) and the high reliability of the thrusters. Even 
though hydrazine is a low performance propellant, it was 
selected as the propellant because it is the most widely used 
and tested and there are material compatibility issues which 
are associated with the alternatives. 
The propellant tank, feed system and hydrazine are the 
largest contributors to the mass of the ADACS system. A 
total of 11600kg of propellant and 340kg of equipment is 
required. This large mass reflects the size of the spacecraft, 
long mission life and unusual disturbance torques and is the 
reason why the ADACS system must be launched in two 
segments. 
Outstandring Technical Issues 
The ADACS system is impaired during the construction of 
both the main trusses (North-South and East-West) as the 
ADACS modules are not yet in place, and during any 
upgrade of either the ESMs or the ADACS modules. This is 
a problem because the deployment of such a large amount of 
structure consumes a significant portion of the construction 
time for those two stages. During this time the ADACS 
system is partially functional, but it must be demonstrated 
that this limited functionality can maintain the attitude of the 
spacecraft within tolerable limits (the telecom link with the 
ground must be maintained during construction to operate 
the robots). 
The control algorithms required for the ADACS system and 
the models used to accurately simulate the disturbances will 
be unusually complicated as the moments of inertia, 
moment arms and disturbances change during construction 
and the effect of the robots provide a unique problem. 
Perhaps the greatest problem facing the fine pointing 
requirement set by the payload is not the accuracy of the 
actuators or determination systems, but the effects of 
thermal distortion of the structure. The structure must 
provide a stable platform for the high-gain antennae and any 
deformations must be well known in order to properly 
compensate when pointing the spot beams. There are two 
methods employed to deal with this problem. Firstly the 
payload uses the uplink RF signal as a reference point. This 
allows the structure to deform slightly, such that the 
orientation of the truss supporting the uplink/downlink 
antennae in question is different to that of the truss 
supporting the determination equipment. This distortion can 
be cancelled out by the additional reference point, 
determined from an uplink antenna which is much nearer to 
the downlink antenna being used. Secondly, thermal 
distortioi~s can be virtually eliminated by the use of ‘zero 
coefficient of thermal expansion’ materials. These are still 
being developed, but should had been tested by the 2007 
deadline. 
2.7 TELECOM 
This subsystem is concerned with the data link for the 
Ansible satellites, providing commands for the satellite, 
telemetry and all the data requirements for the robot control. 
It is not part of the payload subsystem, which is responsible 
for the data traflic which uses the Ansible network. 
5-2354 
Design Considerations 
The Telecom subsystem provides the data link to the 
ground which is vital for the satellite’s operation. This 
means it must be operational fiom the first launch. This 
requires it to be located onboard the ESMs, which restricts 
the volume, mass and power requirements of the Telecom 
system. 
The data rate required for the telemetry and commands for 
the Ansible satellites is much higher than for a typical 
telecom satellite. This is because the Ansible satellites are 
much larger, require many more sensors and perform a 
number of unusual tasks. 
The robot data link dwarfs the data requirements for the 
Ansible satellite itself. For the downlink, multiple channel 
video is transmitted, requiring lOMbps per robot. The 
commands for each robot require 128kbps for the uplink (2 
robots per ESM). Note, these data rates were taken fiom 
the Ranger robot, rather than the proposed NGST robot 
used for the design of the Ansible robot, because Ranger’s 
data rates were higher and the telecom system was sized to 
cope with a worst-case scenario. 
The telecom system must maintain a direct line-of-sight 
with the ground station during construction. A high gain 
antenna is required to achieve the high data rates at while 
keeping the power as low as possible, so the antenna must 
be steerable to compensate for the structure moving slightly 
during early construction, when the parts being added are of 
comparable mass to the existing structure. 
The telecom system must also have a safe-mode which can 
maintain a connection for keep-alive data and to allow 
problems to be fixed. The greatest challenge is if the 
ADACS system fails and the line-of sight with the primary 
antenna is lost. In this case, an omni-directional antenna 
must be used. During this mode of operation, there is 
insufficient data rate to operate the robots real-time, so 
commands would have to be sent up in sections and images 
relayed slowly, but some operation would be possible. 
As a final back-up, both ESMs carry an identical telecom 
system, which is capable of carrying all the data required 
for the Ansible satellite during normal operation and two of 
the robots. This was chosen because the telecom system is 
vital to the mission and this would provide redundancy 
without significantly increasing the mass of the ESMs, 
which require their own telecom systems for the early part 
of the mission. 
The link is designed to operate at maximum data rate for up 
to 95% of the time (weather conditions restrict 
communication to a lower data rate for the remaining 5%). 
on the design of the robots’ data link to the telecom system. 
Also the data link must not inhibit the robots’ movement 
such that it is not able to perform all the necessary tasks. 
” -  - - I- 
Robotic Data Lkk Trade Tree ””! 
Fig 2.7. I Trade tree for the robotic data link 
The robot’s data link can either be direct to the Earth, or via 
the telecom system onboard the ESM. Linking directly to . 
Earth would be a simple architecture and would remove the 
need to lay large amounts of data cabling long all the truss 
structure. However the power and mass requirements for 
this communications system would encumber the robot and 
maintaining a direct line-of-sight with the Earth would 
restrict the movement of the robot (it could not go behind 
the truss structure), so this idea was abandoned. The data 
link via the ESM would reduce the size and power 
requirements of the robot as well as removing the line-of- 
sight issues. The ESM’s telecom system would have to be 
increased in size to handle the much higher data rate 
requirements, but this is insignificant compared to the 
overall size and power requirements of the ESM. 
The link to the ESM could be via an optical link, similar to 
that used to communicate between satellites. This would 
remove the need for the data cabling, but increase the 
robot’s complexity and reintroduce the line-of-sight issues, 
so this idea was not pursued. 
The architecture chosen was a link via the power-data- 
grapple-fixtures (see robot section). This allows the robot’s 
mass and power requirements to be kept to a minimum, 
while having only a small effect on the ESM as a whole. 
The main drawback is the increased mass of cabling which 
must be integrated with the truss structure (2.5km of data 
cabling is required). 
Robot Data Link 
The mass and power requirements of the robots must be 
kept to a minimum, because they must be launched along 
with and powered by the two ESMs. This puts constraints 
5-2355 
Ansible Data Link Block Diagram 
Robot #I 
Ansible Satellite 
20kbps telemetry 
Ground Base 
(7 Muller 
Fig 2.7.2 Overview of the Telecom Architecture 
Equipment 
30W Ku band transmitter is required - a solid state 
amplifier was chosen because it is more reliable and robust 
than a TWT amplifier. Ku band was chosen because it 
provides a more reliable link in poor weather conditions 
than Ka band, the electronics is more readily available and 
there is sufficient bandwidth in Ka band for the link. 
1.lm steerable parabolic reflector - the antenna must be 
steerable because the ESM will be moved around during 
early construction as new pieces are added and torques 
exerted. 
An omni-directional safe-mode antenna is included so a 
link with the ground can be maintained, even if ADACS 
were to fail. In this mode of operation, there is insufficient 
data rate to operate the robot, but there is enough for the 
keep-alive commands to be transmitted until AI3ACS can 
be restored. 
A 20Mbps encoder is required to support the robots' video 
downlink. 
A ground station with a 5m antenna and 30W RF output is 
required to make the link, which can be easily met. Little 
transmit power is required for the uplink because the link 
data rates are so one-sided. 
2.8 THERMAL, CONTROL SYSTEM 
The thermal control system (TCS) must maintain the 
operating temperatures of all the systems and equipment. 
Some equipment, such as batteries and propellant tanks 
allow only a narrow range of temperatures. Other 
components such a solar panels and structural members, 
have a much broader range of operating temperatures. To 
control these different temperatures we use a variety of 
techniques, depending on the equipment, location and 
amount of thermal power converted, must be employed. 
Every Watt of power generated by, or incident upon the 
spacecraft that is not radiated as radio frequency energy is 
converted to heat. Most satellites designed since about 
1994 have been thermally constrained, rather than mass or 
power constrained, (Hoeber, 2000). The TCS is mostly a 
consequence of the inefficiencies of the power system. 
Architecture ' 
The TCIS uses existent deployable technology to reduce 
launch volume as well as lighter materials to reduce mass. 
Using existent technology also helps to keep the cost as low 
as possiblle. The TCS is distributed along the truss structure 
of the satellite and is integrated into equipment modules like 
the power management and distribution modules and 
transmitters. 
Active Tiiermal Control 
The active TCS comprises evaporators that draw excess heat 
fiom the electronic components and transmit it to the 
radiators to be emitted into space. For the Ansible satellites 
the active TCS is integrated into the equipment and so will 
be distributed along the spacecraft structure. For volume 
efficiency, integrated and deployable radiators that can be 
readily stowed for launch were chosen. The deployable 
radiators, emit thermal energy on both sides, doubling the 
useable surface as shown in figure 2.8.1. 
i 
I 
fl' ~ f C O n d e n ~ e n  ! 
i 
z 
1 
i 
i 
3 
8 
~ - " - "  " -- " 
Fig 28.1 Active Thermal system (provided by Swales 
Aerospace) 
The TCS radiate thermal energy in to space by pointing the 
radiator!; north and south. The design takes advantage of all 
the north and south surfaces to use integrated radiators. 
These dlevices are connected to an ammonia loop that is 
capillary pumped and works as a heat pipe system, forming 
an integratedldeployable looped heat pipe radiator. Each 
one of the loops is capable of radiating up to 25kW of 
thermal power. The loops are flexible hoses that will 
facilitate the location of the evaporator. This technology 
was tested on the ground at Lockheed Martin in 1989. Also, 
two capillary pumped loops (CAPL) shuttle flight 
experiments were designed and integrated at the NASA 
Goddard Space Flight Centre. CAPL testing provided 
microgravity performance verification of a capillary pumped 
loop system. The CAPL experiment was flown on the STS- 
60 shuttle mission launched in February 1994. The 
diagram of these loops is shown below (provided by Swales 
Aerospace). 
5-2356 
Fig i .d.2 Looped Heat Pipes (provided L, Swales 
Aerospace) 
Passive Thermal System 
We want to passively control the temperature of as much 
equipment as possible to reduce the complexity and mass of 
the spacecraft. Once on orbit, the satellites are exposed to 
radiative heating from the Sun and the Earth, conductive 
heating tbrough the structure, and internal heat dissipation. 
These radiation interactions happen in two different 
wavelength ranges: short wavelengths coming from the sun 
and long wavelengths from both the Earth and the 
spacecraft We control the spacecraft's surface temperature 
with external coatings of low infrared absorptivity and high 
i&ared emmisivity. For the Ansible Project white paint is 
used in the equatorial sides and metallic blankets are only 
used for delicate equipment. To control some of the 
spacecraft's intemal delicate components we use multi-layer 
insulation (MLI). Propellant tanks, batteries, as well as 
equipment panels will use MLI to maintain their narrow 
range of operation temperatures. 
2.9 DIGITAL SYSTEMS 
The Ansible's digital Systems is unrelated to and 
independent of the payload itself, but is responsible for 
processing housekeeping and attitude control data. Digital 
systems tasks include; processing telemetry from the 
power, thermal, ADACS and robotic systems i.e. receiving 
data from those systems, processing and sending the data to 
ground control, then, either processing commands from the 
ground, or generating commands from on-board memory. 
Challenges Associated 
The distributed and constantly kvolving nature of the 
Ansible poses many challenges for the on-board computer. 
Firstly, the on-board processor requirements of the Power 
Management and Distribution (PMD) system for the 
Ansible will be considerable compared to a typical satellite. 
The PMD system is distributed about the structure and even 
at the earliest stages of construction must cope with the 
management of four moving robots, each with different 
power requirements. The steerable spot beam antennae also 
further complicate the PMD system. In order to provide the 
four levels of service that we offer, PMD will be required to 
deal with the different pointing requirements. As new 
modules are added, the on-board computer must also be 
capable of integrating the newly available power. Finally, 
when the satellite is fully completed, the PMD system must 
deal with complicated and varying demands from all 229 of 
the steerable spot beam antennae on the satellite. 
Furthermore the distributed thermal system' places very 
similar demands upon the on-board processor. The active 
thermal control of the power system and the varying 
requirements of the antennae will make the thermal control 
system more complicated relative to that of a typical 
communications satellite. 
The highly complex ADACS system must be able to quickly 
react to moving robots and a constantly changing 
configuration. Resulting in an on-board computer capable of 
dealing with complex near instantaneous commands. 
Robotic systems will be primarily controlled from the 
ground, however some commands will originate from the 
on-board computer memory. Both types of commands must 
undergo a high level of fault correction and monitoring, due 
to the delicate nature of some of the robot's tasks. These 
commands are then sent through cables to the Power Data 
Grapple Fixtures (PDGF) to the robots. 
One of the greatest challenges of this system is to 
incorporate all of the above onto a data bus that would allow 
new nodes to be added without impacting the central 
processor. 
By using a dedicated data bus and an extremely powefil 
on-board digital processor \alongside large on-board 
memory, the highly complex demands that are made upon 
the digital systems can be addressed. In addition to this, a 
suitable architecture is required allowing data to be 
effectively and efficiently distributed within the satellite. 
Severa! architectures were examined and in this section we 
will show the reasoning behind the decision. 
Centralized architecture - Whilst this would be reasonably 
reliable and the connections would be simple as they all go 
directly to the central processor. This architecture would not 
be compatible with the structure of the Ansible. The central 
processor will not physically be located at the centre of the 
satellite structure so the implementation of this architecture 
would require a large amount of cabling and thus 
unnecessary mass. A centralized architecture would not be 
easily upgradeable and expandable, adding a new node 
would have too great an impact on the central processor. 
Distributed architecture - Whilst reliable, would result in an 
overly complex system. Considering the Ansible's size and 
5-2357 
the requirement for simple universal connections, which 
would allow new nodes to be added without impact to the 
central processor, this architecture was deemed unsuitable. 
Ring architecture - Signals must pass through all the 
subsystems in a chain structure and data can be altered, or 
lost en-route if for some reason a component loses power. 
New nodes can be added easily to the ring architecture with 
limited impact on the central processor, but it is physically 
incompatible with the Anisible’s structure, and would need 
an unnecessarily large amount of cabling. Ring architecture 
is also less efficient, so considering this and the factors 
mentioned above, this architecture was decided against. 
Federated architecture - The federated bus architecture was 
chosen primarily because the nature of the systeim allows 
for standardized universal interfaces without the need for 
excess cabling. It was also found to be compatible with the 
Ansible’s structure and would also be more reliable in 
comparison to the other architectures examined. 
Architecture Trades 
Chosen 
Architecture 
Digital Systems 
Figure 2.9. I Digital Systems Architecture trQdes 
Robotic Systems - Robotic systems has large memory 
requirements. If communications were cut off mid- 
manoeuvre the computer must be able to initiate commands 
to allow the robot to complete a manoeuvre and place itself 
in a safe mode. Complex commands for real-time robotic 
control are sent by the ground controller to the Ansible. 
Where robotic manoeuvres are repetitive and simple, it 
becomes impractical and undesirable to have someone on 
the ground in continuous control, therefore the ground 
controller can also send commands to the Ansible’s 
computer to initiate those tasks, inputting only high level 
commands, for example, if the controller were to initiate a 
walk then perhaps the destination would be inputted 
alongside the name of the walk mode program, e.g. fast, 
slow. Once received by the on board computer, these 
commands undergo a high level of monitoring and fault 
detection before either being sent direct to the robot through 
the power data grapple .fixtures, or they initiate memory 
access and the computer sends the command for repetitive 
manoeuvres through to the robot. 
The cameras and instruments on the robot then send 
telemetry which is processed in the digital systems 
commancl centre and then transmitted to the ground, where 
the video images undergo time buffering to allow the 
controller near real time uninterrupted footage of the robots 
movements. The Ansible’s digital ,systems will consist of 
two identical central processors. 
The central processors will be situated inside the ESM 
modules. The processor on board ESM 1 will be the main 
data processing and command centre for the entire Ansible 
satellite, also providing the main data handling for the 
robotic system (consisting of 2 robots), which was stowed 
on board. ESM 2 provides the main data handling for the 
robotic system, which was stowed on board and also acts as 
a redundant processor for the entire Ansible satellite. 
Robotic system processing requirements were approximated 
fkom taking the Ranger tele-robotic experiment processing 
requirements. The tasks performed by the robots on the 
Ansible would be very similar to those performed by 
Ranger. 
Specifications. 
Ansible computing requirements: 
0 :Each robotic system requires command processing 
at 256kbps 
0 :Each satellite not including robotic systems 
irequires command processing at 1Mbps 
0 (On-board Storage for robotic repetitive task 
:autonomy 
Ansible Computer specijkations: 
0 Processing at 128 Mbytes 
0 ‘Throughput of 400 MIPS 
Mass 12.8Kg 
Maximum power requirements 28W 
(On-board storage capacity of 8 Gbytes 
3.1 COST 
Challenges 
One of the greater challenges in creating a cost model for 
the Ansible network is the size of the satellites. If built, they 
would be by far the largest man-made structures in space 
and as a result the Ansible satellites are out of the scope of 
all of current Cost Estimating Relationships (CERs). 
This was addressed by taking a mixture of 2 CERs namely, 
Wertz 12 Larsons ‘‘Spacecraft Mission Analysis and 
Design” cost model, the LSh4D cost model, which was 
developed by students at Caltech. The parameters which 
were out of the range of the CERs, were divided into 
managealble increments, then inputted into the cost model. A 
learning curve was then applied to those increments, 
outputting the total estimated cost of the subsystem. 
All current CERs are of course based on previous missions. 
This-has a big impact on the costing of the Ansible project. 
The Ansible proposes to create a new paradigm for satellite 
construction i.e. on-orbit tele-robotic construction. It is very 
5-2358 
difficult to gauge the impact that this new paradigm will 
have on the cost of such a large project. By using on-orbit 
construction and thus allowing a greater volume efficiency 
in the launch shroud, and because spacecraft components 
do not have to withstand the violent vibrations of launch, 
whilst assembled, less time, effort and thus money need to 
be spent on evaluation and testing. Furthermore, as 
components would no longer be assembled on the ground, 
there would be less need for ground infrastructure and 
personnel. Whilst these factors would all lower the cost of 
the Ansible project, they are very difficult to quantify due 
to the ground-breaking nature of the project. This given, 
costs estimated here would be expected to be lower in 
reality. 
The greatest by far of the challenges has been to extract 
information from the commercial satellite industry. A more 
accurate CER could be created from a “grass roots” 
assessment of the costs of individual components and a 
breakdown of personnel expenditure and ground evaluation 
and testing costs. 
Total Cost including launches 
Total estimated cost of the Ansible project is $13.6 Billion, 
or $4.5 Billion per satellite. Which, when compared to the 
near $100 Billion cost of the Intemational Space Station 
would appear to be a good investment, considering the 
return. After $5.7 Billion, all three satellites will be 
partially opperational, capable of providing minimal levels 
of all four services offered. The satellites will then begin to 
provide a return on the investment. 
ESM Breakdown 
The ESM is a self-supporting spacecraft. Here we can see 
that the cost of the ADACS system consists of nearly half 
the total ESM expenditure, this is understandable 
considering the majority of the ADACS system for the 
entire Ansible satellite is sent up With the ESMs. The cost 
of the robotic systems is also a major cost driver of the 
ESM but is also not significant considering that this 
constitutes the majority of the Ansible’s idfastructure and 
Fig 3.1.1 Launch 1 Breakdown 
Shown here is the breakdown for launch 1. This consists 
two ESMs and a Solar Orbit Transfer Vehicle (SOTV). 
Table 3. I .  I Subsystems by launch 
Fig 3. I .  2 
Comparison with Galaxy XI (Hughes 702) 
Because of the dynamic nature of the services offered by the 
Ansible makes it difficult to compare the Ansible’s 
capabilities with other Geostationary satellite networks. The 
difficulty in getting a useful figure of merit from other 
satellite networks also makes this comparison difficult. 
This chart shows by launch, the effective antenna area that 
would be obtained if an equivalent mass of Galaxy XI’S 
were launched. This is a very effective way of showing the 
Ansible’s large advantage when it comes to performance per 
launch. 
It would take 214 Hughes’ 702s to match the Ansible in 
effective antenna area. 
Fig3.1.3 
3.2 S ~ ” Y  
original goals 
Remove the need for large ground transmitters - to 
allow the use of mobile ground terminals in areas where 
there is no existing infrastructure. 
Overcome the volume and mass restrictions of launch 
vehicles - remove unnecessary restrictions giving many 
advantages 
5-2359 
Provide a unique range of services - a far wider range 
of services than existing networks including specific 
services which could not be offered using conventional 
satellites. 
Technologies Employed 
0 Remove large ground transmitters - Robotic assembly, 
multiple lightweight antennae 
Remove volume and mass restrictions - Robotic 
assembly, lightweight stowable trusses, antennae & 
solar arrays 
Reduce cost / bit - reusable solar orbit transfer vehicle, 
Hall-effect thrusters, multiple lightweight antennae 
Advantages of using those technologies 
By removing the mass and volume restrictions, the 
design of the satellite is less constrained, allowing a 
much wider fkeedom of design. 
The high data rates offered to small ground terminals 
have range of commercial and military applications and 
is an example of the unique range of services offered. 
Satellite serviceability increases the reliability, 
extending the lifetime of the network. 
The long mission life requires the satellites to be 
upgradable, so that they do not become obsolete as 
technology advances. 
The extraordinarily long mission life reflects the 
improved reliability of this architecture and helps to 
improve the cost effectiveness. 
The network of 3 satellites would cost less than a 
comparable one made of existing satellites. 
Launching components, rather than assembled 
satellites, far less shock-testing is required (saving 
money) and the chance of breakage during launch is 
reduced. 
The Product 
3 satellite network, each having 
Mass 88,000 kg 
Power80kW 
Costing -$4.5 Billion 
Communication for 500,000 mobile users 
Capabilities of the Ansible network 
The network provides (at 10% usage) 
Voice & telemetry - 1,500,000 mobile users 
3D Video up - 720 users 
3D Video down - 9,000 users 
15 channel 3D video & data - 300 bases 
The Ansible satellites each have a total antenna area 
equivalent to 214 Galaxy XI (Hughes 702) satellites, but 
cost only a fiaction of this fleet. 
4.1 REFERENCES 
The Aerasspace Corporation (1996) Concurrent Engineering 
Methodollogy (CEM) Database 
Ranger R.obotic Servicing () 
http://vmw. ssl.umd.edu/homepage/projects/RANGERTSX/r 
ight. html 
S. A. Moynahan III, S. T. Tuohy Development of a Modular 
On-orbit Servicable Satellite Architecture 
Joel C. Sercel() JPL's Model Based Spacecraft and Mission 
Design 
Kessler, T. L. and Frye, P., (1999) 
Solar Thrmnal OTV - Applications to Reusable and 
Expandable Launch Vehicles, Presented at the 50th 
International Astronautical Congress 4-8 Oct 
1999/Amsterdam, The Netherlands 
Larson and Pranke (1999) Human Spaceflight: Mission 
Analysis and Design 
Pratt and Bostian () Satellite Communications 
Maral and Bousquet (1993) Satellite Communications 
System 
Cols, et al. () Antennas and Structure at Matra Marconi 
Space: Current Technologies and Developments 
Hoeber, et al. () "Multi-Beam Satellite System Evolution" 
Wertz & Larson (1999) Spacecraft Mission Analysis & 
Design (Third Edition) 
Joel Sercel's course (2000) Collaborative, Model Based 
Spacecraift Mission Design 
Anders, Carl J. (1998) Robotic System Concept for On- 
Orbit Telescope Assembly, ATAA 
MD Robmotics webpage www.mdrobotics.ca/mssf?ame.htm 
Hohwiesner, Bill and Pairot, Jean-Michel. (1992) 
On-Orbit Demonstration of Automated Closure and Capture 
Using Ellropean & NASA proximity Operations 
Technologies and an Existing, Serviceable NASA Explorer 
Platform Spacecraft. 
Tanaka, et al. () "Ka Band Mobile-Vehicular Phased Array 
Antenna System For Mobile Satellite Communications" 
Tran, Qimg K. () ACTS High Speed VSAT Demonstrated, 
http://wNw.lerc.nasagov/WWW/RT 1999/5000/5650tran.ht 
d 
5-2360 
Muller, Ronald M. (2000) Robotic Assembly of a 20-Meter 
Space Telescope QSS Group, Inc. 
Sarafin, Thomas P (1995) Spacecraft Structures and 
Mechanisms-From Concept to Launch Microcosm, Inc. 
AEC-Able website 
www.aec-able.codcorporate/srtm_spex.htm 
Muller, Ronald M. (2000) Robotic Assembly of a 20-Meter 
Space Telescope, QSS Group, Inc. 
C. Hoeber, D. Kim (1999) Satellite Evolution. Presented at 
the 50th International Astronautical Congress IAF-99- 
M.2.01 
Swales Aerospace Website http://www.swales.com 
Lord Corporation http://www.lordcorp.cod 
Eugene K. Ungar (1995) Single phase vs. two phase active 
thermal control systems for space applications: a trade 
Study AIAA-95-0634 
C. Hoeber (2000) The Continued Evolution of 
Communication Satellites 
Meink, Troy, Kitt Reinhardt, Kim Luu, Ross Blankinship, 
Steve Huybrechts, and Alok Das, "PowerSail - A High 
Power Solution," AIAA Space 2000 Conference & 
Exposition, Long Beach, California, 19-2 1 September 
2000, AIAA Paper 2000-5081 
4.2 Acknowledgements 
The work described in this paper was conducted at the 
California Institute of Technology in the Laboratory for 
Spacecraft and Mission Design (LSMD 
www.1smd.caltech.edu) under the sponsorship of the United 
States Air Force Research Laboratory. The opinions, 
positions, and views expressed in the paper are solely those 
of the authors and do not necessarily represent the position 
of the United States Air Force, the Air Force Research 
Laboratory, or the California Institute of Technology. 
We would like to thank the following: 
Dr Joel Sercel (Caltech) 
Carlos Romero (Caltech) 
Kevin Parkin (Caltech) 
ICEMaker Team (Caltech) 
Tom Kessler (Boeing) 
C. Hoeber (Space SystemslLoral) 
David Bauer & ACTS Team (NASA) 
ADAM Team (AEC-ABLE) ICEDriver Team (Caltech) 
Drawcraft Team (Caltech) 
Troy Meink (Powersail) 
University of Leicester Travelling Scholarship Board 
Ede Ravenscoft Prize Fund 
4.3 BIOGRAPHY 
The Ansible Team: Susan Ayer, Todd Schuman, Scott 
England Gregorio Drayer, Eric Romo, Helen Laird 
Eric Romo is currently a senior mechanical engineering 
major at The Cooper Union for the Advancement of Science 
and Art, in New York City. He lives in Bloomfield, New 
Jersey and commutes to Cooper Union, which is in the East 
Village. At school, Eric participates in varsity basketball and 
baseball. After finishing his BSE this year, Eric currently 
plans to.begin graduate school in the fall of 2001. 
Helen Laird has just started her final year of a BSc in 
physics with space science and technology at the University 
of Leicester, UK. In her spare time she works at the 
Leicester Challenger Centre, part of Britain's National 
Space Science Centre. She is also on the committee of 
UKSEDS, UK Students for the Exploration and 
Development of Space. She is the coordinator of the team 
responsible for the payload of the first ESA SSETI (Student 
Space Exploration & Technology Initiative) satellite. She 
intends to pursue a career in the space industry and plans to 
return to her studies after gaining a few years of experience. 
Todd Schuman is a junior aeronautical engineering and 
economics double-major at the California Institute of 
Technology. His interests include fencing, camping, 
intramural sports, and student government. He was awarded 
a Summer Undergraduate Research Fellowship at Caltech 
(SURF 2000). 
Scott England is a student at the University of Leicester 
(UK), studying Physics with Space Science and Technology 
and is in the final year of his Masters in Physics. Next year 
he plans to start a PhD in Space Plasmas. He has worked on 
the European Space Agency's Beagle 2 lander project and in 
Caltech's Laboratory for Spacecraft and Mission Design. 
He is the UKSEDS Publications Officer and is involved in 
the rockoon project, leading the launch platform design 
team. 
Susan Ayer is a sophomore at the California Iustitute of 
Technology. She was awarded a Summer Undergraduate 
Research Fellowship at Caltech (SURF 2000). 
5-2361 
Gregorio Drayer has published 12 graphic simulations for 
several comets at the Jet Propulsion Laboratory's (JPL) 
Comet Observation Home Page. He received a scholarship 
fiom the International Space School Foundation, 
FUNINDES, Institute of Energy of the Americas, NASA 
and the Venezuelan American Partnership to the 
International Space School 1999. Coordinated the Mars 
Polar Lander event for the Ibero-American School of 
Astrobiology directed by Dr. Julian Chela-Flores, Dr. 
Guillermo Lemarchand and Dr. Juan Or6 in Caracas, 
Venezuela. Awarded Summer Undergraduate Research 
Fellow at Caltech (SURF 2000). He currently, studies 
Power Engineering at Universidad Simon Bolivar, works at 
the Plasma Physics Lab operating a High Power laser and 
doing research on h4HD and MPD Propulsion. H i s  main 
interest is human space exploration. More at 
http://gdraver.triDod.com 
5-2362 
