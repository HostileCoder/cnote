Constructing Auditing Rules from ERP System: A Business process Flow Approach 
Yi-Hsuan Hung 
Information System Laboratov, Institute for Information Industry 
3F1,268 ,Fu-Hsin S.Rd.,Sec.Z,Taipei 106,Taiwan,R.O.C. 
Sams6iliii.ore.w 
Abstraet 
Fraudulence cases have happened all the 
time in business environments. The 
responsibilities of auditors are to prevent the 
swindling cases and to ensure that every 
operation conforms to regulations. In recent 
years, IT is adopted in business environments. 
Traditional approaches with paper operation 
using papers to be audit trails should be changed 
to EDP Auditing. Typically, since auditors come 
from non-IT backgrounds, it’s diffcult for them 
to involve the area of EDP Auditing. 
Furthermore, enterprise resource planning ( E O )  
is adopted competing with other opponents 
around the world. ERP makes the enterprise 
systems more complicate. Hence, auditors face 
an even big problem about how to audit in ERP 
environment. 
This paper proposes a mechanism to 
structure d e s  of auditing information by 
mapping from business processes to data flow 
and data model. With our mechanism, auditors 
can directly obtain auditing information based 
on business process and containing data 
changing precess. 
Keyword: EDPAuditing, Bminess Process. 
ERP 
1. Introduction 
Business environment is  becoming more 
and more complicated. The organizations expand 
fast and globally. Most enterprises use 
computerized systems to manage their huge data 
to simplify operational procedures and to 
improve efficiency. 
Because global competition is intensive, 
enterprise resource planning (ERP) has become 
basic framework for competing with other 
enterprises. ERP is a concept to integrate 
business information, and its core is  a database 
collecting data from all business processes and 
activities. ERP shares data around the 
organization by network to support every 
application module to be tied in organization’s 
strategies, characteristics, and cultures. 
Therefore, ERP can help a business to obtain a 
greater benefit [5,7]. 
IT improves the enterprise’s power of 
competition. However, “computer fraudulence” 
comes up relatively. Hence, the role of 
information systems auditing is to ensure that 
enterprise followed the prescribed managerial 
order by examining data and monitoring the 
processes. The crime derived from computer 
fi‘audulence brings entire business envuonment 
with high risk and serious persecution. Hence, 
traditional auditing ways should be changed, 
“here are many researches discussing new 
auditing techniques, systems control, and 
auditing evidence. Auditon shndd learn new 
EDP Auditing techniques, such as auditing 
approaches in ERF’ systems, to accommodate to  
changed situation (191. 
Our research focuses on auditing original 
data. The principles of auditing data, such as 
ACL (audit command language) the most 
popular auditing software in the world, include 
three steps [14]: 
Stepl. Extract data to local host from 
external database or files. 
Step2. Define data table and fields. 
Step3. Analyzing data, for example: sample, 
sort, count  or join etc. 
Users should be able to understand the data 
stmctre, database schema and 5emantics. Then 
the step2’s actions above will be done well. 
If the enterprise scale of system is small 
with less tables, the general auditors may be able 
to shoulder the auditing tasks by using the 
principles above. Nevertheless, EP+’ systems are 
so complex and ifs database has many tables 
with complicated relationship each other. Some 
processes are likely to influence more than one 
table and some tables are possible read or 
written by more than one process. General 
auditors coming from nowIT hsckground might 
be hard to do  EDP auditing jobs insuch complex 
database structure environment. 
As for some solutions, some database 
management systems (DBMS) ’nave “auditing” 
function. So long as DBMS has been installed, 
the DBMS will build tables about auditing 
automatically. Ailer the auditing function is set 
up, DBMS can monitor some tables while they 
are operated. Besides, advanced DBMS provides 
“log file” function. Log file can record important 
data when some tables are manipulated. The log 
data such as people who did this action, time 
when this action occurs, and the table’s name 
341 0-7803-7882-2/03/$17.0oO2003 IEEE 
will be recorded. 
However, it i s  s t i l l  enough only by DSMS 
functions. Because the auditing data above are 
stared in tables of database basically, auditors 
need to know structure of database and to 
understand the meanings of tables and fields 
enough to acquire the correct data that they want. 
More, the data type is not suited for auditors and 
it just designed for technical personnel. An 
example of auditing data type that Oracle 
provides is shown in Figurel. 
Mvmn ‘2ezcf-M aum-m U T  hW m Dam IM) W L  
- m e  TABLE 35 c ,. N i. ys i- 
IC017 m m  T a u  ,. ,. i. iv c YS 2- 
.____. ~ ........... ............................... - ..... - 
Figure 1. Auditing information of DBMS 
(Oracle) 
Because of the property of database storing 
data, some auditing trials disappear in two 
conditions: 
( I )  If someone inserts one record into table and 
deletes the record, there i s  no mark in the 
table. 
(2) If some record in table is updated more than 
once, the table only retains the latest record. 
The two conditions above are normal when 
we work with database. However, the property 
disobeys the central mind of auditing because 
auditing emphasizes keeping the fullness of 
auditing trials to be foundation of tracking and 
analyzing. If the information systems can’t 
record complete data changing process. auditors 
have not suficient evidence and data after the 
event to determine whether some crime happens 
or not. 
Our research is aimed at the problems 
discussed above and then provides a s o l u h n  by 
mapping from business process to data process 
and data model. Besides. we use trigger function 
to retain complete data changing process. 
2. Literature review 
2.1. EDPAuditing 
The concepts of auditing come from 
accounting originally. Auditing emphasizes that 
the data of entering, or to be entered, into the 
accounting book should be kept completely for 
accountants to check accounts correct or not. 
EDP auditing is  a series of processes collecting 
evidence and evaluating systems to judge 
whether systems are safe, data is correct and 
complete and systems’ functions match the 
enterprise’s objectives (12,191. Many scholars 
and researches have discussed and studied 
related topics including statistics and techniques 
in the area ofEDPauditing. [6,9,10,12,13,14] 
According to the research whose objects are 
2828 international internal auditors around the 
world, there are 40% auditors use ACL to extract 
and analyze auditing data, 21% auditors use 
spreadsheets, 14% auditors use DBMS, 4% 
auditors use software developed by themselves, 
3% auditors use SAS, 3% auditors IDEA, 2% 
auditors use Focus [9]. 
Another research investigates the sirnations 
that companies make use of auditing s o h a r e .  
The outcome is shown in Table 1 161. 
are used in real companies, there are many 
problems while internal auditors use EDP 
auditing techniques: 
( I )  User’s ability: Although information 
technology progresses rapidly, 
companies otten neglect the poor 
technological abilities of auditors. 
Auditors can’t keep up with 
technological abilities of other 
employees in company. The 
phenomenon is so called “information 
technology lag”. 
(2) Complexity of IT: . Information 
technology and systems are too 
complex for auditors to understand. 
(3) Specialization: There are no 
specialized experts and consultants in 
some small companies. 
(4) Cost: Depcnding on experts 
excessively makes higher cost and 
lower effect. 
(5 )  Miss understanding: Because auditors 
usually don’t join development of 
information systems, they don’t 
understand the systems clearly. 
(6) Training: Educational training is not 
practicable. 
The report of AICPA shows that most 
accountants use “word“ and “spreadsheet” to do 
EDP auditing jobs and they can’t use computer 
assistant auditing software (CAA’Ts). 161 
Towards auditors without experience of 
EDP auditing, it’s very hard for them to do EDP 
auditing tasks in computerized environments. 
General auditors are usually lack of specialized 
training and skills, SO they audit “around the 
computers.” “Auditing around the computers” 
only checks the input and output of the systems 
and i t  doesn’t belong to EDP auditing sCrictly. 
EDP auditors should control all data and 
processes inside the computers .and systems 
[5,171. 
342 
2.2. Classification of Auditing tools 
Our research focuses on auditing original 
data in database or files. The key point is how to 
build auditing information that is suited for 
auditors. Our research classifies EDP auditing 
software or systems as three kinds: 
(1) Generalized auditing software (GAS): 
such software is based on data 
transaction and emphasizes that it’s 
suited for different kinds of files and 
format, GAS has many commands and 
functions for auditors to analyze data. 
But usen should understand the data 
structure clearly so that they can define 
and analyzc the data. Some example of 
GAS include ACL, FOCAUDIT, 
APPLAUD, IDEA, etc. 
(2) Auditing function of DBMS: such this 
kind of software is based on data 
transaction. DBMS can monitor specific 
tables and record some data as soon as 
the tables are operated. “Log file” 
function is the typical case. 
(3) Auditing systems of ERP: such sofhvare 
is also based on business process. ERP 
can supply many auditing reports 
functions that have been set before. The 
functions of ERP are shown in Table 2.11 
is the partial repom about financial and 
auditing of SAP FJ3. 
Table 2TPartial reports of SAP Rl3 
Explanation 
IPrint a general ledger, the 
Reports 
numbers 
RFAUSZOO 
I Jaccounjreoom of I 
. .  
Isuppliers 
RFKOPOOO IAccount payable 
3. System framework 
This section discussed our mechanism with 
examples step by step [6] .  Figure2 shows the 
review of our research. 
*../I.. 
Figure 2. Diagram ofsystem framework 
3.1 Stepl: Building the requirements of auditing 
information 
Auditors and IT personnel is needed for 
building auditing information systems cooperate 
with other. 
Step1.l Business process identification: 
Because every enterprise has different 
business processes, we should . obtain what 
processes the enterprise has. 
Stepl.2 Business events identification: 
should be determined. 
Step13 The key point of auditing identification: 
When some critical data are updated, our 
mechanism can record the critical data changing 
process. We obtain what critical data the auditors 
want to know well. 
Stepl.1-stepl.3 builds the requirements of 
auditing infomation of auditors. The example is 
shorn in Figure3. 
Stepl.4 Analysis with use case: 
“Use case analysis” is the ways collecting 
requirements based ou business process. The 
reason of making use case here is for some 
special conditions in step2. The example of this 
step is shown in Figure4 and Table2. 
In this step, business events of processes 
0 lT personnel: Allen Auditor: Leon 
Date: 20OW3/1 
1 .business process: purchasingprocess 
2.business event: 
Apply purchasing order 
Concelpurcharing order 
Modifv dam ofpurchasing order 
The changing process ofthe price on 
Ihe purchasing order 
3.key point of auditing: 
Figure 3. The requirements of auditing 
information 
343 
,I’ Figure 4. Use case diagram 
and password 
StepSEmployee 
input number of 
material, the 
number of supplier 
and amount and 
press “next” key 
Step7.employee 
press ”confirmable” 
key 0 
‘ Tdhle 4. the wenono ofapply purchasing ordcr ‘. 
a s s  !Apply pxchasing order 
shows the frame of 
purchasing function 
and request the 
number of material, 
the number of 
supplier and amount. 
StepdSystem shows 
the data of the 
purchasing order. 
related events that auditors define in stepl, we 
can find corresponding DFD. The operational 
process is shown in Figure5 and its algorithm is 
Figure 5 .  Mapping from Business Prwess to 
/ o r l p ~ h  birrinrrr event 
JinJsemmiic o/DFD is eq~~rVdenl to_ 
semnlic of- 
lhe brrrincrr men, 
Figure6. Algorithm of step2.2 
There are two reasons about use case 
analysis is done in stepl.4. (1) If DFD is too 
complex to determine the sequence ofdata flow, 
we can utilize the scenario of use case to 
understand. (2) When the process doesn’t match 
any fit DFD, we can utilize the scenario of use 
case to find corresponding DFD. 
3.3 Step3: Mapping from data process to Data 
Model 
Step3.1 Entity relationship diagram (Em) 
acquisition: 
The exolanation of this steD is identical to 
step2.1. Wi can derive ERD ‘from the tools 
[20,21]. 
Step3.2 Mapping from Data Process to  Data 
Model: 
“Datastore” snnbol of DFD is eouivalant to 
“Entity” symbol bf ERD as shown’in Tables. 
According to the switching rules, .we know that 
344 
one entity can transform one table in relational 
database. Through mqping process, we can 
obtain the partial ERD and confirm the partial 
ERD contains all auditing information that we 
identify in stepl. The mapping process is shown 
in figure7 and its algorithm is shown in Figure8. 
STORE 
-3 
-- 
I“ x .- - 
Figure 7. Mapping from Data Process to Data 
Model 
b m n  
f indfrmnlic afmry ;n ERD (3 qrr;valcnl- 
io rcmonrie o / i b e m m  in DFDgeromibm-of 
the entip 
Figure 8. Algorithm ofstep3.2 
3.4 Step4: Building the Rules 
According to the data flow of DFD, the 
practical business events can transform into the 
conditions of real data flow in database. 
Step4.l Structure analysis: 
Continuing the example above, we can 
discover the business events: “Apply purchasing 
order ’’ is composed of hvo operations. “insert 
record to master file of purchasing order“ and 
“insert record to detailed file of purchasing 
order”. The situation is shown in figure9. 
Figure 9. Diagram of analyzing business events 
Step4.2 Building the rules: 
According to the inference of step4.1, we 
can build the mapping rules between business 
events and corresponding conditions of data 
flow. 
In the above example, the rules can be built 
as below: 
0 As long as one new record is inserted 
into “master file of purchasing order”, 
we know the business event “apply 
purchasing order” has happened. 
As long as one new record is deleted 
from “master file of purchasing order”, 
we know the business event “cancel 
purchasing order” has happened. 
As long as the field “price” of “master 
file of purchasing order” is updated, 
we know the business event “modify 
data of purchasing price of purchasing 
order” has happened. 
We can analogize other rules: 
0 
0 
The algorithm of above rules as below: 
A= ”Apply purchasing order“; 
B= ”cancelpunharing order”; 
C= ”modify data ofpunharing order”; 
inserr(new record)[purmas] then trigger(A) 
eke ifupdale(record)[purma. name] then 
higger(B1 
else ifupdote(recorrl)[puar.p~iceJ then 
trig@r(C) 
Figure IO. Algorithm of step42 
3.4 Step5 Storing the mles into rule-base 
The purpose of this step is to standardize the 
rules so that we can produce the code 
automatically according to the rulelbase 
Step51 Building the table of rule-base: 
We give an the most simple example that 
use ER-Model to explain the meta-data of rule 
table. The example is shown in figurell: 
345 
dix..; Field 
“able 
Rule-i /\CtiO” 
Figure 11. Meta data of rule-base 
Rule-id The number of rule 
Table: The table which is manipulated 
Action: Insert, Delete. Update 
Field: The field that is manipulated may be 
all fields or partial fields. 
Description: The description of business 
process 
Step5.2 Generating trigger from rule-base: 
The fields of rule-base are important 
variables of trigger. Therefore, we can use data 
in the rule-base to produce consistent trigger 
code. The operational model of this step is 
shown in figurel2, and its algorithm is shown in 
Figurel3. 
r u i r - b a r c  
c n c r i l t i o  
T R I G G E R  
Figure 12. Diagram of producing trigga 
oction=inren then 
create trigger(audit-inverr) 
aerion=update then 
create wigger(mdit-updde) 
Figure 13 Algorithm of step5.2 
An example is shown below. When one new 
record is inserted into “master tile of purchasing 
order” will be executed a trigger 
“audit-trigger1 ”. 
create databare link remote-auditdb 
connect to system by manager 
create or replace trigger audit-(rigger1 
ajer invert onpurmrrr for each mw 
begin 
imert into remote@audit-inven values 
(emp.emp_nnmelldatejl 
”apply purchasing order”/ Ipur-ia); 
end; 
Figure 14. Algorithm of audit-trigger1 
When one new record is deleted from 
“master file of purchasing order“ will be 
executed a trigger “audit-trigger2”. 
create dotabase link remote-guditdb 
connect to system by manager 
create or replace wigger audit-trigger2 
offer delete on mnnm far each row 
1 kt into remote@audit delete values I - -  
(emp.emp-namel Idatell 
“cancel purchasing order?] ;pur-id); 
en,! 
Figure 15. Algorithm of audit-trigger2 
When the field “price” of “master file of 
purchasing order” is updated will be executed: a 
trigger ”audit-trigger3”. 
create dntabrrre link remote-auditdb 
connect to system by manager 
create or mplace trigger oudit-trigger3 
ajer update (“price’’) on purmer for each mn 
begin 
insert into remote@audiI-update 
values(emp. emp-name1 Idatel I 
“modify price ofpurehosing order” 
I J:newpur-id I;oldpricel l:new.pricel v; 
Figure 16. Algorithm of audit-Wigger3 
The triggers will be set and stared ERP 
system’s database. As the manipulation that we 
set occured, trigger will extract the critical data 
and send them to storage of audit database. 
Through the mapping mechanism and changing 
process, we can provide the suitable data type 
and the most essential auditing information for 
auditors. Such information is therefore the 
“auditing information based on business 
process”. In the future, auditors just inquire the 
data in the audit database, so that they 
understand all business events clearly and easily. 
The diagram is shown in figurel7. 
msaction dab auditing information 
Figure 17. Diagram of transforming from ERP 
database to audit database 
bared on business mess 
The auditing information in OUT research has 
some advantages to overcome some deficiencies 
of other auditing information acquiring 
mechanism. 
( I )  Our auditing information is based on 
business process and the audiors are 
346 
of cource familiar with this kind of 
information. since buniness process 
is the specialized field belong to 
auditors. So we infer that this kind 
of auditing information is adaptable 
to auditors. 
(2) Auditing information is typically 
obtained from the data in the 
database directly. On the other hand, 
the acquirement way of our auditing 
information is according to changing 
state of data flow in the database. It 
can avoid falsifying data in the 
database directly. 
(3) When we update a record in 
traditional database, the old record 
will be covered with the new record. 
Only the latest record will be 
retained in the database. This 
situation disobeyes the principle of 
auditing. We use trigger code to 
preserve the historical information 
with this way , auditors have 
suficient and complete auditing 
trials to audit. 
4. System Implementation 
A prototype system is built to prove the 
feasibility of our mechanism. Our system is a 
assitant tool help IT staff for developing auditing 
system analyze original business system and 
build the mapping rules. 
4.1. Developing Environment 
The operational environment of our system 
is in windows platform. “Visual Baisc“ is 
developing twls that is used to design the user 
interface It connect to the “Access” database. 
4.2. System Architecture 
The input of the system contains ERD. DFD 
of the original system and critical business tasks, 
and the output contains the mapping rules and 
corresponding trigger code. The operation of the 
system architecture is shown in figureit. 
~~ maulbwirs% 
u‘h CpyAy inn, 
Figure 18. Operation of system architecture 
The diagam of the system operation is 
shown in figurel9. The users of our system are 
auditing sFtem developer. They input data into 
database as metadata through user interface. 
Besides, users build mapping rules through 
analyzing process and store them in 
meta-database similarly. 
*- 2+-g\ d.n- 
g u e  19. Protoiype of the system interaction 
5 .  Conclusion 
In this paper, we have proposed a new 
mechaism to derive mapping rules and 
corresponding trigger code from system 
analytical papers including DFD and ERD 
mainly. The mechaism is different from others in 
that it integrates the advantages of three kind of 
auditing software and systems that we classify in 
2.2. 
The auditing information derived from our 
mechnism is based on business prmess so that 
usual auditors coming from accounting or 
financial background realize the auditing 
information more easier than data in the ERP 
database. Moreover, the auditing information 
that we provide contains the changing process of 
data. Audtiors can master a record from inserted, 
341 
updated many times halfway, and deleted finally. 
Entire data changing cycle is recorded in our 
audit database completely. 
After interview the auditors and EDP 
auditing experts in the real society, research has 
one valuable opinion. The design of auditing 
information system often ignore that the end 
users of systems are “auditors”. General auditors 
usually depend on IT staffs to do EDP auditing 
jobs. Such model has high risks to enterprises 
because the criminals of computerizing 
fraudulence are those people who specialize in 
information systems and computer science. 
Therefore, the objectives of future researches 
may design the mechanism or systems that 
auditors can use independently This idea will 
reduce opportunities that IT staffs commit a 
crime in the process of assisting the auditors. As 
soon as the idea can be realized, it is an 
important breakthrough for EDP auditing. 
References 
1. Benbasat, L., Goldstein, D. and Mead, M. 
“The Case Research Strategy in Studies of 
Information Systems:’ MIS Quarterly, VOI. 11, 
Iss. 3, 1987, pp. 369-386. 
2. Benedusi, P., Cimitile. A,. De Carlini U. “A 
Reverse Reengineering Methodology to 
ReconstNct Hierarchical Data Flow Diagrams 
for Sofhvare Maintenance,” Proceedings for 
Conference on Software Maintenance, 1989, 
pp. 180- 189. 
3. Bill, G Case study research methods, 
Continuum, New York 2000. 
4. Butler, G, Grogono, P., Shinghal, R., Tjandra, 
I. “Analyzing the logical structure of data flow 
diagrams in software documents”, 1995, EEE. 
Cetullo, 1. M. “The internal auditor’s role in 
developing and implementing ERJ systems,” 
Internal Auditing, Vol. 15, Iss. 3, May/June 
2000, pp 15-34. 
5. 
6. Cetullo, M. I., Cerullo, M. V., Hardin, T. 
“Computer Techniques Used to Audit The 
Purchasing Function,” Internal Auditing, 
MarchiApril 1999, pp.17-25. 
Davenport, T. H. “Putting the Enterprise into 
the Enterprise System,” H w a r d  Business 
7. 
Review, VoI. 76, Iss. 4, 1998, pp.121-131 
8. Davenport, T. H., Short I. E. “The new 
industrial engineering information technology 
and business process redesign,” Sloan 
Management Review, Vol. 31, Iss. 4, 1990, 
pp.11-28. 
David, S. “Tools of the trade,” The Internal 
Auditor, Vol. 58, Iss. 4, Aug 2001, pp.32-41. 
IO. Jennifer, H. ”ERF’ Systems: Audit and Control 
Risks,” ISACA Spring Conference, April 26 
1999. 
9. 
I I .  Joseph Fong, and Shi-Ming Huang 
Information Systems Reennineering, 
Springer-Verlag Pub, 1998. 
12. Leitch, R A., and Davis, K. R. Accounting 
Information System, Prentice-Hall 
International, 1992. 
13. Prawitt, D., Romney, M., and Zarowin, S. “A 
Journal Survey: The Software CPAs Use,” 
Journal of Accountancy, Vol. ,183, Iss. 2, 1997, 
pp.52-66. 
14. Pual, D. W. “ACL for Windows,” The CPA 
journal, November 1998, pp.40-44. 
15. Robert, K. Y. ADDlications of case study 
research. SAGE Publications, 1993. 
16. Schnirf D. L. “Reengineering the Organization 
Using Information Technology,” Journal of 
System Management, Jan 1993, pp.1442. 
17. Steven, M. G, “Implementing EW,” The 
Internal Auditor, Vol. 56, Iss. 1, Feb 1999, 
pp.40-46. 
18. Thompson, C. “CAAT can do,” The internal 
auditor, Vol. 58, Iss. 3, lun2001, pp.73-75. 
19. Weber, R. Information Svstems Control and 
Audit. Prentice Hall, New Jersey, USA, 1999. 
20. Computer Associates, “ERwin Database 
Design Made Easy, ”hnp : I /  ca . cod  products‘ 
alml enuin.htm 
21. Sybase, ”PowerDesigner Features/ Benifits,” 
http:il www.sysbase.cod products/ 
enterprisemodeling / powerdesigner 
348 
