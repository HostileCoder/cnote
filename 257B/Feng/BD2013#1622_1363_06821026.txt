A System Architecture for Intelligent Logistics System 
Liying Chen, Xianghan Zheng , Guolong Chen
 College of Mathematics and Computer Science 
Fuzhou University, Fuzhou, P.R. China, 350108 
{n110320079, xianghan.zheng, cgl }@fzu.edu.com
 Abstract—Conventional logistics information systems are 
usually designed case by case without consideration of many 
issues in fields of system elasticity, real time tracking service, 
information sharing and inter-working, vehicle routing 
optimization, customer interaction, security control, etc. In 
this paper, we investigate and propose a mobile cloud-based 
architecture for enrichment of existing logistics systems. The 
system architecture includes: customer interaction, 
distributed storage and computing, vehicle scheduling, 
restful-based interaction and transmission, security, mobile 
payment, etc. After that, prototype implementation and 
evaluation work are presented to show feasibility and 
efficiency of proposed solution. 
Keywords-logistics system; vehicle routing optimization;
 mapreduce; restful-based transmission 
I. INTRODUCTION 
Currently, different kinds of information systems have 
been widely deployed in logistics field. However, with fast 
development of technologies (e.g. computer networking, 
mobile internet, GPS, image processing, etc.) and 
continuous increasing customer demand, conventional 
logistics information systems indicate disadvantages due 
to a few realistic limitations: 
1. System Elasticity.  
Conventional logistics systems have to consider the 
purchase of hardware and software on maximum need, and 
make further update according to the dynamic requirement 
[1]. This increases IT infrastructure expense. 
2. Real-time Tracking Service.  
Real-time logistics tracking service has been achieved 
via implementation of RFID technology, as described in 
[2]. However, this could not be widely deployed due to 
high expense of RFID hardware. 
3. Vehicle Routing Optimization. 
Although researchers in academia and industry have 
investigated Vehicle Routing Problem (VRP) and 
proposed corresponding approaches, they are basically not 
efficient in real system which consists hundreds of 
vehicles due to limitations of computing and storage 
capabilities in system server side. 
4. Information Sharing and Inter-working. 
High degree of corporation is a basic requirement for 
logistics system in Quality of Service (QoS) enhancements 
well as cost reduction [3]. However, existing logistics 
systems are designed case by case and usually do not 
consider information sharing and inter-working issues. 
The usage of cloud computing platform might 
overcome above limitations. Cloud computing is a model 
for enabling convenient, on-demand network access to a 
shared pool of configurable computing resources (e.g. 
networks, servers, storage, applications, and services) that 
can be rapidly provisioned and released with minimal 
management effort or service provider interaction [4]. 
Cloud computing has several advantages, such as its 
elasticity, widespread accessibility, shared resource pool, 
service on-demand and service calculable [5]. Additionally, 
cloud based computing model is capable to provide more 
secure services than traditional business models as 
analyzed in [6]. 
Mobile cloud refers to the service mode that access 
cloud services with mobile devices. This, on one hand, is 
an extension implementation of cloud computing, and on 
the other hand, is the capability extension to mobile 
devices [7]. In this paper, we investigate and propose a 
mobile cloud-based architecture for enrichment of existing 
logistics systems to achieve the target to be elastic, 
compatible, and intelligent. In Section 2, we describe 
system architecture and its corresponding technical issues. 
The prototype implementation and evaluation are 
presented in Section 3 and finally the paper is concluded in 
Section 4. 
II. ARCHITECTURE DESIGN
 In this section, we describe a mobile cloud-based system 
architecture for intelligent logistics system. Following the 
introduction, we consider issues related to customer 
interaction, distributed storage, logistics vehicle 
scheduling, MapReduce-based C-W algorithm, 
Restful-based mobile interaction and transmission, 
security and mobile payment. 
A. System Overview 
The proposed architecture involves three main characters: 
User Terminal (UT), Vehicle Terminal (VT) and Logistics 
Cloud Gateway (LCG). 
User Terminal, which can be mobile phone, laptops, 
PC, etc., uses a web browser or a software interface to get 
access to logistics cloud gateway. The connection between 
UT and LCG could be through either mobile or fixed 
network. With terminal a user could log in LCG anytime 
and anywhere to submit order application. After validation, 
a unique dimensional barcode will be generated and sent 
back to identify a specific order. User also could use UT to 
complete mobile payment via third-party payment service 
and track real-time state of corresponding commodities. 
Vehicle Terminal, which can be a simple mobile phone 
or other handled devices with built-in GPS contains two 
2013 International Conference on Cloud Computing and Big Data
 978-1-4799-2829-3/13 $26.00 © 2013 IEEE
 DOI 10.1109/CLOUDCOM-ASIA.2013.30
 426978-1-4799-2830-9/14 $31.00 © 2014 IEE
main aspects of functions. On one hand, it recognizes 
commodities through scanning corresponding QR code; on
 the other hand, it is capable to collect vehicle location 
information and upload it to logistics cloud. Additionally,
 VT could be directed to corresponding task points in 
optimized path. 
Logistics Cloud Gateway is the key element which acts 
as a bridge between front-end terminal and back-end cloud 
computing platform. Inside LCG there are five main 
modules for handling different services, shown as Figure 
1:
 a) User Management. This part interacts with user 
terminal to manage customers’ order and provide 
real-time tracking service. 
b) Vehicle Management. This module mainly deals 
with collection of vehicle location information and 
direction of vehicle path according to logistics 
scheduling module. 
c) Logistics Scheduling. This component analyzes all 
possible vehicle paths and decides which one 
could be the most suitable with consideration of 
distance, time, expense and other factors. 
d) Security Provisioning. This module ensures 
connection (between UT/VT and LCG) security, 
data confidentiality and integrity. 
e) Mobile payment. This module offers two possible 
mobile payment solutions based on either SMS 
payment or online payment. Both of them have 
been widely deployed in our daily life. 
Figure 1. System Architecture 
B. Customer Interaction 
We propose a novel interaction mode which customer is 
capable to handle most logistics related issues online, as 
described in the following:  
a) A customer login LCG anywhere and anytime via 
user terminals (laptop, mobile phone, etc.).  
b) An online form which contains logistics elements 
(original address, destination, available time, etc.) 
should be filled. After that, customer will receive a 
specific 2D QR code related with the specific 
order.  
c) Logistics vehicle arrives at appointed time to 
check and receive corresponding commodity.  
d) Vehicle Terminal uploads GPS information to 
LCG periodically.  
e) Customer is capable to track state of 
corresponding commodity in real-time.  
f) After accomplishment of distribution task, 
customer pays either with SMS or online payment. 
C. Distributed Storage 
Cloud computing platform provides distributed storage 
services for logistics related data, including order 
information, vehicle location information and so on. 
Specifically, logistics data is stored based on Hadoop DFS 
(Distributed File System), which could create multiple 
replicas of data blocks and distribute them on a set of 
cluster nodes [8].DFS has reliable, extremely rapid 
computations and it could reach load balance (shown in 
Figure 2). DFS also makes a balance in performance 
between input and output. The performance is to 
automatically distribute data blocks on the datanodes 
whose free-space is greater than a threshold value. 
Figure 2. Structure of DFS 
D. Logistics Vehicle Scheduling 
There might be a multitude of orders in a certain period of 
time. Therefore, it is necessary to define an efficient and 
reasonable logistics vehicle scheduling mechanism for 
management of existing Vehicle Route Problem (VRP), 
which is described in the following [9]:  
Assume that a logistics distribution center serves n
 customers, each of which (customer i) has a commodity 
with weight  qi , the number of vehicle is  v , and each 
vehicle  k  has a load capacity  Qk . VRP could be 
mathematically presented through a complete weighted 
graph V= (P, L), where P= {0, 1, , n} is a set of nodes 
representing logistics distribution center  (0)  and 
customers (1, 2, , n) . L={( i, j)| i, j?P, i≠ j} is a set of 
arcs that stands for distance between customer i and j.
 Each vehicle starts from and returns logistics center. 
In our approach, we consider vehicle routing problem 
with time windows (VRPTW). More precisely, each 
customer i has to be served in a time window  [ ETi, LTi ],
 otherwise extra penalty cost will be generated. Therefore, 
the question turns to how to minimize total cost during 
427
logistics distribution process, as represented in following 
mathematic formulas: 
(1
 )
 (2
 )
 (3
 )
 (4
 )
 (5
 )
 Where  c represents transportation cost from customer
 i to customer j. x equals to 1 if vehicle k travels from 
customer i to customer j, and otherwise equals to 
0; p	 represents extra cost caused in case that vehicle k 
arrives at customer i before ET; p
 represents extra cost 
caused in case that vehicle k arrives at customer i after  
LT; T represents the time when logistics vehicle arrives 
at customer i ; y equals to 1 if requirement of customer i 
is completed by vehicle k and otherwise equals to 0. 
E. MapReduce-based C-W Saving Algorithm 
We also propose a MapReduce-based Clark-Wright (C-W) 
saving algorithm for handling vehicle routing problem. On 
one hand, MapReduce-based computing model is capable 
to split a big task into multiple sub-tasks and then assign 
them to a set of interconnected cloud nodes for distributed 
and parallel computing [10]; On the other hand, C-W
 saving algorithm considers the savings that could be 
acquired by linking pairs of customer nodes in a system 
that is composed of a central depot serving customer nodes 
[11]. With combination of MapReduce and C-W saving 
mechanism, it is possible to acquire the most suitable 
vehicle path with optimized cost. The handling process is
 described in the following (as illustrated in Figure 3): 
a) According to list<i, p>. Where the key i represents 
customer i and the value prepresents the position of 
customer i. MapBcalculates saving distance 
between any two customers using C-W saving 
algorithm. After that, ReduceBsorts the result and 
outputs list < (i, j), s> ordered by s. 
b) On the other side, MapC (with the same input as 
MapB) considers time windows constraint between 
any two customers. If connection between customer 
i and j violates time windows constraint, the 
connection is marked to be false, otherwise, it is true. 
ReduceCsorts the results by either 0 or 1. 
According to the result of ReduceBand ReduceC,
 Map D constructs vehicle path via adding customer pairs 
and then checks its feasibility. After that, ReduceD is 
capable to sort the vehicle path and select the most suitable 
route. 
Figure 3. MapReduce-based handling mechanism 
F. Restful-based Mobile Interaction and Data 
Transmission 
Due to realistic limitations (e.g. kernel, network, storage, 
etc.) of mobile devices, we suggest a lightweight restful 
protocol [12] for mobile cloud interaction and data 
transmission. Compared with traditional SOAP-based web 
service approach, restful-based solution is capable to 
provide simple, efficient, and more stable services. It 
offers lightweight connection and data transmission via 
removing most of redundant affiliated xml related element. 
This greatly reduces size of transmission message and 
RTT time. 
G. Security 
We suggest implementation of Trust Computing Platform 
(TCP) with active security defense capability in vehicle 
terminal. Before accessing to logistics cloud gateway (for 
example, every time starting on), we propose an embedded 
TPM (Trusted Platform Module) hardware, combined with 
encryption / decryption technology and trust chain transfer 
technology for measurement of user's identity and 
platform’s state. If measurement result meets the 
predefined security policy, then vehicle terminal is 
allowed to access to logistics cloud gateway. Otherwise, it 
is forced to connect to a specific isolated area for security 
improvement. 
Besides, the connections among user terminal, vehicle 
terminal and logistics cloud gateway should be securely 
encrypted. We suggest the implementation of certificate 
based security approach. On one hand, certificate proves 
legitimacy of the specific node and helps establish secure 
session; on other hand, it provides data confidentiality, 
integrity and authentication among different parties. 
Additionally, user should input the right user identity 
and password in order to get access to logistics cloud 
gateway. 
Min∑ ∑ ∑ cx+p	 ∑ Max[ET ? T, 0]+p
 ∑ Max[T ? LT, 0]			 .
 With a few constraints: 
∑ qy ≤ Q ,   i = 1,2  n; k = 1,2  v.
 ∑ y	 = 1, i = 1,2  n .
 ∑ x = y,   i = 1,2  n	 ; k = 1,2  v.
 ∑ x = y,   j = 1,2  n	 ; k = 1,2  v.
 428
H. Mobile Payment 
Today, it is very common to use mobile devices for 
payment. In order to realize mobile payment, we proposed 
to use SMS payment and online payment. In SMS 
payment solution, logistics cloud sends payment 
information to customers via SMS and customers can pay 
for the cost directly with replying the message. The online 
payment solution relies on mature third-party payment 
platform, such as PayPal. 
III. IMPLEMENTATION AND EVALLUATION
 A. Prototype Implementation 
We have built a logistics cloud platform testing bed in four 
PCs (one for logistic cloud gateway, three for cloud 
computing platform nodes). Huawei U8825 mobile phone 
(with Android v2.2), Lenovo A2105 (with Android v4.0),
 Lenovo A2107 (with Android v 4.0), Iphone 4S and IPAD 
4 are selected as user terminal and vehicle terminal testing 
tools. VMware Server 2.0.2 and Hadoop 1.0.2 are used to 
simulate cloud distributed environment. HBase 0.92.0 is 
used as a distributed data storage solution. We do test on 
campus network. 
Before testing, we manually configure user profiles in 
logistics cloud gateway. We create two users (Alice and 
Bob) with user identity and password. This ensures that 
mobile agent is capable to pass security protection of 
logistics cloud platform. We assume that Alice wants to 
send a commodity to Bob and track the real-time 
information of order. It is possible to create more user 
profiles for more tests. 
In some cases of experiment, two-dimensional codes 
can’t be recognized. One possible reason is that equipped 
camera in Android device is not capable to identify 
captured 2D QR code. In our testing, Both Alice and Bob 
are capable to acquire real-time tracking information. 
However, it takes at most 60 seconds to show update 
because we set refresh time as 60s. Although this is 
enough for normal usage, it might reduce user experience. 
We also find that in some cases our implemented 
platform could not obtain accurate location information of 
the vehicle. The distance deviation could even reaches at 
most 2000 meters. This problem might be in situation 
when GPS signals are too weak to acquire accurate 
location information. Overall, the prototype works well. 
Figure 4. Prototype interface 
A&B: User Login. User inputs username and password. 
The current tab pops up a toast to inform customer the 
login state. After been certificated, the main menu displays 
on the screen of mobile phone. 
C&D: Add order with user terminal. User fills in an 
order application form, and then price will be 
pre-evaluated. User can choose SMS payment or online 
payment. 
E&F: Generation and recognition of two-dimensional 
code. A dimensional barcode is generated for indentifying 
specific order. Through scanning and recognition of 
two-dimensional code, customer and logistic vehicle 
terminal are capable to achieve corresponding order 
information. 
G: Logistics vehicle scheduling. Cloud platform 
calculates and gives a suitable vehicle route. 
H: Real-time tracking. When user clicks tracking 
request button, logistics cloud returns current location of 
corresponding commodity.  
B. Vehicle Scheduling Mechanism Comparison 
We simulate a simple vehicle scheduling scenario through 
creating (manual configure in logistics cloud gateway 
component) one distribution center, four vehicles and nine 
customer nodes (randomly) in order to evaluate differences 
between two cases: without consideration of time windows 
and with consideration of time windows (our proposal). In
 both cases, four routes are generated respectively (see 
Figure 5). With comparison, it is capable to draw 
conclusions that our proposed vehicle scheduling 
mechanisms not superior to traditional C-W with aspect of 
travelling distance and cost; however, our proposal has its 
own advantages, especially when considering timeliness 
and satisfaction of users. 
429
Figure 5.  (a) Using C-W saving algorithm without consideration of 
time windows; (b) Using C-W saving algorithm with consideration of 
time windows 
C. Resource Response Time Comparison 
We also evaluate our proposed restful-based approach 
from aspect of Resource Response Time (RRT), which is 
defined as total latency between request forwarding and 
file transfer. For comparison, we use open source testing 
tools soapUI [13] to execute SOAP-based web service for 
mobile negotiation and data transmission between user 
terminal and logistics cloud gateway. According to our 
experiment, through restful-based interaction and data 
transmission, it is capable to save 40%amount of 
transmission data and reduce 50% of Resource Response 
Time, shown in Figure 6. 
Figure 6.  Comparison between restful-based and SOAP-based 
approach 
D. Comparison with Conventional Solution 
Table 1 gives comparison among conventional logistics 
system and our proposed solution.  The comparison 
shows that due to advantages of cloud platform and 
proposed optimization approaches, mobile cloud-based 
logistics system is superior in many aspects to 
conventional logistics systems. 
Table 1. Performance comparison between conventional system and 
proposed system 
Conventional  
Logistics System
 Proposed logistics 
System
 Elasticity
 Poor, must consider 
purchase of hardware 
and software on 
maximum need.
 Good, can be 
automatically and 
rapidly expanded to 
dynamic changes.
 Customer 
Interaction 
Experience
 Poor, customer need 
go to logistics 
distribution center, 
fills in logistics form, 
and pays bill.
 Good, all 
sub-functions are 
completed online 
with self-service.
 Real-time 
Tracking
 Fair, could achieve 
part of tracking, 
however, not 
real-time.
 Good, realizes full 
visualization
 Inter-working 
and Data 
Sharing
 Poor?usually 
designed case by
 case, lack of sharing 
capability.
 Good, cloud 
platform is friendly 
for interworking.
 Security
 Fair, can be integrated 
with specific security 
approaches.
 Good, relies on 
cloud-based 
security 
mechanisms.
 Data 
Transmission 
Efficiency
 Fair, uses heavy web 
service based control 
protocol.
 Good, uses a 
lightweight Restful 
protocol.
 IV. CONCLUSIONS
 We propose a mobile cloud-based architecture for 
intelligent logistics system. Following the system 
architecture is the main issues including customer 
interaction, distributed storage and computing, real-time 
tracking, logistics vehicle scheduling, Restful-based 
transmission, security and mobile payment, etc. We use 
the implementation, simulation and comparison to show 
the feasibility and efficiency of this architecture. 
Future work will consider security issues with special 
focus on possibility of a vTPM (Virtual TPM) for security 
enhancement, as proposed in paper. In this solution, a
 virtual TPM (vTPM) framework provides a set of 
trustworthy services in software point of view. This 
framework allows multiple mutually distrustful and 
unaware guests to share a TPM without requiring 
modifications. This may be implementable in our proposed 
logistics system. 
ACKNOWLEDGEMENTS
 This paper is supported by the National Natural Science Fo
 undation of China under Grant No. 61103175 and No.1127
 1002, the Key Project of Chinese Ministry of Education un
 der Grant No.212086; the Technology Innovation Platform
  Project of Fujian Province under Grant No. 2009J1007; th
 e Key Project Development Foundation of Education Com
 mittee of Fujian province under Grand No.JA11011 and J
 A12016. 
REFERENCES
 [1] Li X, Wang Y, Chen X. Cold chain logistics system based on 
cloud computing[J]. Concurrency and Computation: Practice and 
Experience, 2012, 24(17): 2138-2150.  
[2] Zhang Y. RFID/GPS/GPRS-based logistics monitoring and 
management system[C] //Electronic System-Integration 
Technology Conference (ESTC), 2012 4th. IEEE, 2012: 275-278. 
430
[3] Judd J D, Sarin S C, Cundiff J S. Design, modeling, and analysis of 
a feedstock logistics system[J]. Bioresource technology, 2012, 
103(1): 209-218. 
[4] Mell P, Grance T. Draft nist working definition of cloud 
computing-v15[J]. 21. Aug 2009, 2009, 2: 123-135. 
[5] Wang X. Analysis on Cloud Computing-based Logistics 
Information Network Mode[C] //Computational Intelligence and 
Security (CIS), 2011 Seventh International Conference on. IEEE, 
2011: 1286-1289. 
[6] Feng D G, Zhang M, Zhang Y, et al. Study on cloud computing 
security[J]. Journal of Software, 2011, 22(1): 71-83. 
[7] Chun B G, Ihm S, Maniatis P, et al. Clonecloud: elastic execution 
between mobile device and cloud[C]//Proceedings of the sixth 
conference on Computer systems. ACM, 2011: 301-314. 
[8] Howard J H, Kazar M L, Menees S G, et al. Scale and performance 
in a distributed file system[J]. ACM Transactions on Computer 
Systems (TOCS), 1988, 6(1): 51-81. 
[9] Wang Y. A Hybrid Approach Based on Ant Colony System for the 
VRPTW[C]//Advanced Technology in Teaching-Proceedings of 
the 2009 3rd International Conference on Teaching and 
Computational Science (WTCS 2009). Springer Berlin Heidelberg, 
2012: 327-333. 
[10] Dean J, Ghemawat S. MapReduce: a flexible data processing 
tool[J]. Communications of the ACM, 2010, 53(1): 72-77. 
[11] Fan L, Qin Q. The Optimization Model and Empirical Analysis for 
Vehicle Routing Problems with Time Windows Based on CW 
Algorithm[M]//LISS 2012. Springer Berlin Heidelberg, 2013: 
253-258. 
[12] Pautasso C, Zimmermann O, Leymann F. Restful web services vs. 
big'web services: making the right architectural 
decision[C]//Proceedings of the 17th international conference on 
World Wide Web. ACM, 2008: 805-814.  
[13] Susila S, Vadivel S, Julka A. Broker architecture for Web Service 
selection using SOAPUI[C]//Cloud Computing Technologies, 
Applications and Management (ICCCTAM), 2012 International 
Conference on. IEEE, 2012: 219-222. 
431
