The 7th IEEE International Conference on Intelligent Data Acquisition and Advanced Computing Systems: Technology and Applications
 12-14 September 2013, Berlin, Germany
 Strong Passwords: Practical Issues
 Keisuke Kato, Vitaly Klyuev
 Department of Computer Science and Engineering, University of Aizu, Fukushima, Japan
 {s1190085,vkluev}@u-aizu.ac.jp, URL: http://www.u-aizu.ac.jp/?vkluev
 Abstract – Nowadays, there are a lot of news about
 hacking attacks over the Internet against companies and
 government organization Web sites in the world. Victims
 are big companies such as Evernote, Facebook, Google and
 others. Web server providers understand that the current
 authentication systems and passwords should be strong. The
 end users who are not specialists in the security should
 understand how to select strong passwords. Now, however,
 there is no ideal way to set a strong password. Most of
 the users don’t know important elements for password
 protection. In this paper, we analyze the tendencies in
 the password protection. We survey 262 students of the
 University of Aizu. A questionnaire consists of 15 questions
 about length of a password, strategy to create a new
 password and etc. We discuss useful techniques to create
 strong passwords and compare them. Our analysis is based
 on our data and the state of the art literature review. Our
 results can be helpful for the users to create a new password
 and/or change it and make it strong.
 Keywords—Security, Password, Hacking, Survey, Tendency,
 Authentication
 I. INTRODUCTION
 Password authentication is one of important services on
 the Internet, personal computers and so on. We always use
 password authentication to be logged into Web applica-
 tions, remote systems and etc. Now password authenti-
 cation is an essential service in our life for protecting
 our data. On the other hand, this service is also very
 dangerous cause of hacking attacks. If the user set a
 password that is easy to hack or guess, the user may
 loose money, sensitive data, etc. Thus, many companies
 and/or governmental organizations consider this service as
 2-step password authentication for protecting the data. For
 example, Google has developed 2-step verification system
 in 2011 [1] and all user accounts of Google can use 2-
 step password verification for protecting their data from
 hackers. This service should be very strong, however it’s
 not a complete system yet.
 Passwords are, of course, not the only the means to
 authenticate end users to systems. Book [2] discusses
 three key options for authentication. The first one, it is to
 retain physical control on the device such as a remote car
 door key. The second one is a password. The third option
 is to use something like a fingerprint or iris pattern. Also
 recently Hardware Authentication is one of them. But for
 the cost reason, most systems take passwords. Thus, we
 have to know more details about passwords. To obtain a
 good knowledge of password authentication, there are a
 lot of sources. To understand password security better, we
 consider the problem from three different angles:
 • Will the user remember the password?
 • Will the user choose a password that’s hard to hack
 or guess?
 • Will the user reuse the password on other systems
 and/or applications?
 In this paper, we seek to better understanding of the
 tendencies that make creating and/or changing passwords.
 We discuss key security problems, tendencies in password
 protection techniques, misunderstanding points for the
 users, etc. We present the results of a survey of 262
 University of Aizu undergraduate students. The results of
 our investigations are important for end users to help in
 setting the strong passwords.
 This paper is organized as follows. In Section II,
 we discuss basic issues to encrypt a password, hacking
 approaches, protecting measures, and some tools to hack
 passwords. In section III, we discuss the tendencies in
 password protection, show the results of our question-
 naire, and compare them with other data. In Section IV,
 we show some japanese data collected by the Information-
 technology Promotion Agency, Japan [3] and compare
 them with our data. In Section V, we discuss practical
 recommendations to set strong passwords. In Section VI,
 we highlight our significant findings.
 II. PASSWORD HACKING
 The standard way to present the passwords on the
 remote server or on the local computer is to encrypt them.
 Because keeping a plaintext file with passwords is very
 dangerous, passwords are often protected by encrypting
 them using one-way algorithms. Encryption algorithms
 use hash functions.
 In this section, we analyze ways to construct hash
 functions and discuss the approaches to hack or guess
 passwords.
 A. One-Way Encryption
 When we try to access a Web application, on-line
 system etc, the password is passed through a one-way
 function and the user is logged into only if it matches a
 value of the stored one already. However, actually we use
 a more precisely techniques. Thus, the right way to do it
 is to
 978-1-4799-1429-6/13/$31.00 ©2013 IEEE 608
1) generate random numbers by a pseudo-random gen-
 erator, that is called salt
 2) pass through a one-way function with the password
 and the salt
 3) If it matches a value, store the salt and the hash
 value in the file.
 When the user logged in next time, the stored values
 are used for checking a password.
 One-way functions are one of classical type of ciphers
 and also known as Cryptographic hash functions. They
 are used to compute checksums on files: you can compute
 hash values of the files to identify which files are already
 known and which are new ones. Also hash values are
 used as means of checking the integrity of files as they are
 changed if files are corrupted. An example of this usage is
 the digital signature. Signature algorithms tend to be slow
 if the message is very long, so it’s usually convenient to
 sign a message digest rather than the message itself.
 There are three properties related to on one-way functions.
 The first property is one-way. Given an input x, we
 can easily compute the hash value h(x), however, it is
 very difficult to find the input x, if the hash value h(x)
 is known. (See Figure 1) On the other hand, a pseudo-
 random function will also have this property or will be
 used to distinguish from a random function.
 The second property is that output will not give any
 information about any part of the input. Thus, a one-
 way encryption of the value x can be accomplished by
 concatenating it with a secret key k and computing h(x,k).
 If the the number of possible salt values is not enough to
 utilize it, then the one-way encryption will produce a lot
 of collisions in calculation of the hash values.
 The third property is that it’s difficult to find collisions
 when the two different messages M1 = M2 will result
 with h(M1) = h(M2). If the hash function output is an
 n-bit number, the number of hashes the enemy will need
 to compute before he can expect to find. A match will be
 about 2n/2 hashes. This issue is very important in security
 engineering.
 For the one-way function, it is crucial to have these
 properties. If it defects just only one thing, the function
 can be hacked easily by hackers and the user will loose
 a lot of data. For example, MD5 is one of the popular
 hash functions, however it was broken in 2004 [4], [5];
 collisions can now be found easily, even between strings
 containing meaningful information.
 B. Hacking Approaches
 For a hacker, the first step to hack a password is to
 encrypt the possible password candidates and to compare
 the result values with the values of encrypted real pass-
 word. Actually, there may be some weak points in some
 functions or hackers can find the weak points faster than
 specialists in security can do that; and hackers may attack
 these weak points utilizing a lot of ways. The one of the
 common way to break the passwords is to scan the whole
 Figure 1. Parts of one-way function’s properties
 space of the character set used in passwords for a brute
 force attack. The one way functions or algorithms like
 MD5, SHA etc are very fast to run. For hackers, however,
 this is very important because they can use a brute force
 attack easily. Base on this, a time-effective approach is to
 think about the candidates that are to be the actual words,
 patterns, or combination of the characters, which are not
 difficult to remember [6].
 Another common way used in practice is dictionary
 attacks. In the past, some system that use an encrypted
 password file made readable. A user who can fetch this
 file then try to break passwords offline using a dictio-
 nary. Thus, he encrypts the values in his dictionary and
 compares them with those in the file. This activity is
 called dictionary attacks. Actually most modern operating
 system have fixed this problem. However, the dictionary
 attacks are still implemented. Study [7] discuss fast dic-
 tionary attack algorithms by using time-space tradeoff and
 actually their algorithm recovered 67.6% of the passwords
 using a 2? 109 search space.
 C. Hacking Tools
 There are several hacking tools available to hack or
 guess passwords. The target of hacking tools is two
 object: passwords and the function for administrators to
 reactively check the passwords used in the system. The
 reactive checking may increase the system security by
 finding the easy to hack passwords and by warning the
 related uses to change their passwords to prevent their
 accounts from being cracked by intruders [6]. John the
 Ripper and Hashcat [8], [9] are the tools to do the analysis
 and provide information on methods used by hackers.
 III. TENDENCIES IN THE PASSWORD PROTECTION
 We do hope a lot of end users can set strong passwords
 in the future. However, now the Internet community is
 facing many problems. One of them is in many misun-
 derstandings in the security problems. In this section, we
 focus on this problem. We discuss which information is
 true or not.
 609
A survey on password protection issues was conducted
 in April 2013 at the University of Aizu. The participa-
 tions are 163 second year undergraduate students and 99
 third year undergraduate students majoring in Computer
 Science. A questionnaire in paper-based format was dis-
 tributed among 262 students. It consists of 15 questions. A
 goal of this survey was to get the information on password
 usage by unprofessional security users. We summarize the
 results of discussions by using survey data and data from
 others sources [6], [10]–[13].
 A. Difficulties with a password structure
 Our results shows that 8% (22) of students said that
 their password is strong and 80% (211) of students said
 that it is not strong. It means that they don’t have a
 good strategy to set strong passwords. Another interesting
 outcome is: 40% (105) of students use the same password
 for different accounts such as Google account, Facebook
 account, etc. The mean of accounts that is used for the
 same password is 5.4 accounts. Study [13] shows that
 about 30% of users used the same password four or more
 times. Thus, we need a strategy to set a strong password
 for each end user. So, we tried to understand a strategy
 to set new password from the data of our survey but we
 could not find it. We prepared following selections for
 this question.
 • Password based on the first letter of each word in a
 phrase.
 • Based on the name of someone or something.
 • Based on a word or name with numbers / symbols
 added to beginning or end.
 • Based on a word or name with numbers and symbols
 substituting for some of the letters.
 • Based on a word in a language other than English
 • Based on a phone number
 • Based on an address
 • Based on a birthday
 • Abbreviation consisting of the first characters of the
 phrase/sentence
 • Others
 However, 36% (96) students selected ”Others” and 16%
 students selected ”I prefer not to answer”. The length of
 the passwords is very important issue in the password
 protection. From our observation we found that many
 users have one big misunderstanding related to passwords.
 It is about long passwords.
 Actually, many users believe that long passwords are
 equal to strong passwords but this is not true. Why the
 long password is not equal to the strong password? All
 users must memorize the long passwords. However it is
 very difficult for them to memorize the string like this
 ”qVwN2s6K@Ka”. Thus, they create the long password
 that is very easy to memorize and then many users
 use grammatical structure such as ”Ihave3cats” for the
 passwords [11]. This password may be long but applying
 the dictionary attack, it can be easily guessed. As a
 Password Length
 Frequenc
 y
 0 5 10 15 20 25
 0
 20
 40
 60
 80
 10
 0
 Figure 2. Tendency of password length
 result, the possibility to hack or guess increases from 6%
 to 20.5% [11]. We carefully analyzed resulting sheets.
 Figure 2 shows the distribution of the password length.
 The mean of password length is 9.1 characters. Figure 3
 and Table I shows the difference of distribution between
 third year and second year students. For 2nd year students,
 the standard deviation is 2.4 but for third year students, the
 standard deviation is 3.0. It means third year students have
 more variations in password length compared to second
 year students.
 Table I. DIFFERENCE OF STANDARD DEVIATION BETWEEN 2ND
 YEAR AND 3RD YEAR STUDENTSQuestion Summary ?(2ndyear) ?(3rdyear)
 Password Length 2.409025 3.071228
 How many lowercase letters? 2.832335 3.421342
 How many uppercase letters? 1.646054 2.66999
 How many numerical letters? 1.667903 3.61654
 Study [6] shows the relationship between the password
 length and strength of passwords. The portion of the
 strong passwords with the length of 7 characters has a
 proportion of 96 % among the whole passwords. Such a
 high percentage is not observed for the passwords with
 the length less than 7. According to these results, number
 7 is the critical threshold value of the password length
 and the passwords including less than 7 characters may
 be seen as weak. Another data related to the character
 lengths of the passwords is that the password with the
 exact length of 8 characters have a rate of 45 % among
 the all passwords. This last observation implies that the
 users have a high tendency on choosing passwords with
 8-character long.
 Study [11] suggests to use Part-of-Speech tagging
 that is such as Determiner Adjective Adjective Noun to
 hack and utilize common hacking tools characterized in
 Section II.
 610
Password Length
 Frequenc
 y
 0 5 10 15 20 25
 0
 10
 20
 30
 40
 50
 Frequenc
 y
 0
 10
 20
 30
 40
 50
 Figure 3. Difference between 3rd year and 2nd year students
 B. Difficulties with Memorizing Passwords
 In fact, the password problem will be summed up as
 Please choose a password that is difficult to remember
 and Don’t write down it on paper. Book [2] discusses
 problems related to memorizing passwords under four
 main headings.
 1) Naive Password Choice: One possible explanation
 is that many people try to use the same password every-
 where.
 2) User Abilities and Training: The best compromise
 will often be a password checking program that rejects
 clearly bad user choices, plus a training program to get
 your compliant users to choose mnemonic passwords.
 Password checking can be done using a program like
 crack to filter user choices [14].
 3) Design Errors: Attempts to make passwords mem-
 orable are a frequent source of severe design errors. Es-
 pecially with the many systems built rapidly by unskilled
 people in the dot com rush by businesses to get online.
 So, the smart user will avoid their business; famous one,
 whose mothers’ maiden names are in Who’s Who, should
 be certainly avoided [2].
 4) Operational Failures: The user is not only wrong
 with password selections. Nowadays, there are many web
 applications running on databases that use well-known
 default master passwords and websites listing the defaults
 for everything in sight. These passwords will be hacked
 soon because the default password is using well known
 patterns and hacker knows this fact.
 C. Tendencies to Create Passwords
 We show details about the nature of characters in the
 passwords. The mean of lower-case characters in the
 password is 5.1 characters and the upper-case characters
 is 1.3 characters and the numerical characters is 2.8
 Terms
 Frequenc
 y
 0 50 100 150 200
 0
 20
 40
 60
 80
 10
 0
 12
 0
 Figure 4. Period of time to change the password
 characters. We compared this data with data discussed
 in [10], [12]’s and the results are very similar to each
 others. Thus, this data is not only unique data for our
 university. About 50% of characters in the passwords are
 in lower-case.
 Study [6] reveals another tendency in creation of pass-
 words that the users also prefer to include uppercase
 characters in the passwords. One important issue from this
 data is that passwords containing at least one punctuation
 character such as ?, ”, !, &, <, > etc are not used
 often but the probability to hack them is very low. The
 outcome from this is: we may use more often punctuation
 characters to set our passwords. From our survey, we
 observe that 6% of students use these characters in the
 passwords.
 Figure 4 shows the distribution of data obtained over
 periods of time to change the password. The value of 0
 means that the participant of the survey does not change
 the password at all. Numbers mean the period in days to
 change the password. This result is very surprising for us
 because about 43% (115) of students have never changed
 the password at the resources like Gmail, Facebook, etc
 since they set the password for first time. Actually, at
 our university, every student must change the university
 account password within 90 days since the password
 has been set. Only 17% (28) of second year students
 have changed the password within 90 days on external
 services. However we will not force them to change their
 password because according to [15] that may be happened
 to change passwords to improve security but much to
 increase everyone’s frustration. We should note, hackers
 may be waiting for the change of the password to hack it.
 Thus, changing the password should be considered very
 careful.
 Table II shows the rate of participants answering ques-
 611
Table II. RATE OF PARTICIPANTS WHO ANSWERED PRIVATE
 QUESTIONS.
 Question Summary Percent Answering
 Q1 Password Length? 80% (211 students)
 Q5 Which is more applicable strategy to set passwords 88% (168 students)
 Q8 How often do you change your password? 79% (208 students)
 Q10 How many lowercase letters? 62% (163 students)
 Q11 How many uppercase letters? 63% (165 students)
 Q12 How many numerical letters? 62% (163 students)
 tions touching the participant privacy. The privacy issue is
 very sensitive for Japanese mentality. Our questionnaire
 has the selection ”I prefer NOT to answer” for partici-
 pants who don’t want to answer to the question.
 Table III. RATE OF PARTICIPANTS WHO SELECTED ”I PREFER NOT TO
 ANSWER” TO QUESTIONS.
 Question Summary Percent Answering
 Q1 Password Length? 19% (50 students)
 Q14 How many different passwords do you have? 24% (52 students)
 Q11 How many uppercase letters? 30% (81 students)
 Q12 How many numerical letters? 31% (82 students)
 Q10 How many lowercase letters? 31% (83 students)
 Q13 Do you think your password is strong? 5% (13 students)
 Q2 Do you write down password? 7% (19 students)
 Q3 Do you use the same password for different accounts? 8% (22 students)
 Q5 Which is more applicable strategy to set passwords 10% (26 students)
 Q6 Do your passwords have some keys? 12% (33 students)
 Q9 Do you use any of strategies to create password? 16% (44 students)
 Q8 How often do you change your password? 18% (48 students)
 Table III shows the rate of participant who selected
 I prefer not to answer variant for questions. We found
 important outcome from our observation: the questions
 that related to privacy (questions from the first half of the
 table) became high percentage and not related to privacy
 (the second half of the table) became low percentage.
 D. 2-Step Authentication
 2-step authentication is a system to be logged into a
 Web Application etc. There are two steps for users to
 verify whether the user is correct or not.
 Step1: You must input a password and your user name.
 Step2: If Step1 is successful, the company will send you
 the e-mail and you will get a sequence of alphabetical,
 numerical characters or both. The e-mail address is that
 your cellphone’s company distributed you the e-mail
 address such as @company name.com, not such as Gmail,
 etc. And then, you must input the sequence in several
 minutes because the sequence has a limit to input as an
 available sequence. If it’s successful, you will log in but
 if it’s not successful, you must go back to Step1.
 This is 2-step authentication have already used by
 many big companies such as Google [1]. We strongly
 recommend you to use it for protection your data.
 IV. ISSUES RELATED TO JAPAN
 The hacking attacks are increasing in the world. How-
 ever for the developing security area in 2012, the quantity
 of ”Unknown” virus that is never seen decreased about
 half of it compared to 2010 in Japan. (See Figure 5) It
 means that we reveal some viruses called ”Unknown”
 and find a way to defense against them. However, the
 Figure 5. Damage caused by hacking access
 ID/Password viruses are almost the same. So, we must
 know more details about passwords and keep them in
 mind for protecting our sensitive data. If users have these
 knowledge in these practical security issues, the password
 security level that company’s security and personal secu-
 rity will be higher [3].
 The kind of hacking attacks are ”Other”, ”Unknown”,
 ”Defect of Setting”, Version/Batch” and ”ID/Password”.
 Shortly, term 1 means the period between Jan.2010 and
 Jun.2010, term 2 means Jul.2010 and Dec.2010, term 3
 means Jan.2011 and Jun.2011, ”term 4” Jul.2011 and
 Dec.2011, term 5 means Jan.2012 and Jun.2012.
 V. PRACTICAL SUGGESTIONS
 The final question in the questionnaire is on the par-
 ticipant understanding of strong passwords. The students
 were asked to select the strongest password among the
 following:
 a) the password that consists of some English phrases
 or words and is as long as possible. (ex: thisis-
 strongpassword)
 b) the password that includes numerical, upper-case,
 lower-case and special characters and is short. (less
 than 8 characters)
 c) the password that is created as an abbreviation from
 a phrase of sentence. (ex. I want be great Software
 Engineer ? IwbgSE)
 26 students selected variant a, 182 students selected
 variant b and 35 students selected variant c. In Section III,
 we revealed the long password is not always strong
 password and variant a is one such example it can be
 easily guessed using grammar tools. Variant c is well
 612
known way for setting passwords and this is easy for the
 end user to memorize. However, hackers also know this
 way for setting it and actually they work on how to break.
 So, variant c is not weak but not very strong. Variant b is
 actually strong password. However, for memorizing the
 passwords, variant b is NOT good for end users.
 From this survey, we analyzed the end users can
 distinguish which password is strong. On the other hand,
 they don’t have good strategies to set a strong password
 by themselves. Actually, in second year students, 9%
 students selected variant a, 71% students selected variant
 b, and 10% students selected variant c. And in third year
 students, 11% students selected variant a, 65% students
 selected variant b, 18% students selected variant c. Thus,
 an understanding the strong password is the same level
 between second and third year students.
 Now it is time to summarize the users misunderstand-
 ings. Studies [11], [16]–[18] and results of our investiga-
 tions are good sources for such explanation.
 • The long password is NOT always equal to the
 strong password. when you set the passwords, you
 should set passwords such as long, without language
 grammatical structure, easy to memorize etc [11].
 • A password consisting only of numerical characters
 or only alphabetical characters such as only upper-
 case or only lower-case is very dangerous. It will
 be easily hacked or guessed. The users should use
 numerical and alphabetical characters to set pass-
 words [17], [19].
 • We strongly recommend the users for memorizing
 passwords to use a password management tools such
 as Last Path, 1Password, KeePass, Password Dragon,
 etc [18].
 • Users should avoid to use such as ”password”,
 ”abc123” and personal data such as name, birthday,
 address, telephone number, etc directly. It’s well
 known news that a lot of users set such passwords
 and hackers have already known it.
 • A password that usable as abbreviation from a phrase
 of sentence is good for end users to memorize the
 password.
 • The user should NOT tell any person their passwords
 and should NOT share it with any person.
 VI. CONCLUSION
 In this paper, we focused on the practical issues re-
 lated to setting a strong password in the real world. We
 discussed security issues related to password protection
 tendencies, misunderstandings in the password protection,
 difficulties to memorize the passwords, strategies and
 algorithms. Our analysis is from survey of 262 University
 of Aizu students and obtained results are compared with
 data from different sources. We analyzed key problems
 for setting a strong password for Web applications, remote
 systems, etc. Now, however, many companies convert the
 password authentication to 2-step password authentica-
 tion. This is the best way to authenticate users. However
 we are thinking that for utilizing 2-step password authenti-
 cation more effectively, we must know more details about
 password authentication for protection our or company’s
 sensitive data.
 The recommendations discussed in this paper also can
 help set the strong passwords. It means that if password
 authentication is converted to 2-step authentication, we
 can set a more strong password system.
 REFERENCES
 [1] “Google 2-step verification,” http://www.google.com/landing/
 2step/.
 [2] R. Anderson, Security Engineering: A Guide to Building Depend-
 able Distributed System, Second Edition. Wiley Publishing, 2008.
 [3] “Infromation-technology promotion agency, japan,” http://www.
 ipa.go.jp/.
 [4] X. Wang, D. Feng, X. Lai, and H. Yu, “Collisions for hash
 functions md4, md5, haval-128 and ripemd,” IACR Cryptology
 ePrint Archive Report 2004/199, 2004.
 [5] H. Y. XY Wang, “How to break md5 and other hash functions,”
 in Advances in Cryptology-Eurocrypt, 2005.
 [6] I.Korkmaz and M.E.Dalkilic, “The weak and the strong password
 preferences: A case study on turkish users,” SIN ’10 Proceedings
 of the 3rd international conference on Security of information and
 networks, pp. 56–61, 2010.
 [7] A. Narayanan and V. Shmatikov, “Fast dictionary attacks on
 password using time-space tradeoff,” CCS ’05 Proceedings of the
 12th ACM conference on Computer and communications security,
 pp. 364–372, 2005.
 [8] “John the ripper,” http://www.openwall.com/john/.
 [9] “Hashcat,” http://hashcat.net/oclhashcat-plus/.
 [10] R. Shay, P. G. Kelley, S. Komanduri, P. G. Leon, M. L. Mazurek,
 L. Bauer, N. Christin, and L. F. Cranor, “Encountering stronger
 password requirements: User attitudes and behaviors,” Proceedings
 of the Sixth Symposium on Usable Privacy and Security, 2010.
 [11] Ashwini.Rao, Birendra.Jha, and Gananand.Kini, “Effect of gram-
 mar on security of long passwords,” CODASPY ’13 Proceedings
 of the third ACM conference on Data and application security and
 privacy, pp. 317–324, 2013.
 [12] M. Dell’Amico, P. Michiardi, and Y. ves Roudier, “Password
 strength: An empirical analysis,” International Conference on
 Computer Communications, 2010 Proceedings IEEE, pp. 1–9,
 2010.
 [13] D. Hart, “Attitudes and practices of students towards password
 security,” Journal of Computing Sciences in Colleges, 23(5), pp.
 169–174, 2008.
 [14] F. Bergadano, B. Crispo, and G. Ruffo, “Proactive password check-
 ing with decision trees,” Proceedings of the 4th ACM conference
 on Computer and communications security, pp. 67–77, 1997.
 [15] P. Y. Logan and A. Clarkson, “So long, and no thanks for the
 externalities: The rational rejection of security advice by users,”
 NSPW ’09 Proceedings of the 2009 workshop on New security
 paradigms workshop, pp. 133–144, 2009.
 [16] C. Herley, “Teaching students to hack: curriculum issues in in-
 formation security,” SIGCSE ’05 Proceedings of the 36th SIGCSE
 technical symposium on Computer science education, pp. 157–161,
 2005.
 [17] “The maximum time required to analyze password by characters
 and/or the number of characters in use,” http://www.ipa.go.jp/
 security/english/virus/press/200809/E PR200809.html/.
 [18] “How i’d hack your weak passwords,” http://lifehacker.com/
 5505400/how-id-hack-your-weak-passwords.
 [19] “Password recovery speeds,” http://www.lockdown.co.uk/?pg=
 combi&s=articles.
 613
