An improved similarity measure method in 
Collaborative Filtering Recommendation Algorithm 
 
Jiumei Mao 
School of Computer Science 
& Technology, Soochow 
University 
Suzhou, China 
mao_jiumei@126.com 
Zhiming Cui 
School of Computer Science 
& Technology, Soochow 
University 
Suzhou, China 
szzmcui@suda.edu.cn 
Pengpeng Zhao* 
School of Computer Science 
& Technology, Soochow 
University 
Suzhou, China 
ppzhao@suda.edu.cn 
Xuehuan Li 
School of Computer Science 
& Technology, Soochow 
University 
Suzhou, China 
lixuehuan538@163.com
  
 
Abstract—Collaborative filtering recommendation technology 
is successfully used in personalized recommendation services. 
Since the magnitudes of users and commodities in E-commerce 
system has increased dramatically, the user rating data in the 
entire item space become extremely sparse. There is a certain 
deviation while using traditional similarity measure methods, 
which reduces the recommendation accuracy for the 
recommendation systems. To overcome the shortages of the 
traditional similarity measures under such conditions, this paper 
proposes using similarity impact factor to improve similarity 
measures in collaborative filtering recommendation algorithms. 
The experimental results show that the factor can effectively 
improve the similarity measure result while user rating data are 
extremely sparse, and significantly improve the accuracy of the 
recommendation systems. 
Keywords—Recommendation system; Collaborative filtering; 
Similarity measurement; 
I. INTRODUCTION AND MOTIVATION 
With the rapid spread of the Internet and the rapid 
development of E-commerce, it is becoming more and more 
urgent to obtain the required information quickly and 
efficiently from the mass data. Providing recommendation 
service for users is applied to a variety of portals and E-
 commerce system increasingly, which functioned as collecting 
users’ historical information to learn their interests and 
behavior patterns and analyze their behavior. 
Collaborative filtering technology is very broadly used in 
the recommendation system, which includes User-based 
Collaborative Filtering [1] and Item-based Collaborative 
Filtering [2]. This technology is based on the nearest neighbor, 
and the recommending form concludes Rating Prediction [3] 
and Top-N recommendation [4,5]. Tapestry is the first 
collaborative filtering recommendation system proposed, 
which records users’ views after reading articles, each user 
should explicitly point out the users who have the similar 
behavior [6]. GroupLens [7], Ringo [8] and Video 
Recommender [9] are also earlier collaborative filtering 
recommendation system, which provides recommendation 
service for films, news, music, by analyzing other users’ views. 
With the constant expansion of E-commerce system, all kinds 
of problems exist in the recommendation system about data 
sparsity [10], cold start [11], scalability [12]. Cold start 
problem is the extreme case of data sparsity, which cannot be 
completely avoided. Random recommendation [13] and 
popularity-based recommendation methods [14] are mainly 
methods to deal with the cold start problem. Random 
recommendation method has a broader coverage but poor user 
experience. Popularity-based recommendation methods can 
solve the problem better, but it is not individual and cannot 
solve the Long-tail. In the case that the rating data are 
extremely sparse, the accuracy of the traditional similarity 
measure methods depends on the number of common rated 
items, which leads to the result that the nearest neighbor of 
target users and items are inaccurate, and the recommendation 
quality’s decline. In order to solve the data sparseness problem, 
matrix dimensionality reduction based on collaborative 
filtering method is proposed in [15,16], which would lead to 
the lost a lot of relevant information and the result is not 
satisfactory. In reference [17], a collaborative filtering 
recommendation algorithm based on item rating prediction is 
proposed, which firstly predict the user's score of the ungraded 
items based on the similarity among items and then fill the 
item-score matrix, so that the target user's nearest neighbor can 
be calculated out and the target recommended is achieved. Due 
to the use of traditional similarity measurement methods in 
preliminary score prediction, which cannot measure the 
similarity between items or users, then the subsequent 
calculation is affected, at last, the entire recommendation 
quality would have a decline. To eliminate the error of the 
similarity measurement, using correlation weight factor to 
calculate the similarity is proposed in [18,19], and then 
influence weight is proposed in [20], Reference [21] improves 
the similarity measure method by comparing certain threshold 
with the number of common rated items. 
In this paper, an improved similarity measure method for 
collaborative filtering recommendation Algorithm is proposed 
after studying the problems in traditional similarity 
measurements in the case that the users’ rating data are 
extremely sparse. Based on the measure method on items and 
users, it is proposed to use similarity impact factor to improve 
the similarity measurement and the improved method is used to 
predict the rating of ungraded items. The experimental result 
shows that the similarity impact factor can rectify the 
deviations existed in the traditional similarity measure method 
*Corresponding author
 2013 International Conference on Cloud Computing and Big Data
 978-1-4799-2829-3/13 $26.00 © 2013 IEEE
 DOI 10.1109/CLOUDCOM-ASIA.2013.39
 297978-1-4799-2830-9/14 $31.00 © 2014 IEE
when the data is extremely sparse effectively and the entire 
quality of recommendation algorithm is improved. In section 2, 
the traditional similarity measure methods are summed up and 
the measure result is analyzed in the case that data is extremely 
sparse. In section 3, the main content of the improved 
similarity measure method in Collaborative Filtering 
Recommendation Algorithm is presented. In section 4, 
experiments on the similarity impact factor and the 
recommendation algorithm and the experimental analysis are 
showed. In the end, summary of this paper is presented. 
II. SIMILARITY MEASURE METHODS AND 
ANALYSIS 
In recommendation systems, user rating database consists 
of n  users { }1 2, , , nU U U U=  , and m  items { }1 2, , , mI I I I=  . User 
rating data can be represented as a n m?  user-item rating 
matrix, denoted by ( )R n m? , where n  denotes the n  users, m  
denotes the m  items. Let 
,a iR  be the rating of user aU  on item 
iI  ( ),a iU U I I? ? , which reflects user’s interests and preference 
for the item. 
The similarity between pairs of users or the similarity 
between pairs of items is used to predict the user’s rating on the 
item in collaborative filtering recommendation algorithms, 
which can be measured based on the users or items. The 
accuracy of the similarity measures determines the quality of 
the recommendation system. Let ( ),a bsim U U  be the similarity 
between user 
a
 U  and user bU . Firstly we need to get all items 
that be rated by 
a
 U  and bU and calculate the similarity between 
them by different similarity measure methods. Similarly, let 
( ),i jsim I I  be the similarity between iI  and jI , so that all the 
users’ rating on the item iI  and the item jI  can be obtained. 
The ( ),i jsim I I  can be calculated according to the users’ rating. 
A. Similarity measurement methods 
The similarity can be calculated between pairs of users or 
pairs of items. Among the most commonly used traditional 
metrics we have: Cosine-based Similarity, Adjusted Cosine 
Similarity and Pearson Correlation Similarity [22, 23]. In this 
paper, we set the similarity between users as an example to 
introduce traditional metrics. 
1) Cosine-based Similarity 
In Cosine-based Similarity, we regard the user rating or the 
item rating as the rating vector, where the rating of the item 
that didn’t be rated by the user is assumed to be 0. The 
similarity between users or items can be measured by 
calculating the cosine of the angle between vectors. The 
smaller is the angle, the higher is the similarity. Let ,
 a bR R
  
  be 
the rating vectors of the user 
a
 U  and user bU  on the m  
dimension space of the items. The similarity between user 
a
 U  
and user bU  can be expressed as follows: 
 ( ) ( )
 ( ) ( )
 , ,
 1
 2 2
 , ,
 1 1
 , cos ,
 m
 a k b k
 a b k
 a b a b m m
 a b
 a k b k
 k k
 R R
 R R
 sim U U ine R R
 R R
 R R
 =
 = =
 ?
 = = =
 ?
 
  
  
   
    (1) 
Where 
,a kR  denotes the rating that user aU  rated on the item 
kI . 
2) Adjusted Cosine Similarity 
To adjust the deviation between different users’ different 
rating scales in Cosine-based Similarity metric, Adjusted 
Cosine Similarity improves the result by subtracting the 
average rating of the user rating on items. Let 
a bU U
 I  be the set of 
the common items that the user 
aU  and the user bU  rated. aUI  
and 
bU
 I  respectively denote the set of items which user 
aU  and 
user bU  have rated. The similarity between the user aU  and the 
user bU  can be expressed as follows: 
 ( )
 ( )( )
 ( ) ( )
 , ,
 2 2
 , ,
 ,
 U Ua b
 U Ua b
 a k a b k b
 k I
 a b
 a k a b k b
 k I k I
 R R R R
 sim U U
 R R R R
 ?
 ? ?
 ? ?
 =
 ? ?
 
  
  (2) 
Where 
,a kR  denotes the rating that user aU  rated on the item 
kI , aR  and bR  denote the average rating of the user aU  and bU  
respectively. 
3) Pearson Correlation Similarity 
Correlation Similarity metric measures the similarity 
between pairs of users or pairs of items on their mutual rating 
and amends the deviation between different users rating scale. 
Let 
a bU U
 I  be the set of common items that user 
aU  and user bU  
have rated. The similarity between user 
a
 U  and user bU  is 
measured by Pearson correlation coefficient as follows: 
 ( )
 ( )( )
 ( ) ( )
 , ,
 2 2
 , ,
 ,
 U Ua b
 U U U Ua b a b
 a k a b k b
 k I
 a b
 a k a b k b
 k I k I
 R R R R
 sim U U
 R R R R
 ?
 ? ?
 ? ?
 =
 ? ?
 
  
  (3) 
Where 
,a kR  denotes the rating that user aU  rated on the item 
kI , aR  and bR  denote the average rating of the user aU  and 
bU . 
B. Problem analysis of similarity measures 
With the development of E-commerce system, the number 
of users and the number of items are growing exponentially, 
which results in the extreme sparsity of the user rating. In the 
large scale E-commerce systems, compared with the total 
number of items, the number of items that a user has rated is 
very scarce, and the items that different users have common 
rated are much less. In the case that the rating data are 
extremely sparse, there are some defects in the traditional 
similarity metrics. We will analyze the existing problems of the 
298
traditional similarity metric in the case of extreme sparse of 
user rating data in detail later. 
In Cosine Similarity method, while building the user-item 
rating matrix ( )R n m? , if the rating of the item is not given, 
then assuming that the rating is zero, it can effectively improve 
the performance of similarity measurement. When the number 
of users and items is big and user rating data are extremely 
sparse, it is not credible to set the unknown rating to be zero. In 
fact, users' preference for unrated items can be neither identical 
nor completely different. When user 
aU  and user bU  have no 
rating on the item, due to their rating may not be zero, it is no 
doubt that the similarity result between users are raised. When 
the rating data are extremely sparse, it will have a great impact 
on the calculation of similarity. When there is only a user given 
score on the item, setting the unknown score to zero will make 
the calculation of similarity less than the actual value. When 
the user rating data are extremely sparse, the influence will be 
smaller. Thus, in the case that user data is extremely sparse, 
Cosine Similarity measure is not effective on the calculation of 
similarity between users. In fact, the cosine similarity 
calculation value increases the similarity between users, and 
Adjusted Cosine Similarity measure has the same problem. 
In the correlation similarity measurement, let ,
 a bU U
 I I  be the 
rating item set of user ,
 a bU U . When calculating the similarity 
between user 
a
 U  and user bU , we need to obtain the common 
rating item set 
a bU U
 I of user aU  and user bU : a b a bU U U UI I I= ? , then 
calculate the similarity between user 
a
 U  and user bU  on the set 
of 
a bU U
 I with Pearson Correlation Similarity metric. However, 
the credibility of the similarity measured by the method 
depends on the size of the intersection 
a bU U
 I , the more the 
common rated items are, the higher the credibility of the 
similarity metric is. In the case that user rating are extreme 
sparse, the set of the common item rated by two users is very 
small. We can’t grantee that the similarity between users is 
relatively high even the scores of items are very similar in such 
small sets. When the rated items of users are the same, that is, 
=
 a bU U
 I I , the similarity measured based on the intersection of the 
items is more credible. When 
a b a bU U U U
 I I I< ? , it is no doubt that 
the similarity between two users measured on the intersection 
of the rated items will be increased, since the deviations of 
users’ rating data in the non-intersection portion are not 
necessarily identical. Only calculating the similarity on their 
intersection is similar to setting the deviation of their rating 
data in non-intersection portion to zero, it will lead to the result 
that the calculated similarity is higher than the actual value. 
Therefore, in the case that user rating data are extremely 
sparse, there are some defects in the correlation similarity 
metric. 
In conclusion, in the case of user rating data are extremely 
sparse, the traditional similarity metrics can’t effectively 
measure the similarity between users, and will increase the 
value of similarity in the calculation process. There is also the 
same problem in the calculation of similarity between items, 
which leads to deviations when predicting users’ rating on 
items. Reference [15,16,17] put forward filling the user-item 
matrix for improving, but it still can’t effectively measure the 
similarity. 
III. IMPROVED SIMILARITY MEASURE FOR 
COLLABORATIVE FILTERING RECOMMENDATION 
ALGORITHM 
A. Similarity impact factor 
Similarity metric can be measured on either pairs of users 
or pairs of items. In this paper, we take the former for example 
to illustrate the improved method of similarity, namely, User-
 based Collaborative Filtering recommendation method. The 
calculation of similarity between users depends on the number 
of common rated items for them. Under the condition that user 
rating data are extremely sparse, traditional metrics have 
accidental impact. In order to eliminate the impact, reference 
[18,19] proposed to add a correlation weight factor to calculate 
the similarity. Further on, reference [20] proposed to set 
influence weight. In Uncertain nearest Neighbor Collaborative 
Filtering recommendation algorithm (UNCF) [21], based on 
the adjusted cosine similarity metric, it fix similarity between 
users by comparing threshold ?  with number of the common 
rated items by users. The fixed similarity is expressed as 
follows: 
 ( ) ( )min( , )' , ,a bU Ua b a bI Isim U U sim U U??
 ?
 = ?  (4) 
The threshold ?  is manually set and the optimal threshold 
parameter is obtained through experiments. 
To solve the problems of traditional metrics under the 
condition that user rating data are extremely sparse , and 
adaptively correct the similarity between users, we propose a 
method which uses similarity impact factor ?  to correct the 
traditional similarity between users, as in 
 
=
 a b a b
 a b
 U U U U
 U U
 I I
 I I
 ?
 ?
 ?
  (5) 
Where 
aU
 I  and 
bU
 I  denote the sets of items rated by user 
a
 U  
and bU , a bU UI is the co-rated items by user aU  and bU . The 
similarity ( )' ,a bsim U U  which adjusted by the similarity impact 
factor is expressed as follows: 
 
( ) ( )' , ,a b a bsim U U sim U U?= ?
  (6) 
• When 
a b a bU U U U
 I I I= = , 1? = , it means that user 
a
 U  and 
user bU  have the same rated items, so the similarity 
between users measured by the traditional metrics can 
fully reflect the value of the similarity. Therefore the 
adjusted similarity meets: ( ) ( )' , ,a b a bsim U U sim U U= . 
299
• When 
a bU U
 I = ? , 0? = , it means that user 
a
 U  and user bU  
don’t have any common rated items, so the similarity 
between users measured by the traditional metrics can’t 
be used to denote the similarity of users. Therefore 
( )' , 0a bsim U U = . 
• When 
a b a bU U U U
 I I I? < < ? , 0 1?< < , it means that the 
common rated items are one part of all the rated items 
set. So the similarity impact factor is used to adaptively 
adjust the similarity measured by the traditional metrics 
according to the proportion of common rated items in 
all the rated items. The adjusted similarity is: 
( ) ( ) ( )' , , ,a b a b a bsim U U sim U U sim U U?= ? < . 
So we introduce the similarity impact factor ? , which is 
used to adjust the deviation caused by the traditional metrics 
under the case that user rating data are extremely sparse, to 
adaptively improve the measure of similarity. This method 
improves the quality of the recommendation. 
B. Rating prediction algorithm 
In this paper, the impact factor is used to improve the 
similarity metrics. The user’s rating on the items is predicted 
according to the similarity measured by the method, which 
shows the user’s interest in the item. As to the target user 
a
 U  
and the item iI  that is ungraded by the user, the collaborative 
filtering algorithm, which is improved by using the impact 
factor, combines the similarity between users with the 
similarity between items and predicts user’s rating on items. 
The prediction formula is expressed as follows: 
 
( ) ( )
 ( )
 ( )
 ( ) ( )
 ( )
 ,
 ,
 ,
 ' ,
 ' ,
 ' ,
 1
 ' ,
 x
 x
 y
 y
 a x x i x
 U U
 a i a
 a x
 U U
 i y a y y
 I I
 i
 i y
 I I
 sim U U R R
 R R
 sim U U
 sim I I R R
 R
 sim I I
 ?
 ?
 ?
 ?
 ?
 ?
  ? ? 
 = ? + +   
  ? ? 
 ? ? +    
 
 
 
 
  (7) 
a
 R  and 
x
 R  denote the average rating of the items that rated 
by user 
a
 U  and 
x
 U  respectively, iR  and yR  denote the average 
rating of the item iI  and item yI . In the prediction formula, we 
use the parameter ?  to balance the effects of users’ similarity 
and item similarity to predict the rating. When =0? , it is the 
Item-based Collaborative Filtering. On the contrary, =1? , it is 
the User-based Collaborative Filtering. 
IV. EXPERIMENTS AND ANALYSIS 
The proposed algorithm’s quality is experimented in this 
section, and we would analyze the experimental result and 
answer the following questions. (1) Whether the similarity 
metrics improved by the impact factor will perform better in 
prediction. (2) Whether the improved method is more precise 
when compared with other collaborative filtering algorithms, 
and which one is the best collaborative filtering 
recommendation algorithm. 
A. Datasets 
The test data in the experiment is the famous movie rating 
data provided by the research group GroupLens 
(http://www.grouplens.org), MovieLens, including 943 users’ 
100,000 rating records on 1682 movies, every user gives their 
rates on 20 films at least. The rating value is integer from 1 to 
5, and if the rate is 5, the user is very satisfied with the film. On 
the contrary, rate 1 shows that the user is not interested in the 
film. The experimental testing dataset is divided into 8 groups, 
and all the rating matrix is divided into training set and test set. 
x
  is used to denote the training set’s percentage of the total 
data set, and we used Density to denote the sparse degree of 
every sets. The information of datasets is showed in Table 1. 
TABLE I.  INFORMATION OF DATASETS 
Datasets Users Items Ratings Density x  
400u 400 1543 44317 7.18% 80% 
U1 943 1682 100000 6.305% 80% 
U2 943 1682 100000 6.305% 80% 
U3 943 1682 100000 6.305% 80% 
U4 943 1682 100000 6.305% 80% 
U5 943 1682 100000 6.305% 80% 
Ua 943 1682 100000 6.305% 90% 
Ub 943 1682 100000 6.305% 90% 
B. Metrics 
MAE (Mean Absolute Error) is selected as the metrics of 
recommendation system, which belongs to the statistical 
accuracy metrics. This method is easy to understand and can 
intuitively measure the recommendation system’s quality, 
which is the most commonly used method to evaluate the 
recommendation performance. MAE computes the average 
deviation between the actual rating and the predicted rating, 
which are used to evaluate the accuracy of prediction. 
Therefore, the smaller the MAE is, the higher the 
recommendation quality is. Let the rating set of users on items 
be { }1 2, , , Np p p , the actual corresponding rating collections be 
{ }1 2, , , Nr r r , then MAE can be defined as follows: 
 
1
 N
 i i
 i
 p r
 MAE
 N
 =
 ?
 =
 
  (8) 
C. Comparison of similarity measurements 
The experimental purpose in this chapter is to compare the 
traditional similarity measure method, the method improved by 
impact factor and the leading research recently. Improved 
similarity measure method is implemented in the user-based 
collaborative filtering (UBCF) and the item-based collaborative 
filtering (IBCF), comparing with the traditional metrics and the 
adjusted method proposed in the Uncertain Neighbors’ 
Collaborative Filtering (UNCF) [21] in the same datasets.  
300
Firstly, the adjusted method in UNCF is implemented on 
the dimension of users and items respectively, and MAE is 
selected as metrics. By gradually increasing the threshold ?  , 
the best measurement results can be obtained in each dataset. 
As show in Table 2 and Table 3, the similarity measured by the 
method fluctuates little with the change of the threshold, and 
would be stable when the threshold value reaches a certain 
value.
 TABLE II.  THE SIMILARITY MEASURE RESULT OF UNCF ON THE DEMENSION OF USERS 
Datasets =45 =110 =130 =250 =300 =350 =400 =500 
400u 0.761555 0.760466 0.760429 0.760558 0.760558 0.760558 0.760558 0.760558 
U1 0.754575 0.754013 0.753940 0.753908 0.753910 0.753910 0.753910 0.753910 
U2 0.744220 0.743289 0.743300 0.743292 0.743292 0.743292 0.743292 0.743292 
U3 0.742622 0.742154 0.742182 0.742338 0.742338 0.742338 0.742338 0.742338 
U4 0.739519 0.738808 0.738753 0.738714 0.738712 0.738712 0.738712 0.738712 
U5 0.745843 0.744807 0.744781 0.744931 0.744935 0.744935 0.744935 0.744935 
Ua 0.757429 0.756719 0.756699 0.756731 0.756756 0.756762 0.756762 0.756762 
Ub 0.770932 0.770419 0.770376 0.770399 0.770412 0.770420 0.770420 0.770420 
TABLE III.  THE SIMILARITY MEASURE RESULT OF UNCF ON THE DEMENSION OF ITEMS 
Datasets =45 =110 =130 =250 =300 =350 =400 =500 
400u 0.757414 0.756669 0.756657 0.756657 0.756657 0.756657 0.756657 0.756657 
U1 0.740862 0.739416 0.739260 0.738974 0.738929 0.738896 0.738894 0.738894 
U2 0.731676 0.730098 0.729851 0.729406 0.729355 0.729352 0.729352 0.729352 
U3 0.733337 0.732218 0.732009 0.731568 0.731497 0.731497 0.731497 0.731497 
U4 0.728813 0.727616 0.727532 0.727374 0.727338 0.727338 0.727338 0.727338 
U5 0.736016 0.734801 0.734704 0.734587 0.734544 0.734525 0.734525 0.734525 
Ua 0.740762 0.740680 0.740546 0.740515 0.740482 0.740460 0.740452 0.740452 
Ub 0.760143 0.758830 0.758641 0.758256 0.758165 0.758090 0.758044 0.758044 
 
400u u1 u2 u3 u4 u5 ua ub0.8
 0.805
 0.81
 0.815
 0.82
 0.825
 0.83
 0.835
 DataSets
 M
 AE
 UBCF_cosine
  
 
Cosine Cosine_
 400u u1 u2 u3 u4 u5 ua ub
 0.73
 0.735
 0.74
 0.745
 0.75
 0.755
 0.76
 0.765
 0.77
 0.775
 0.78
 DataSets
 M
 AE
 UBCF_Adjust_cosine
  
 
Adjust_cosine Adjust_cosine_UNCF Adjust_cosine_
  
400u u1 u2 u3 u4 u5 ua ub
 0.73
 0.74
 0.75
 0.76
 0.77
 0.78
 0.79
 DataSets
 M
 AE
 UBCF_pearson_correlation
  
 
Pearson_correlation Pearson_correlation_
 400u u1 u2 u3 u4 u5 ua ub
 0.72
 0.74
 0.76
 0.78
 0.8
 0.82
 0.84
 DataSets
 M
 AE
 UBCF
  
 
cosine
 cosine_
 Adjust_cosine
 Adjust_cosine_
 adjust_cosine_UNCF
 pearson_correlation
 pearson_correlation_
  
Fig. 1. Comparison of the similarity measure methods in UBCF 
301
We verified the precision of the improved similarity 
measurement by comparing with other similarity 
measurements. Abscissa indicates the data sets that used in the 
experiment, and the ordinate represents the MAE result. The 
similarity results are showed respectively based on users and 
items, as illustrated on Fig 1 and Fig 2. It can be seen that the 
MAE of the similarity measures improved by the impact factor 
is lower than that of other measures, so the proposed method is 
better than the method of using a threshold in the UNCF. It 
means that by using the impact factor, the similarity metrics are 
more precise and the recommended result is better. 
400u u1 u2 u3 u4 u5 ua ub
 0.76
 0.77
 0.78
 0.79
 0.8
 0.81
 0.82
 0.83
 DataSets
 M
 AE
 IBCF_cosine
  
 
Cosine Cosine_
 400u u1 u2 u3 u4 u5 ua ub
 0.71
 0.72
 0.73
 0.74
 0.75
 0.76
 0.77
 DataSets
 M
 AE
 IBCF_Adjust_cosine
  
 
Adjust_cosine Adjust_cosine_UNCF Adjust_cosine_
  
400u u1 u2 u3 u4 u5 ua ub
 0.72
 0.73
 0.74
 0.75
 0.76
 0.77
 0.78
 DataSets
 M
 AE
 IBCF_pearson_correlation
  
 
Pearson_correlation Pearson_correlation_
 400u u1 u2 u3 u4 u5 ua ub
 0.7
 0.72
 0.74
 0.76
 0.78
 0.8
 0.82
 DataSets
 M
 AE
 IBCF
  
 
cosine
 cosine_
 Adjust_cosine
 Adjust_cosine_
 adjust_cosine_UNCF
 pearson_correlation
 pearson_correlation_
  
Fig. 2. Comparison of the similarity measure methods in IBCF 
0 0.1 0.2 0.3 0.4 0.5 0.6 0.7 0.8 0.9 10.72
 0.74
 0.76
 0.78
 0.8
 0.82
 0.84
 M
 AE
 U1
  
 
Cosine
 Cosine_
 Adjust_cosine
 Adjust_cosine_
 Pearson_correlation
 Pearson_correlation_
 0 0.1 0.2 0.3 0.4 0.5 0.6 0.7 0.8 0.9 10.7
 0.72
 0.74
 0.76
 0.78
 0.8
 M
 AE
 U2
  
 
Cosine
 Cosine_
 Adjust_cosine
 Adjust_cosine_
 Pearson_correlation
 Pearson_correlation_
 0 0.1 0.2 0.3 0.4 0.5 0.6 0.7 0.8 0.9 1
 0.72
 0.74
 0.76
 0.78
 0.8
 0.82
 M
 AE
 U3
  
 
Cosine
 Cosine_
 Adjust_cosine
 Adjust_cosine_
 Pearson_correlation
 Pearson_correlation_
  
0 0.1 0.2 0.3 0.4 0.5 0.6 0.7 0.8 0.9 1
 0.72
 0.74
 0.76
 0.78
 0.8
 0.82
 M
 AE
 U4
  
 
Cosine
 Cosine_
 Adjust_cosine
 Adjust_cosine_
 Pearson_correlation
 Pearson_correlation_
 0 0.1 0.2 0.3 0.4 0.5 0.6 0.7 0.8 0.9 1
 0.72
 0.74
 0.76
 0.78
 0.8
 0.82
 M
 AE
 U5
  
 
Cosine
 Cosine_
 Adjust_cosine
 Adjust_cosine_
 Pearson_correlation
 Pearson_correlation_
 0 0.1 0.2 0.3 0.4 0.5 0.6 0.7 0.8 0.9 1
 0.72
 0.74
 0.76
 0.78
 0.8
 0.82
 M
 AE
 Average
  
 
Cosine
 Cosine_
 Adjust_cosine
 Adjust_cosine_
 Pearson_correlation
 Pearson_correlation_
  
Fig. 3. Comparison of accuracy of recommendation algorithm 
D. Recommendation quality comparison 
The experimental purpose in this chapter is to validate the 
effectiveness of the proposed algorithm by comparing the 
collaborative filtering recommendation algorithms improving 
the similarity metrics with that using the traditional similarity 
measures. We implement collaborative filtering 
recommendation algorithms combining the similarity between 
users with the similarity between items, which using the 
traditional similarity metrics and the improved similarity 
metrics with impact factor. The datasets U1-U5 are used in the 
experiments. The results of the five experiments and the 
average result of them are showed in Fig 3, in which, abscissa 
302
represents the value of parameter ?  and ordinates represents 
the MAE results. 
As Fig 3 shows, the MAE of the algorithm proposed in this 
paper is lower than the traditional collaborative filtering 
recommendation algorithm in all conditions above. So it can be 
concluded that using impact factor to improve the similarity 
metrics can significantly improve the accuracy of 
recommendation. The collaborative filtering recommendation 
using the adjusted similarity measure that improved by the 
impact factor have the best performance. 
V. CONCLUSION 
Firstly, in order to deal with the problem that user rating 
data are extremely sparse, this paper analyzed the problems of 
the traditional similarity measurements that their measurement 
accuracy depends on the number of common ratings of users or 
items. Then it is proposed to improve Collaborative Filtering 
Recommendation Algorithm by using similarity impact factor, 
which can reduce the negative impact due to data sparsity. The 
experimental results show that the proposed similarity impact 
factor can improve the accuracy of the similarity measures 
effectively, and the improved collaborative filtering 
recommendation algorithms are more precise. 
ACKNOWLEDGMENT 
This work is partially supported by NSFC(No.61003054, 
No.61170020); Science and Technology Support Program of 
Suzhou(No. SG201257); Science and Technology Support 
program of Jiangsu province(No. BE2012075); Open fund of 
Jiangsu Province Software Engineering R&D Center (No. 
SX201205); the Opening Project of Suzhou High-tech Key 
Laboratory of Cloud Computing & Intelligent Information 
Processing(No. SXZ201302). 
REFERENCES 
[1] Qi Qi, Zhenyu Chen, Jia Liu, Chengfeng Hui, and Qing Wu, “Using 
inferred tag ratings to improve user-based collaborative filtering,” New 
York: Proceedings of the 27th Annual ACM Symposium on Applied 
Computing, pp. 2008-2013, March 2012. 
[2] SuyunWei, Ning Ye, Shuo Zhang , Xia Huang, and Jian Zhu, 
“Collaborative Filtering Recommendation Algorithm Based on Item 
Clustering and Global Similarity,” Business Intelligence and Financial 
Engineering (BIFE), 2012 Fifth International Conference on. IEEE, pp. 
69-72, August 2012. 
[3] Nathan N. Liu, Min Zhao, Evan Xiang, and Qiang Yang. “Online 
evolutionary collaborative filtering,” New York: Proceedings of the 
fourth ACM conference on Recommender systems, pp. 95-102, 
September 2010. 
[4] Heung-Nam Kim, Ae-Ttie Ji, Inay Ha, Geun-Sik Jo, “Collaborative 
filtering based on collaborative tagging for enhancing the quality of 
recommendation,” Electronic Commerce Research and Applications, 
vol. 9,no. 1, pp. 73-83, 2010. 
[5] N. Hurley, M. Zhang, “Novelty and diversity in top-N 
recommendations-analysis and evaluation,” ACM Transactions on 
Internet Technology, vol. 10, no. 4, pp. 1-29, 2011. 
[6] Goldberg D, Nichols D, Oki B, Terry D, “Using collaborative filtering to 
weave an information tapestry,” Communications of the ACM, vol. 35, 
no. 12, pp. 61-70, 1992. 
[7] Resnick P, Iacovou N, Suchak M, Bergstorm P, and Riedl J, 
“GroupLens: an open architecture for collaborative filtering of netnews,” 
Proceedings of the 1994 ACM conference on Computer supported 
cooperative work, pp. 175-186, October 1994. 
[8] Shardanand, Upendra, and Pattie Maes, “Social information filtering: 
algorithms for automating “word of mouth”,” Proceedings of the 
SIGCHI conference on Human factors in computing systems, pp.210-
 217, 1995. 
[9] Hill W, Stead L, Rosenstein M, and Furnas, G, “Recommending and 
evaluating choices in a virtual community of use,” Proceedings of the 
SIGCHI conference on Human factors in computing systems, pp.194-
 201, 1995. 
[10] Zan Huang, Hsinchun Chen, and Naniel Zeng, “Applying associative 
retrieval techniques to alleviate the sparsity problem in collaborative 
filtering,” ACM Transactions on Information Systems (TOIS), vol. 22, 
no. 1, pp. 116-142, 2004. 
[11] Jesús Bobadilla, Fernando Ortega, Antonio Hernando, Jesús Bernal, “A 
collaborative ltering approach to mitigate the new user cold start 
problem,” Knowledge-Based Systems, vol. 26, pp. 225-238, 2012. 
[12] Yehuda Koren, Robert Bell, “Advances in collaborative filtering,” US: 
Recommender Systems Handbook, pp. 145-186 ,2011. 
[13] Benjamin Marlin, Richard S. Zemel, Sam Roweis, Malcolm Slaney 
“Collaborative Filtering and the Missing at Random Assumption,” 
Computer Science, vol. 34, no. 3, pp. 78-81, 2012. 
[14] Cheng-Jun Zhang, An Zeng, “Behavior patterns of online users and the 
effect on information filtering,” Physica A: Statistical Mechanics and its 
Applications, vol. 391, no. 4, pp. 1822-1830, 2012. 
[15] ZHOU Jun-Feng, TAN Xian, and GUO Jing-Feng, “An Optimized 
Collaborative Filtering Recommendation Algorithm”, Journal of 
Computer Research and Development, vo1. 41, no. 10, pp. 1842-1847, 
October 2004.[???, H?, ???, “???? 3 5???????®
 ”, ????????, 41(10), 1842-1847, 2004]. 
[16] ZHANG Guang-Wei, LI De-Yi, LI Peng, KANG Jian-Chu, CHEN Gui-
 Sheng, “A Collaborative Filtering Recommendation Algorithm Based on 
Cloud Model,” Journal of Software, vol. 18, no. 10, pp. 2403-2411, 
2007.[???, ???, ??, ???, ???, “????? 3 5???
 ????®”, ????, 18(10), 2403-2411, 2007]. 
[17] Deng AL, Zhu YY, Shi BL, “A Collaborative Filtering 
Recommendation Algorithm Based on Item Rating Prediction”, Journal 
of Software, vol. 14, no. 9, pp. 1621-1628, 2003.[? 3 3?, ???, ??
 ?, “???O???I 3 5???????®”, ????, 14(9), 
1621-1628, 2003]. 
[18] Herlocker J, Konstan J A, Riedl J, “An empirical analysis of design 
choices in neighborhood-based collaborative filtering algorithms,” 
Information retrieval, vol. 5, no. 4, pp. 287-310, 2002. 
[19] McLaughlin M R, Herlocker J L, “A collaborative filtering algorithm 
and evaluation metric that accurately model the user experience,” 
Proceedings of the 27th annual international ACM SIGIR conference on 
Research and development in information retrieval. pp. 329-336, July 
2004. 
[20] Hao Ma, Irwin King, and Michael R. Lyu, “Effective missing data 
prediction for collaborative filtering,” Proceedings of the 30th annual 
international ACM SIGIR conference on Research and development in 
information retrieval, pp. 39-46, July 2007. 
[21] HUANG Chuang-Guang, YIN Jian, WANG Jing, LIU Yu-Bao, WANG 
Jia-Hai, “Uncertain Neighbors’ Collaborative Filtering Recommendation 
Algorithm,” Chinese Journal of Computers, vol. 33, no. 8, pp. 1369-
 1377, August 2010.[ ???, ??, N?, ? 8 5?,  8 7?u, “????
 ? 3 5???????®”, ?????, 33(8), 1369-1377, 2010]. 
[22] J. Bobadilla, F. Ortega, A. Hernando, A. Gutiérrez, “Recommender 
systems survey,” Knowledge-Based Systems, vol. 46, pp. 109–132, 
2013. 
[23] Xiang Cui, Guisheng Yin, “Method of collaborative filtering based on 
uncertain user interests cluster,” Journal of Computers, vol. 8, no. 1, pp. 
186-193, January 2013 
 
303
